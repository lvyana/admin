"use strict";(self.webpackChunkreact_app=self.webpackChunkreact_app||[]).push([[4750],{94805:function(e,t,n){var i=n(1413),r=(n(72791),n(36473)),d=n(80184);t.Z=function(e){var t=e.bordered,n=void 0!==t&&t,l=e.children,a=e.style,c=void 0===a?{}:a,s=e.hoverable,o=void 0!==s&&s,u=e.className;return(0,d.jsx)(d.Fragment,{children:(0,d.jsx)(r.Z,{hoverable:o,bordered:n,bodyStyle:(0,i.Z)({padding:"16px"},c),className:u,children:l})})}},68792:function(e,t,n){n.d(t,{Z:function(){return u}});var i=n(14916),r=(n(72791),n(66579)),d=n(85060),l=n(1413),a=n(22044),c=function(e){var t=e.list,n=e.styleConfig,i=e.style,r=e.bordered,d=(0,a.Z)().token,c={marginBottom:24,background:d.colorFillAlter,borderRadius:d.borderRadiusLG,border:"none"};return"1"===n?{list:t.map((function(e){return(0,l.Z)((0,l.Z)({},e),{},{style:c})})),style:{background:d.colorBgContainer},bordered:!1}:{list:t,styleConfig:n,style:i,bordered:r}},s=n(80184),o=i.Z.Panel,u=function(e){var t=e.list,n=e.defaultActiveKey,l=e.styleConfig,a=e.bordered,u=void 0===a||a,h=e.onChange,y=e.expandIcon,v=e.style,f=(0,r.C)(d.h2),p=c({list:t,styleConfig:l,style:v,bordered:u});return(0,s.jsx)("div",{children:(0,s.jsx)(i.Z,{bordered:p.bordered,defaultActiveKey:n,onChange:h,size:f,expandIcon:y,style:p.style,children:p.list.map((function(e){return(0,s.jsx)(o,{header:e.header,style:e.style,children:e.content},e.key)}))})})}},17524:function(e,t,n){n.r(t);var i=n(29439),r=n(72791),d=n(87309),l=n(94805),a=n(68792),c=n(80184);t.default=function(){var e=(0,r.useReducer)((function(e,t){var n=t.type,i=t.value;return"add"===n?e+i:"subtract"===n?e-i:"multiplication"===n?e*i:"division"===n?e/i:e}),"0",(function(e){return Number(e)})),t=(0,i.Z)(e,2),n=t[0],s=t[1],o=[{header:"什么是useReducer",content:(0,c.jsx)("div",{children:"useReducer 是 React 推出的一个扩展 Hook ,如下代码所示,它接受 (state, action) ⇒ newState 的一个 reduce ,并返回当前的 state 以及与其配套的 dispatch 方法,让开发人员能够更好的管理代码中的数据"}),key:"0"},{header:"介绍useReducer变量",content:(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("div",{children:"const [state, dispatch] = useReducer(reducer, initialState)"}),(0,c.jsx)("div",{children:"1、initialState: 需要我们自己定义,是我们要管理的一个初始变量.可以是一个数字,字符串,数组,对象等"}),(0,c.jsx)("div",{children:"2、reducer: 是我们自己定义的一个纯函数,它的作用就是通过定义好的逻辑来改变 initialState 初始变量,为我们的项目服务"}),(0,c.jsx)("div",{children:"3、state: reduce 里面的逻辑处理数据之后,会返回一个最新的值,就是这个state"}),(0,c.jsx)("div",{children:"4、dispatch: 触发器, reducer 中会定义很多条件,具体要使用哪一个条件来改变 initialState 变量呢,就是要通过触发器来控制"}),(0,c.jsx)("div",{children:"5、init: 处理初始状态的函数。如果没有指定,初始状态将被设置为 initialState 。否则初始状态被设置为调用 init(initialState) 的结果"})]}),key:"1"}];return(0,c.jsxs)(l.Z,{children:[n,(0,c.jsx)(d.ZP,{type:"link",onClick:function(){return s({type:"add",value:1})},children:"+"}),(0,c.jsx)(d.ZP,{type:"link",onClick:function(){return s({type:"subtract",value:1})},children:"-"}),(0,c.jsx)(d.ZP,{type:"link",onClick:function(){return s({type:"multiplication",value:2})},children:"*"}),(0,c.jsx)(d.ZP,{type:"link",onClick:function(){return s({type:"division",value:2})},children:"/"}),(0,c.jsx)(a.Z,{styleConfig:"1",defaultActiveKey:["0"],list:o})]})}}}]);