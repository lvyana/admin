{"version":3,"file":"static/js/dnd.b6ea6bb197fb19a9fc4f.js","mappings":"4JAWaA,EAAmB,SAAIC,EAAUC,EAAWC,GACxD,IAAMC,EAAMC,KAAKC,MAAMD,KAAKE,UAAUN,IAEtC,OADAG,EAAII,OAAMC,MAAVL,EAAG,CAAQD,EAAG,GAACO,QAAAC,EAAAA,EAAAA,GAAKP,EAAII,OAAON,EAAG,MAC3BE,CACR,C,iKCOaQ,EAAY,WAKZC,EAAqB,mB,qBCE5BC,GAAUC,EAAAA,EAAAA,eAAqF,MAE/FC,EAAY,CACjBC,SAAU,GACVC,uBAAmBC,GAGdC,EAAsB,SAACC,EAAOC,GACnC,IAAQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,MAAa,aAATD,GACHE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYJ,GAAK,IAAEJ,SAAUO,IACV,sBAATD,GACVE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYJ,GAAK,IAAEH,kBAAmBM,IAEhCH,CACR,EAYA,EAVwC,SAAHK,GAAsB,IAAhBC,EAAQD,EAARC,SAC1CC,GAA0BC,EAAAA,EAAAA,YAAWT,EAASJ,GAAUc,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDP,EAAKS,EAAA,GAAEE,EAAQF,EAAA,GAEhBN,GAAQS,EAAAA,EAAAA,UAAQ,iBAAO,CAAEZ,MAAAA,EAAOW,SAAAA,EAAU,GAAG,CAACX,IAEpD,OAAOa,EAAAA,EAAAA,KAACpB,EAAQqB,SAAQ,CAACX,MAAOA,EAAMG,SAAEA,GACzC,E,WCrCaS,EAAiB,CAC7B,CACCC,KAAM,MACNd,KFNM,SEQP,CACCc,KAAM,MACNd,KFRS,YEUV,CACCc,KAAM,MACNd,KFbO,UEeR,CACCc,KAAM,MACNd,KFfS,YEiBV,CACCc,KAAM,OACNd,KFlBO,WEgDHe,EAAsC,SAAHZ,GAAwB,IAAlBW,EAAIX,EAAJW,KAAMd,EAAIG,EAAJH,KAC5CgB,GAAUC,EAAAA,EAAAA,KAAVD,MAEFE,GAAUC,EAAAA,EAAAA,YAAW5B,GACrBG,EAAWwB,aAAO,EAAPA,EAASpB,MAAMJ,SAEhC0B,GAA+BC,EAAAA,EAAAA,IAC9B,iBAAO,CACNrB,KAAMX,EACNiC,KAAM,CAAER,KAAMd,GACduB,IAAK,SAACD,EAAME,GACX,IAAMC,EAAaD,EAAQE,gBAC3B,GAAIJ,GAAQG,EAAY,CAEvB,IAAczB,EAASsB,EAAfR,KAEJa,EAAcjC,GAAY,GACjB,WAATM,EACH2B,EAAYC,KAAK,CAChB5B,KAAMA,EACNc,KAAM,QAASpB,aAAQ,EAARA,EAAUmC,QACzBC,KAAKC,EAAAA,EAAAA,KACLC,KAAM,GACNC,OAAQ,CACP,CACCnB,KAAM,KACNd,KAAM,KACNkC,QAAS,UACTF,KAAM,GACNG,WAAY,GACZC,SAAU,GACVC,GAAI,QAKPV,EAAYC,KAAK,CAChB5B,KAAMA,EACNsC,MAAO,QACPxB,KAAM,QAASpB,aAAQ,EAARA,EAAUmC,QACzBU,UAAU,EACVT,KAAKC,EAAAA,EAAAA,KACLS,OAAQ,EACRR,KAAM,GACNS,SAAU,EACVC,QAAS,MAKXxB,SAAAA,EAAST,SAAS,CAAET,KAAM,WAAYC,MAAO0B,GAC9C,CACD,EACAgB,QAAS,SAACnB,GAAO,MAAM,CACtBoB,WAAYpB,EAAQoB,aACpBC,UAAWrB,EAAQsB,eACnB,EACD,GACD,CAACpD,IACDqD,GAAAvC,EAAAA,EAAAA,GAAAY,EAAA,GArDsB4B,GAAJD,EAAA,GAAVH,WAAkBG,EAAA,IAuD3B,OACCpC,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,CAAA7C,UACCO,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZM,EAAAA,EAAAA,UACA,kBCvHiByC,GDyHfxC,EAAAA,EAAAA,KAAA,OACCyC,IAAKJ,EACL,yBACAK,UAAU,yDACVC,MAAO,CAAEC,YAAavC,EAAMwC,oBAAqBpD,SAChDU,IC7HF2C,EAAe,WACpB,IAAQzC,GAAUC,EAAAA,EAAAA,KAAVD,MAER0C,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAApD,EAAAA,EAAAA,GAAAkD,EAAA,GAAtCG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAOpBG,EAAmB,WACxBD,GAAW,EACZ,EAEA,OACCnD,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,CAAA7C,SACE4D,EAAAA,aAAmBb,EAAW,CAC9BG,OAAKpD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDiD,EAAUc,MAAMX,OAAK,IACxBY,gBAAiBL,EAAU7C,EAAMmD,eAAiB,KAEnDC,YAhBiB,WACfP,GACJC,GAAW,EACZ,EAcGO,aAAcN,EACdO,UAAWP,KAIf,GACOpD,EAAAA,EAAAA,KAAC8C,EAAY,IA7BA,IAACN,EACfM,CD+HA,GACF,CAACzC,OAKN,EAEA,EAhGqB,WACpB,IAAQA,GAAUC,EAAAA,EAAAA,KAAVD,MAER,OACCL,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,uCAAuCC,MAAO,CAAEC,YAAavC,EAAMwC,oBAAqBpD,UACtGO,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CAACC,OAAQ,GAAGpE,SACdS,EAAe4D,KAAI,SAACnD,GACpB,OAAOX,EAAAA,EAAAA,KAACI,EAAY,CAACD,KAAMQ,EAAKR,KAAMd,KAAMsB,EAAKtB,MAAWsB,EAAKtB,KAClE,OAIJ,E,wHErDa0E,EAAa,SAACC,GAC1B,OAAOC,EAAAA,EAAAA,IAAiC,CACvCD,IAAK,eACLE,OAAQ,OAEV,ECGaC,EAAuB,SAAChD,EAAuBiD,GAC3D,IAAM7D,GAAUC,EAAAA,EAAAA,YAAW5B,GAErByF,EAAYC,EAAAA,EAAKC,SAAS,CAACpD,GAAMiD,IAEvCI,EAAAA,EAAAA,YAAU,WACT,GAAIjE,SAAAA,EAASpB,MAAMH,kBAAmB,CACrC,IAAMgC,EAAcT,EAAQpB,MAAMJ,SAAS+E,KAAI,SAACnD,GAC/C,OAAIJ,aAAO,EAAPA,EAASpB,MAAMH,qBAAsB2B,EAAKQ,KAC7C5B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYoB,GAAI,IAAA8D,EAAAA,EAAAA,GAAA,GAAGtD,EAAMkD,IAEnB1D,CACR,IAEAJ,EAAQT,SAAS,CAAET,KAAM,WAAYC,MAAO0B,GAC7C,CACD,GAAG,CAACqD,GACL,EA+CaK,EAAc,WAoD1B,MAAO,CAAEC,YAnDW,SAACC,GACpB,IAAQvF,EAAmGuF,EAAnGvF,KAAM8B,EAA6FyD,EAA7FzD,IAAKE,EAAwFuD,EAAxFvD,KAAMM,EAAkFiD,EAAlFjD,MAAOC,EAA2EgD,EAA3EhD,SAAUN,EAAiEsD,EAAjEtD,OAAQO,EAAyD+C,EAAzD/C,OAAQgD,EAAiDD,EAAjDC,YAAaC,EAAoCF,EAApCE,KAAMC,EAA8BH,EAA9BG,UAAW5E,EAAmByE,EAAnBzE,KAAM2B,EAAa8C,EAAb9C,SAC1Fd,EAAyD,CAC5D3B,KAAAA,EACA8B,IAAAA,EACAE,KAAAA,EACAM,MAAAA,EACAxB,KAAAA,EACAyB,SAAAA,EACAoD,UAAW,CAAE1D,OAAAA,IAwCd,OApCCN,EADc,IAAXa,GACQtC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPyB,GAAW,IACdiE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAASN,OAGzBtF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyB,GAAW,IAAEiE,MAAO,CAAC,CAAEC,UAAU,MAGjDJ,IACH9D,GAAWzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPyB,GAAW,IACdiE,MAAM,GAADzG,QAAAC,EAAAA,EAAAA,GACAuC,EAAYiE,OAAS,IAAI,CAC7B,CACCG,UAAW,SAACC,EAAS/F,GACpB,IAAMgG,EAAMR,GAAQ,IAAIS,OAAOT,EAAKU,UAAU,EAAGV,EAAK5D,OAAS,IAE/D,MAAc,KAAV5B,SAAgBA,GAGP,KAARgG,GAAeA,SAAAA,EAAKG,KAAKnG,IAAoB,KAAVA,EAFhCoG,QAAQC,UAGPD,QAAQE,OAAO,IAAIC,MAAMd,GAKnC,QAMAjD,IACHd,GAAWzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyB,GAAW,IAAE8E,OAAQ,CAAEhE,SAAU,CAAET,KAAMS,GAAYiE,WAAY,CAAE1E,KAAM,GAAKS,OAG3Fd,CACR,EAED,ECxEMgF,EAA2C,SAAHxG,GAA+B,IAAzByG,EAAUzG,EAAVyG,WAAYC,EAAK1G,EAAL0G,MACvD7F,GAAUC,EAAAA,EAAAA,KAAVD,MAEFE,GAAUC,EAAAA,EAAAA,YAAW5B,GAEnB+F,EAAgBD,IAAhBC,YAEFlC,GAAM0D,EAAAA,EAAAA,QAAuB,MAEnCC,GAA8BC,EAAAA,EAAAA,GAC7B,CACCC,OAAQ3H,EACRqD,QAAO,SAACnB,GACP,MAAO,CACNqB,UAAWrB,EAAQsB,eAErB,EACAoE,MAAK,SAAC5F,EAAME,GAAU,IAAD2F,EACpB,GAAK/D,EAAIgE,QAAT,CAGA,IAAMC,EAAa/F,EAAsCuF,MACnDS,EAAaT,EAEnB,GAAIQ,IAAcC,EAAlB,CAIA,IAAMC,EAA+B,QAAdJ,EAAG/D,EAAIgE,eAAO,IAAAD,OAAA,EAAXA,EAAaK,wBAEjCC,GAAgBF,EAAkBG,OAASH,EAAkBI,KAAO,EAEpEC,EAAepG,EAAQqG,kBAE7B,GAAID,EAAc,CACjB,IAAME,EAAeF,EAAahJ,EAAI2I,EAAkBI,IAKxD,GAAIN,EAAYC,GAAcQ,EAAeL,EAC5C,OAGD,GAAIJ,EAAYC,GAAcQ,EAAeL,EAC5C,MAEF,CAKA,IAAM9F,GAAclD,EAAAA,EAAAA,IAAiByC,aAAO,EAAPA,EAASpB,MAAMJ,WAAY,GAAI4H,EAAYD,GAEhFnG,SAAAA,EAAST,SAAS,CAAET,KAAM,WAAYC,MAAO0B,GAAe,KAK3DL,EAAsCuF,MAAQS,CAjC/C,CANA,CAwCD,GAED,CAACpG,aAAO,EAAPA,EAASpB,MAAMJ,WAChBqI,GAAAvH,EAAAA,EAAAA,GAAAuG,EAAA,GAtDQlE,EAASkF,EAAA,GAATlF,UAAamF,EAAID,EAAA,GAwD1B3G,GAAwCC,EAAAA,EAAAA,IACvC,iBAAO,CACNrB,KAAMV,EACNgC,KAAM,WACL,MAAO,CAAEe,GAAIuE,EAAW9E,IAAK+E,MAAAA,EAC9B,EACAlE,QAAS,SAACnB,GAAO,MAAM,CACtBqB,UAAWrB,EAAQsB,eACnBF,WAAYpB,EAAQoB,aACpB,EACD,GACD,CAACiE,IACD9D,GAAAvC,EAAAA,EAAAA,GAAAY,EAAA,GAZQwB,EAAUG,EAAA,GAAVH,WAAcI,EAAID,EAAA,GAcrBkF,GAd8BlF,EAAA,GAcpBH,EAAa,EAAI,GACjCI,EAAKgF,EAAK5E,IAEV,IAAA8E,EAAejD,EAAAA,EAAKkD,UAAbpD,GAAsBvE,EAAAA,EAAAA,GAAA0H,EAAA,GAAlB,GAGLxI,EAA+B,EAAAQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMoF,EAAYsB,IAAW,IAAE5E,KAAM,MAgD1E,OACCoG,EAAAA,EAAAA,MAAC7D,EAAAA,EAAG,CACH8D,QAhDuB,WACpBzB,EAAW9E,OAAQZ,aAAO,EAAPA,EAASpB,MAAMH,qBACtCuB,SAAAA,EAAST,SAAS,CAAET,KAAM,oBAAqBC,MAAO2G,EAAW9E,MAClE,EA8CEuB,UACC,gDAA+C,GAAAlE,QAAM+B,aAAO,EAAPA,EAASpB,MAAMH,qBAAsBiH,EAAW9E,IAAM,YAAc,IAE1HwB,MAAO,CACN2E,QAAAA,EACAK,OAAQ,IACRpE,iBAAiBhD,aAAO,EAAPA,EAASpB,MAAMH,qBAAsBiH,EAAW9E,IAAMd,EAAMmD,eAAiB,GAC9FZ,YAAavC,EAAMwC,oBAEpB,kBAAiBX,EACjBO,IAAKA,EAAIhD,SAAA,EACTO,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACqF,KAAK,OAAMnI,UACfO,EAAAA,EAAAA,KAAC6H,EAAAA,EAAK,CAACzD,KAAMA,EAAMrF,SAAUA,OAE9B0I,EAAAA,EAAAA,MAAA,OAAK/E,UAAU,wCAAuCjD,SAAA,EACrDO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAM,CAACzI,KAAK,OAAO0I,MAAM/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAmB,IAAKN,QAAS,SAACO,GAAC,OA1DxC,SAACA,GACzBA,EAAEC,kBAEF,IAAMnJ,GACLwB,aAAO,EAAPA,EAASpB,MAAMJ,SAASoJ,QAAO,SAACxH,GAC/B,OAAOA,EAAKQ,MAAQ8E,EAAW9E,GAChC,MAAM,GAEPZ,SAAAA,EAAST,SAAS,CAAET,KAAM,WAAYC,MAAOP,IAEzCkH,EAAW9E,OAAQZ,aAAO,EAAPA,EAASpB,MAAMH,qBACrCuB,SAAAA,EAAST,SAAS,CAAET,KAAM,oBAAqBC,WAAOL,IAExD,CA6CsEmJ,CAAiBH,EAAE,KACtFjI,EAAAA,EAAAA,KAAC8H,EAAAA,GAAM,CAACzI,KAAK,OAAO0I,MAAM/H,EAAAA,EAAAA,KAACqI,EAAAA,EAAY,IAAKX,QAAS,SAACO,GAAC,OA3CnC,SAACA,GACvBA,EAAEC,kBACF,IAAMlH,GACLT,aAAO,EAAPA,EAASpB,MAAMJ,SAASuJ,QAAqB,SAACC,EAAM5H,GACnD,OAAIsF,EAAW9E,MAAQR,EAAKQ,IACrB,GAAN3C,QAAAC,EAAAA,EAAAA,GACI8J,GACA,CACF5H,GAAIpB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEAoB,GAAI,IACPR,KAAM,QAASpB,aAAQ,EAARA,EAAUmC,QACzBC,KAAKC,EAAAA,EAAAA,SAKF,GAAN5C,QAAAC,EAAAA,EAAAA,GAAW8J,GAAI,CAAE5H,GAEnB,GAAG,MAAO,GAEXJ,SAAAA,EAAST,SAAS,CAAET,KAAM,WAAYC,MAAO0B,GAC9C,CAqB+DwH,CAAeP,EAAE,SAIjF,EACA,EA/LqB,WACpB,IAAQ5H,GAAUC,EAAAA,EAAAA,KAAVD,MAEFE,GAAUC,EAAAA,EAAAA,YAAW5B,GAE3B6J,GAAoCpC,EAAAA,EAAAA,GAAQ,CAC3CC,OAAQ5H,EACR2I,KAAM,iBAAO,CAAElH,KAAM,eAAgB,EACrC6B,QAAS,SAACnB,GAAO,MAAM,CACtB6H,OAAQ7H,EAAQ6H,SAChBC,QAAS9H,EAAQ8H,UACjB,IACAC,GAAA/I,EAAAA,EAAAA,GAAA4I,EAAA,GAAAI,EAAAD,EAAA,GAP0BvB,GAAbwB,EAANH,OAAeG,EAAPF,QAAeC,EAAA,IAShC,OACC5I,EAAAA,EAAAA,KAAA,OACCyC,IAAK4E,EACL,cAAY,eACZ3E,UAAU,yCACVC,MAAO,CAAEmG,UAAW,IAAKlG,YAAavC,EAAMwC,oBAAqBpD,UACjEO,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CAAAnE,SACFc,aAAO,EAAPA,EAASpB,MAAMJ,SAAS+E,KAAI,SAACnD,EAAMoI,GACnC,OACC/I,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAMV,EAAKU,KAAK5B,UACpBO,EAAAA,EAAAA,KAACgG,EAAgB,CAACC,WAAYtF,EAAMuF,MAAO6C,KADjBpI,EAAKQ,IAIlC,OAIJ,E,6ECqEA,EA5FoD,SAAH3B,GAAoC,IAA9BwJ,EAAOxJ,EAAPwJ,QAASC,EAAazJ,EAAbyJ,cA4BzDC,EAAgB,SAAHC,GAA0D,IAApDH,EAAOG,EAAPH,QAAS7H,EAAGgI,EAAHhI,IAAK7B,EAAK6J,EAAL7J,MAAOoC,EAAEyH,EAAFzH,GAC7C,OAAOsH,EAAQlF,KAAI,SAACxC,GACnB,OAAIA,EAAOI,KAAOA,GACjBnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY+B,GAAM,IAAAmD,EAAAA,EAAAA,GAAA,GAAGtD,EAAM7B,IAErBgC,CACR,GACD,EAEA,OACCtB,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,CAAA7C,SACEuJ,EAAQlF,KAAI,SAACxC,EAAQyH,GACrB,OACCtB,EAAAA,EAAAA,MAAC7D,EAAAA,EAAG,CAAAnE,SAAA,EACHO,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,EAAE5B,UACX2J,EAAAA,EAAAA,IAAc,CACdC,YAAa,QACb/J,MAAOgC,EAAOK,MACd2H,SAAU,SAAChK,GAAK,OA7BH,SAACA,EAA4CoC,GAChE,IAAM6H,EAAaL,EAAc,CAAEF,QAAAA,EAAS7H,IAAK,QAAS7B,MAAOA,EAAMkK,OAAOlK,MAAOoC,GAAAA,IACrFuH,EAAcM,EACf,CA0B4BE,CAAYnK,EAAOgC,EAAOI,GAAG,OAIpD1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,EAAE5B,UACX2J,EAAAA,EAAAA,IAAc,CACdC,YAAa,QACb/J,MAAOgC,EAAOhC,MACdgK,SAAU,SAAChK,GAAK,OA/BH,SAACA,EAA4CoC,GAChE,IAAM6H,EAAaL,EAAc,CAAEF,QAAAA,EAAS7H,IAAK,QAAS7B,MAAOA,EAAMkK,OAAOlK,MAAOoC,GAAAA,IACrFuH,EAAcM,EACf,CA4B4BG,CAAYpK,EAAOgC,EAAOI,GAAG,OAIpD1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,EAAE5B,UACXkK,EAAAA,EAAAA,GAAW,CACXrI,OAAQ,CAAC,CAAEnB,KAAM,GAAId,KAAM,MAAOuK,OAAO,EAAMrI,QAAS,SAAUE,UAAUzB,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,IAAKxI,KAAM,KACpGqG,QAAS,WA3DJ,IAAChG,EACNoI,EADMpI,EA4DDJ,EAAOI,GA3DZoI,EAAYd,EAAQe,MAAK,SAACzI,GAAM,OAAKA,EAAOI,KAAOA,CAAE,IACvDoI,GACHb,EAAc,GAADzK,QAAAC,EAAAA,EAAAA,GAAKuK,GAAO,EAAAzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOuK,GAAS,IAAEpI,IAAIN,EAAAA,EAAAA,SA0D1C,OAIFpB,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,EAAE5B,UACXkK,EAAAA,EAAAA,GAAW,CACXrI,OAAQ,CACP,CACCnB,KAAM,GACNd,KAAM,WACNuK,OAAO,EACPrI,QAAS,SACTE,UAAUzB,EAAAA,EAAAA,KAACgK,EAAAA,EAAa,IACxB3I,KAAM,KAGRqG,QAAS,YArEC,SAAChG,GACjB,GAAuB,IAAnBsH,EAAQ9H,OAAZ,CACA,IAAM+I,EAAiBjB,EAAQb,QAAO,SAAC7G,GAAM,OAAKA,EAAOI,KAAOA,CAAE,IAClEuH,EAAcgB,EAFkB,CAGjC,CAkEQC,CAAS5I,EAAOI,GACjB,QAxCOJ,EAAOI,GA8CnB,KAGH,E,WCpFMyI,EAAsB,CAC3B,CAAE9K,KAAM,UAAWC,MAAO,WAC1B,CAAED,KAAM,QAASC,MAAO,SACxB,CAAED,KAAM,SAAUC,MAAO,UACzB,CAAED,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,UAAWC,MAAO,YAiI3B,EA7H0C,SAAHE,GAAoC,IAA9BwJ,EAAOxJ,EAAPwJ,QAASC,EAAazJ,EAAbyJ,cAgB/CK,EAAW,SAAChK,EAA4C6B,EAAiCO,GAC9F,IAAM6H,EAAaL,EAAc,CAAEF,QAAAA,EAAS7H,IAAAA,EAAK7B,MAAOA,EAAMkK,OAAOlK,MAAOoC,GAAAA,IAC5EuH,EAAcM,EACf,EAYML,EAAgB,SAAHC,GAA0D,IAApDH,EAAOG,EAAPH,QAAS7H,EAAGgI,EAAHhI,IAAK7B,EAAK6J,EAAL7J,MAAOoC,EAAEyH,EAAFzH,GAC7C,OAAOsH,EAAQlF,KAAI,SAACxC,GACnB,OAAIA,EAAOI,KAAOA,GACjBnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY+B,GAAM,IAAAmD,EAAAA,EAAAA,GAAA,GAAGtD,EAAM7B,IAErBgC,CACR,GACD,EACA,OACCtB,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,CAAA7C,SACEuJ,EAAQlF,KAAI,SAACxC,EAAQyH,GACrB,OACCtB,EAAAA,EAAAA,MAAC7D,EAAAA,EAAG,CAAiBlB,UAAU,MAAMmB,OAAQ,GAAGpE,SAAA,EAC/CO,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZ2J,EAAAA,EAAAA,IAAc,CACdC,YAAa,KACb/J,MAAOgC,EAAOnB,KACdmJ,SAAU,SAAChK,GAAK,OAAKgK,EAAShK,EAAO,OAAQgC,EAAOI,GAAG,OAGzD1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZ2J,EAAAA,EAAAA,IAAc,CACdC,YAAa,OACb/J,MAAOgC,EAAOjC,KACdiK,SAAU,SAAChK,GAAK,OAAKgK,EAAShK,EAAO,OAAQgC,EAAOI,GAAG,OAGzD1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZ2K,EAAAA,EAAAA,GAAoC,CACpCf,YAAa,OACb/J,MAAOgC,EAAOC,QACdD,OAAQ6I,EACRE,WAAY,CACX1I,MAAO,OACPrC,MAAO,SAERgK,SAAU,SAAChK,GAAK,OAzCA,SAACA,EAAwB6B,EAAiCO,GAChF,IAAM6H,EAAaL,EAAc,CAAEF,QAAAA,EAAS7H,IAwCK,UAxCA7B,MAAOA,EAAOoC,GAAAA,IAC/DuH,EAAcM,EACf,CAsC4Be,CAAehL,EAAO,EAAWgC,EAAOI,GAAG,OAGlE1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZ2J,EAAAA,EAAAA,IAAc,CACdC,YAAa,OACb/J,MAAOgC,EAAOE,WACd8H,SAAU,SAAChK,GAAK,OAAKgK,EAAShK,EAAO,aAAcgC,EAAOI,GAAG,OAG/D1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZ2J,EAAAA,EAAAA,IAAc,CACdC,YAAa,KACb/J,MAAOgC,EAAOG,SACd6H,SAAU,SAAChK,GAAK,OAAKgK,EAAShK,EAAO,WAAYgC,EAAOI,GAAG,OAG7D1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZ8K,EAAAA,EAAAA,IAAgB,CAChBlB,YAAa,OACb/J,MAAOgC,EAAOD,KACdiI,SAAU,SAAChK,GAAK,OAnEK,SAACA,EAA+B6B,EAAiCO,GAC5F,IAAM6H,EAAaL,EAAc,CAAEF,QAAAA,EAAS7H,IAkEU,OAlEL7B,MAAOA,EAAOoC,GAAAA,IAC/DuH,EAAcM,EACf,CAgE4BiB,CAAoBlL,EAAO,EAAQgC,EAAOI,GAAG,OAGpE1B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZkK,EAAAA,EAAAA,GAAW,CACXrI,OAAQ,CAAC,CAAEnB,KAAM,GAAId,KAAM,MAAOuK,OAAO,EAAMrI,QAAS,SAAUE,UAAUzB,EAAAA,EAAAA,KAAC6J,EAAAA,EAAY,IAAKxI,KAAM,KACpGqG,QAAS,WA5FJ,IAAChG,EACNoI,EADMpI,EA6FDJ,EAAOI,GA5FZoI,EAAYd,EAAQe,MAAK,SAACzI,GAAM,OAAKA,EAAOI,KAAOA,CAAE,IACvDoI,GACHb,EAAc,GAADzK,QAAAC,EAAAA,EAAAA,GAAKuK,GAAO,EAAAzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOuK,GAAS,IAAEpI,IAAIN,EAAAA,EAAAA,SA2F1C,OAIFpB,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACZkK,EAAAA,EAAAA,GAAW,CACXrI,OAAQ,CACP,CACCnB,KAAM,GACNd,KAAM,WACNuK,OAAO,EACPrI,QAAS,SACTE,UAAUzB,EAAAA,EAAAA,KAACgK,EAAAA,EAAa,IACxB3I,KAAM,KAGRqG,QAAS,YAtGC,SAAChG,GACjB,GAAuB,IAAnBsH,EAAQ9H,OAAZ,CACA,IAAM+I,EAAiBjB,EAAQb,QAAO,SAAC7G,GAAM,OAAKA,EAAOI,KAAOA,CAAE,IAClEuH,EAAcgB,EAFkB,CAGjC,CAmGQC,CAAS5I,EAAOI,GACjB,QAvEOJ,EAAOI,GA6EnB,KAGH,EC5Fa+I,EAAoB,SAAC3F,EAAMxF,GAEvC,MAAc,KAAVA,SAAgBA,GADR,kBAIFmG,KAAKnG,GAFPoG,QAAQC,UAGPD,QAAQE,OAAO,IAAIC,MAAM,oBAKnC,ECmCM6E,EAAqC,CAC1C,CAAE/I,MAAO,KAAMrC,OAAO,GACtB,CAAEqC,MAAO,KAAMrC,OAAO,IAiBjBqL,EAAwC,GAuBxCC,EAAkB,CAAC,SAAU,YAC7BC,GAAkB,CACvB,QACA,OACA,WACA,OACA,WACA,UACA,gBACA,MACA,WACA,WACA,SACA,SACA,SACA,cACA,OACA,aAIKC,GAAkB,CAAC,QAAS,YAC5BC,GAAkB,CAAC,QAAS,OAAQ,WAAY,OAAQ,WAAY,SAAU,SAAU,cAAe,OAAQ,aAG/GC,GAAkB,CAAC,UACnBC,GAAkB,CAAC,OAAQ,OAAQ,UAEnCC,GAAU,CAAC,CAAE5L,MAAO,GAAIqC,MAAO,GAAID,IAAIN,EAAAA,EAAAA,OAIvC+J,IAAWC,EAAAA,EAAAA,OAAK,WACrB,IAAQ/K,GAAUC,EAAAA,EAAAA,KAAVD,MAERgL,ELzK+B,WAC/B,IAAM9K,GAAUC,EAAAA,EAAAA,YAAW5B,GAe3B,MAAO,CAAE0M,cAba,SAACC,GACtB,GAAIhL,SAAAA,EAASpB,MAAMH,kBAAmB,CACrC,IAAMgC,EAAcT,EAAQpB,MAAMJ,SAAS+E,KAAI,SAACnD,GAC/C,OAAIJ,aAAO,EAAPA,EAASpB,MAAMH,qBAAsB2B,EAAKQ,KAC7C5B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYoB,GAAS4K,GAEf5K,CACR,IAEAJ,EAAQT,SAAS,CAAET,KAAM,WAAYC,MAAO0B,GAC7C,CACD,EAGD,CKwJ2BwK,GAAlBF,EAAaD,EAAbC,cAEF/K,GAAUC,EAAAA,EAAAA,YAAW5B,GAE3B2I,EAAejD,EAAAA,EAAKkD,UAAbpD,GAAkCvE,EAAAA,EAAAA,GAAA0H,EAAA,GAA9B,GAGXkE,EL5J0B,WAC1B,IAAMlL,GAAUC,EAAAA,EAAAA,YAAW5B,GAmB3B,MAAO,EAjBwB8M,EAAAA,EAAAA,GAAW3H,EAAY,CACrD4H,QAAQ,EACRC,UAAW,SAACC,GACX,IAAQC,EAASD,EAATC,KAEF9K,GACLT,aAAO,EAAPA,EAASpB,MAAMJ,SAAS+E,KAAI,SAACnD,GAC5B,OAAIA,EAAKQ,MAAQZ,EAAQpB,MAAMH,mBAC9BO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYoB,GAAI,IAAEW,OAAQwK,IAEpBnL,CACR,MAAM,GAEPJ,SAAAA,EAAST,SAAS,CAAET,KAAM,WAAYC,MAAO0B,GAC9C,IAdO+K,IAkBT,CKuIyBC,GAAjBC,GAA8BpM,EAAAA,EAAAA,GAAA4L,EAAA,GAAjB,GAGdS,EAAW,eAAA1M,GAAA2M,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAtI,EAAA,OAAAoI,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAC,MAAA,UACG,MAAlBC,EAAqB,CAAAF,EAAAC,KAAA,QACxBnB,EAAc,CAAEhK,OAAQqL,IAAiBH,EAAAC,KAAA,mBACb,MAAlBC,EAAqB,CAAAF,EAAAC,KAAA,gBAAAD,EAAAjE,KAAA,EAAAiE,EAAAC,KAAA,EAExBrI,EAAKwI,eAAe,CAAC,QAAQ,KAAD,EAC5B5I,EAAMI,EAAKyI,cAAc,OAC/BZ,EAAcjI,GAAKwI,EAAAC,KAAA,iBAAAD,EAAAjE,KAAA,GAAAiE,EAAAM,GAAAN,EAAA,kCAAAA,EAAAO,OAAA,GAAAT,EAAA,mBAGrB,kBAVgB,OAAA9M,EAAAjB,MAAA,KAAAyO,UAAA,KAaXC,GAAgBlN,EAAAA,EAAAA,UAAQ,WAE7B,IAAMmN,EAAgB3M,aAAO,EAAPA,EAASpB,MAAMJ,SAASoJ,QAAO,SAACxH,GACrD,OAAOA,EAAKQ,MAAQZ,EAAQpB,MAAMH,iBACnC,IAEA,OAAOkO,aAAa,EAAbA,EAAepJ,KAAI,SAACnD,GAC1B,MAAO,CAAEgB,MAAOhB,EAAKgB,MAAOxB,KAAMQ,EAAKR,KACxC,GACD,GAAG,CAACI,aAAO,EAAPA,EAASpB,MAAMJ,WAGnBgE,GAA0CC,EAAAA,EAAAA,UAAS,KAAIC,GAAApD,EAAAA,EAAAA,GAAAkD,EAAA,GAAhD2J,EAAazJ,EAAA,GAAEkK,EAAgBlK,EAAA,GA6BtCmK,GAA0CpK,EAAAA,EAAAA,UAASkI,IAAQmC,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAApDT,EAAaU,EAAA,GAAEC,EAAgBD,EAAA,GAMtCE,GAA0CvK,EAAAA,EAAAA,UAAS2H,GAAe6C,GAAA3N,EAAAA,EAAAA,GAAA0N,EAAA,GAA3DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAM9BzO,EAAa4O,GAAY,CAChCjB,cAAAA,EACAkB,MAzCiC,CACjC,CACCzM,IAAK,IACLQ,MAAM,QAEP,CACCR,IAAK,IACLQ,MAAM,SAmCPkM,eA/BuD,SAACvO,GACxD6N,EAAiB7N,GAEH,MAAVA,GACH8E,EAAK0J,cAAc,MAAO,IAC1B1J,EAAK0J,cAAc,WAAY,IAC/B1J,EAAK0J,cAAc,WAAY,KACX,MAAVxO,GACVgO,EAAiBpC,IAIlBI,EAAc,CAAEhK,OAAQ,GAAIS,QAASzC,GACtC,EAmBCqN,cAAAA,EACAoB,oBAhBiE,SAACjC,GAClEwB,EAAiBxB,EAClB,EAeCI,YAAAA,EACAe,cAAAA,EACAQ,cAAAA,EACAO,oBAdiE,SAAClC,GAClE4B,EAAiB5B,GACjBR,EAAc,CAAEhK,OAAQwK,GACzB,IAEQ/M,SAaFiC,GAAcjB,EAAAA,EAAAA,UAAQ,WAC3B,IAAMkO,EAAiB1N,aAAO,EAAPA,EAASpB,MAAMJ,SAASgL,MAAK,SAACpJ,GACpD,OAAOA,EAAKQ,OAAQZ,aAAO,EAAPA,EAASpB,MAAMH,kBACpC,IACA,OAAIiP,SAAAA,EAAgB5O,KACZN,EAASoJ,QAAO,SAACxH,GACvB,OAAIiK,EAAgBsD,QAAQD,aAAc,EAAdA,EAAgB5O,OAAS,EAE7CwL,GAAgBqD,QAAQvN,EAAKR,OAAS,EACnC2K,GAAgBoD,QAAQD,aAAc,EAAdA,EAAgB5O,OAAS,EAEpD0L,GAAgBmD,QAAQvN,EAAKR,OAAS,EACnC6K,GAAgBkD,QAAQD,aAAc,EAAdA,EAAgB5O,OAAS,EACpD4L,GAAgBiD,QAAQvN,EAAKR,OAAS,OADvC,CAGR,IAEO,EAET,GAAG,CAACI,aAAO,EAAPA,EAASpB,MAAMH,kBAAmBuB,aAAO,EAAPA,EAASpB,MAAMJ,SAAU4N,EAAec,IAwD9E,OArDAjJ,EAAAA,EAAAA,YAAU,WACT,GAAIjE,SAAAA,EAASpB,MAAMH,kBAAmB,CACrC,IAIAmK,EAJwB5I,EAAQpB,MAAMJ,SAASgL,MAAK,SAACpJ,GACpD,OAAOJ,aAAO,EAAPA,EAASpB,MAAMH,qBAAsB2B,EAAKQ,GAClD,KAGoB,CAAC,EADb9B,EAAI8J,EAAJ9J,KAAMgC,EAAI8H,EAAJ9H,KAAMM,EAAKwH,EAALxH,MAAOC,EAAQuH,EAARvH,SAAUoC,EAAGmF,EAAHnF,IAAKmK,EAAMhF,EAANgF,OAAQhO,EAAIgJ,EAAJhJ,KAAM2E,EAAIqE,EAAJrE,KAAMjD,EAAMsH,EAANtH,OAAQC,EAAQqH,EAARrH,SAAUC,EAAOoH,EAAPpH,QAASqM,EAAQjF,EAARiF,SAAUC,EAAQlF,EAARkF,SAAU/M,EAAM6H,EAAN7H,OAE7G8C,EAAKkK,eAAe,CAAEjN,KAAAA,EAAMM,MAAAA,EAAOC,SAAAA,EAAUoC,IAAAA,EAAKmK,OAAAA,EAAQhO,KAAAA,EAAM2E,KAAAA,EAAMjD,OAAAA,EAAQC,SAAAA,EAAUsM,SAAAA,EAAUC,SAAAA,EAAU/M,OAAAA,IAExGS,GACHoL,EAAiBpL,GAGL,WAAT1C,GACHqO,EAAiBpM,EAEnB,CACD,GAAG,CAACf,aAAO,EAAPA,EAASpB,MAAMH,oBAGnBmF,EAAqB,OAAQC,GAG7BD,EAAqB,QAASC,GAG9BD,EAAqB,WAAYC,GAGjCD,EAAqB,MAAOC,GAG5BD,EAAqB,SAAUC,GAG/BD,EAAqB,SAAUC,GAC/BD,EAAqB,cAAeC,GACpCD,EAAqB,OAAQC,GAC7BD,EAAqB,YAAaC,GAGlCD,EAAqB,OAAQC,GAG7BD,EAAqB,WAAYC,GAGjCD,EAAqB,WAAYC,GAGjCD,EAAqB,WAAYC,GAE1B7D,SAAAA,EAASpB,MAAMH,mBACrBgB,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,uCAAuCC,MAAO,CAAEC,YAAavC,EAAMwC,oBAAqBpD,UACtGO,EAAAA,EAAAA,KAAC6H,EAAAA,EAAK,CAACzD,KAAMA,EAAMrF,SAAUiC,OAG9BhB,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,GAEF,IACA6I,GAASoD,YAAc,WAEvB,IAAMZ,GAAc,SAAHa,GAUK,IATrB9B,EAAa8B,EAAb9B,cACAkB,EAAKY,EAALZ,MACAC,EAAcW,EAAdX,eACAlB,EAAa6B,EAAb7B,cACAoB,EAAmBS,EAAnBT,oBACA7B,EAAWsC,EAAXtC,YACAe,EAAauB,EAAbvB,cACAQ,EAAae,EAAbf,cACAO,EAAmBQ,EAAnBR,oBAyNA,MAAO,CAAEjP,SAtNsB,CAC9B,CACCM,KAAM,QACN8B,IAAK,IACLQ,MAAO,KACPxB,KAAM,QACNkB,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,QACN4F,MAAO,CACN,CAAEC,UAAU,EAAMC,QAAS,WAC3B,CACCC,UAAWqF,IAGbtJ,IAAK,IACLQ,MAAO,OACPxB,KAAM,OACNkB,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,SACN8B,IAAK,IACLQ,MAAO,UACPxB,KAAM,WACN6E,UAAW,CACVyJ,IAAK,GACLC,IAAK,GAENrN,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,SACN8B,IAAK,IACLQ,MAAO,MACPxB,KAAM,OACN6E,UAAW,CACVyJ,IAAK,GACLC,IAAK,GAENrN,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,SACN8B,IAAK,IACLQ,MAAO,OACPxB,KAAM,WACN6E,UAAW,CACV1D,OAAQoJ,EACRiE,YAAY,GAEbtN,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,cACNc,KAAM,UACN6E,UAAW,CACVvF,UACCO,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,CAAA7C,UACCO,EAAAA,EAAAA,KAAC4O,EAAAA,EAAI,CAACC,UAAWnC,EAAekB,MAAOA,EAAOtE,SAAUuE,OAK3D1M,IAAK,KAEN,CACC9B,KAAM,cACN8B,IAAK,OACLhB,KAAM,gBACNkB,KAAM,GACNyN,KAAwB,MAAlBpC,EACN1H,UAAW,CACVvF,UAAUO,EAAAA,EAAAA,KAAC+O,EAAa,CAAC/F,QAAS2D,EAAe1D,cAAe8E,KAEjEjI,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,QACN8B,IAAK,KACLQ,MAAO,GACPxB,KAAM,MACN6E,UAAW,CACVqE,YAAa,UAEdpE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,WACnC9D,KAAM,GACNyN,KAAwB,MAAlBpC,EACN5G,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,QACN8B,IAAK,KACLQ,MAAO,GACPxB,KAAM,WACN6E,UAAW,CACVqE,YAAa,SAEdpE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,aACnC9D,KAAM,EACNyN,KAAwB,MAAlBpC,EACN5G,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,QACN8B,IAAK,MACLQ,MAAO,GACPxB,KAAM,WACN6E,UAAW,CACVqE,YAAa,SAEdpE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,aACnC9D,KAAM,EACNyN,KAAwB,MAAlBpC,EACN5G,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,cACN8B,IAAK,KACLhB,KAAM,SACNkB,KAAM,EAEN2D,UAAW,CACVvF,UACCO,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,mBAAkBjD,UAChCO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAM,CAACzI,KAAK,UAAUqI,QAASwE,EAAYzM,SAAC,UAMhDqG,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,SACN8B,IAAK,KACLQ,MAAO,OACPxB,KAAM,SACN6E,UAAW,CACV1D,OAAQ2L,EACR5C,WAAY,CAAE1I,MAAO,QAASrC,MAAO,SAEtC+B,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,QACNc,KAAM,SACNwB,MAAO,OACPsD,MAAO,GACP9D,IAAK,KACLE,KAAM,GACN2D,UAAW,CACV1D,OAAQ,CACP,CAEChC,MAAO,EACPa,KAAM,IACNgB,IAAK,GAEN,CAEC7B,MAAO,EACPa,KAAM,IACNgB,IAAK,IAGP6N,WAAY,UAGblJ,OAAQ,CACPhE,SAAU,CAAET,KAAM,GAClB0E,WAAY,CAAE1E,KAAM,MAGtB,CACChC,KAAM,WACN8B,IAAK,KACLQ,MAAO,UACPxB,KAAM,cACNkB,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,WACN8B,IAAK,KACLQ,MAAO,OACPxB,KAAM,OACNkB,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,WACN8B,IAAK,KACLQ,MAAO,UACPxB,KAAM,YACNkB,KAAM,GACNyE,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,MAEtD,CACChC,KAAM,cACN8B,IAAK,SACLhB,KAAM,SACNkB,KAAM,GACN2D,UAAW,CAAEvF,UAAUO,EAAAA,EAAAA,KAACiP,EAAW,CAACjG,QAASyE,EAAexE,cAAe+E,KAC3ElI,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,OAIxD,EAEA,M,2DC3kBM6N,GAAe,CACpB,CAAEvN,MAAO,QAASrC,MAAO,OACzB,CAAEqC,MAAO,OAAQrC,MAAO,aAmDzB,GA/CoC,SAAHE,GAAgD,IAA1C2P,EAAI3P,EAAJ2P,KAAMC,EAAY5P,EAAZ4P,aAAcC,EAAc7P,EAAd6P,eACpD9O,GAAUC,EAAAA,EAAAA,YAAW5B,GAEnB+F,EAAgBD,IAAhBC,YAER5B,GAAgCC,EAAAA,EAAAA,UAA6B,IAAGC,GAAApD,EAAAA,EAAAA,GAAAkD,EAAA,GAAzDuM,EAAQrM,EAAA,GAAEsM,EAAWtM,EAAA,IAC5BuB,EAAAA,EAAAA,YAAU,WACL2K,GACHK,EAAa,MAEf,GAAG,CAACL,IAEJ,IAAIM,EAA+B,CAClCtP,KAAM,KACNuP,IAAKJ,EACLK,MAAO,cACPC,UAAW,SACXC,YAAa,EACbC,UAAW,EACXC,4BAA4B,EAC5BC,kBAAkB,EAClBC,mBAAmB,GAGpB7C,GAA4CpK,EAAAA,EAAAA,UAAyB,OAAMqK,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAApE8C,EAAc7C,EAAA,GAAE8C,EAAiB9C,EAAA,GAElCmC,EAAe,SAAClQ,GACrB6Q,EAAkB7Q,GACJ,aAAVA,EACHiQ,GACChP,aAAO,EAAPA,EAASpB,MAAMJ,SAAS+E,KAAI,SAACnD,GAC5B,OAAOgE,EAAYhE,EACpB,MAAM,IAEa,QAAVrB,GACViQ,GAAYhP,aAAO,EAAPA,EAASpB,MAAMJ,WAAY,GAEzC,EAEA,OACC0I,EAAAA,EAAAA,MAAC2I,GAAAA,EAAM,CAACC,MAAO,OAAQC,MAAO,IAAKnB,KAAMA,EAAMC,aAAcA,EAAcC,eAAgBA,EAAe5P,SAAA,EACzGO,EAAAA,EAAAA,KAACuQ,GAAAA,EAAS,CAACvH,QAASkG,GAAc5P,MAAO4Q,EAAgB5G,SAAUkG,KACnExP,EAAAA,EAAAA,KAACwQ,MAASjR,EAAAA,EAAAA,GAAA,GAAKkQ,MAGlB,EChDMrK,GAAY,SAACN,EAAY2L,GAC9B,GAAmB,iBAARA,EACV,IACC,IAAIC,EAAMvS,KAAKC,MAAMqS,GACrB,MAAmB,iBAARC,GAAoBA,EACvBhL,QAAQC,UAERD,QAAQE,OAAO,OAExB,CAAE,MAAOqC,GACR,OAAOvC,QAAQE,OAAO,OACvB,CAEF,EA2BA,GAxBwC,SAAHpG,GAAsD,IAAhD4E,EAAI5E,EAAJ4E,KAAM+K,EAAI3P,EAAJ2P,KAAMC,EAAY5P,EAAZ4P,aAAcC,EAAc7P,EAAd6P,eAC9DtQ,EAA2B,CAChC,CACCM,KAAM,WACN8B,IAAK,IACLQ,MAAO,OACPxB,KAAM,OACN6E,UAAW,CAAE2L,KAAM,IACnBtP,KAAM,GACN4D,MAAO,CACN,CACCG,UAAWA,KAGbU,OAAQ,CAAEhE,SAAU,CAAET,KAAM,GAAK0E,WAAY,CAAE1E,KAAM,OAGvD,OACCrB,EAAAA,EAAAA,KAACoQ,GAAAA,EAAM,CAACE,MAAO,IAAMD,MAAO,aAAclB,KAAMA,EAAMC,aAAcA,EAAcC,eAAgBA,EAAe5P,UAChHO,EAAAA,EAAAA,KAAC6H,EAAAA,EAAK,CAACzD,KAAMA,EAAMrF,SAAUA,KAGhC,ECzBA,GAnB4C,SAAHS,GAAsD,IAAhD4E,EAAI5E,EAAJ4E,KAAM+K,EAAI3P,EAAJ2P,KAAMC,EAAY5P,EAAZ4P,aAAcC,EAAc7P,EAAd6P,eAClE9O,GAAUC,EAAAA,EAAAA,YAAW5B,GAEnB+F,EAAgBD,IAAhBC,YAER,OACC3E,EAAAA,EAAAA,KAACoQ,GAAAA,EAAM,CAACE,MAAO,IAAKD,MAAO,KAAMlB,KAAMA,EAAMC,aAAcA,EAAcC,eAAgBA,EAAe5P,UACvGO,EAAAA,EAAAA,KAAC6H,EAAAA,EAAK,CACLzD,KAAMA,EACNrF,UACCwB,aAAO,EAAPA,EAASpB,MAAMJ,SAAS+E,KAAI,SAACnD,GAC5B,OAAOgE,EAAYhE,EACpB,MAAM,MAKX,E,YCWA,GA7B0C,SAAHnB,GAAgD,IAA1C2P,EAAI3P,EAAJ2P,KAAMC,EAAY5P,EAAZ4P,aAAcC,EAAc7P,EAAd6P,eAC1D9O,GAAUC,EAAAA,EAAAA,YAAW5B,GAEnB+F,EAAgBD,IAAhBC,YAER,OACC3E,EAAAA,EAAAA,KAACoQ,GAAAA,EAAM,CAACE,MAAO,IAAMD,MAAO,aAAclB,KAAMA,EAAMC,aAAcA,EAAcC,eAAgBA,EAAe5P,UAChHgI,EAAAA,EAAAA,MAACmJ,GAAAA,EAAK,CAACC,UAAU,EAAKpR,SAAA,EACrBO,EAAAA,EAAAA,KAAA,OAAAP,SAAA,sCACAO,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,OAAMjD,SAAA,iDAErBO,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,sBAAqBjD,SAAA,6DACpCO,EAAAA,EAAAA,KAAA,OAAK2C,MAAO,CAAEmO,WAAY,YAAcpO,UAAU,sBAAqBjD,SACrE,sBACAtB,KAAKE,WACJkC,aAAO,EAAPA,EAASpB,MAAMJ,SAAS+E,KAAI,SAACnD,GAC5B,OAAOgE,EAAYhE,EACpB,MAAM,GACN,KACA,MAGHX,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,sBAAqBjD,SAAA,+DACpCO,EAAAA,EAAAA,KAAA,OAAK0C,UAAU,sBAAqBjD,SAAA,WAIxC,EC0FA,GAlHsB,WACrB,IAAMc,GAAUC,EAAAA,EAAAA,YAAW5B,GA6B3BmE,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAApD,EAAAA,EAAAA,GAAAkD,EAAA,GAAhDgO,EAAY9N,EAAA,GAAE+N,EAAe/N,EAAA,GACpCmK,GAA8CpK,EAAAA,EAAAA,WAAS,GAAMqK,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAAtD6D,EAAe5D,EAAA,GAOtBE,GAP0CF,EAAA,IAOErK,EAAAA,EAAAA,WAAS,IAAMwK,GAAA3N,EAAAA,EAAAA,GAAA0N,EAAA,GAApD2D,EAAc1D,EAAA,GAAE2D,EAAiB3D,EAAA,GACxC4D,GAAkDpO,EAAAA,EAAAA,WAAS,GAAMqO,GAAAxR,EAAAA,EAAAA,GAAAuR,EAAA,GAA1DE,EAAiBD,EAAA,GACxB9J,GAD8C8J,EAAA,GACrB/M,EAAAA,EAAKkD,WAAvB+J,GAAgD1R,EAAAA,EAAAA,GAAA0H,EAAA,GAAlC,GAEfiK,EAA+B,eAAAhS,GAAA2M,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOjN,GAAI,IAAAoS,EAAA,OAAArF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAC,MAAA,UACrC,OAATpN,EAAa,CAAAmN,EAAAC,KAAA,SACyC,GAAnDgF,EAAcF,EAAe1E,cAAc,QAChC,CAADL,EAAAC,KAAA,eAAAD,EAAAkF,OAAA,SACRP,GAAkB,IAAM,cAAA3E,EAAAjE,KAAA,EAAAiE,EAAAC,KAAA,EAGV8E,EAAe3E,iBAAiB,KAAD,EAAxCJ,EAAAmF,KACZpR,SAAAA,EAAST,SAAS,CAAET,KAAM,WAAYC,MAAOnB,KAAKC,MAAMqT,KACxDF,EAAeK,cACfT,GAAkB,GAAO3E,EAAAC,KAAA,iBAAAD,EAAAjE,KAAA,GAAAiE,EAAAM,GAAAN,EAAA,iBAAAA,EAAAC,KAAA,iBAK1B8E,EAAeK,cACfT,GAAkB,GAAO,yBAAA3E,EAAAO,OAAA,GAAAT,EAAA,mBAE1B,gBAlBoCuF,GAAA,OAAArS,EAAAjB,MAAA,KAAAyO,UAAA,KAqBrC8E,GAAgD9O,EAAAA,EAAAA,WAAS,GAAM+O,GAAAlS,EAAAA,EAAAA,GAAAiS,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAAsDlP,EAAAA,EAAAA,WAAS,GAAMmP,GAAAtS,EAAAA,EAAAA,GAAAqS,EAAA,GAA9DE,EAAmBD,EAAA,GAC1BE,GADkDF,EAAA,GACvB7N,EAAAA,EAAKkD,WAAzB8K,GAAkDzS,EAAAA,EAAAA,GAAAwS,EAAA,GAAlC,GAEjBE,EAA6B,eAAApJ,GAAAgD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmG,EAAOnT,GAAI,OAAA+M,EAAAA,EAAAA,KAAAG,MAAA,SAAAkG,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAhG,MAAA,OAE/CwF,GAAoB,GAGpB,wBAAAQ,EAAA1F,OAAA,GAAAyF,EAAA,KACD,gBANkCE,GAAA,OAAAvJ,EAAA5K,MAAA,KAAAyO,UAAA,KASnC2F,GAA8C3P,EAAAA,EAAAA,WAAS,GAAM4P,GAAA/S,EAAAA,EAAAA,GAAA8S,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAA6C/P,EAAAA,EAAAA,WAAS,GAAMgQ,GAAAnT,EAAAA,EAAAA,GAAAkT,EAAA,GAArDE,EAAkBD,EAAA,GAsBzB,OAtByCA,EAAA,IAuBxCvL,EAAAA,EAAAA,MAAA,OAAK/E,UAAU,OAAMjD,SAAA,EACpBO,EAAAA,EAAAA,KAACkT,GAAAA,EAAO,CAACC,WAlGwC,CAClD,CACChT,KAAM,OACNd,KAAM,WACNkC,QAAS,WAEV,CACCpB,KAAM,SACNd,KAAM,OACNkC,QAAS,UACTmB,UAAW,QAEZ,CACCvC,KAAM,SACNd,KAAM,SACNkC,QAAS,UACTmB,UAAW,QAEZ,CACCvC,KAAM,OACNd,KAAM,cACNkC,QAAS,UACTmB,UAAW,SA4EsBgF,QAdQ,SAACrI,GAC9B,SAATA,EACH2R,GAAgB,GACG,WAAT3R,EACV8R,GAAkB,GACC,aAAT9R,EACV4S,GAAoB,GACD,gBAAT5S,GACVyT,GAAmB,EAErB,KAKE9S,EAAAA,EAAAA,KAACoT,GAAQ,CAACjE,KAAM4B,EAAc3B,aArEM,SAAC/P,GACtC2R,GAAgB,EACjB,EAmE2D3B,eAAgB4B,KACzEjR,EAAAA,EAAAA,KAACqT,GAAU,CAAClE,KAAM+B,EAAgB9B,aAAcoC,EAAenC,eAAgBiC,EAAmBlN,KAAMmN,KACxGvR,EAAAA,EAAAA,KAACsT,GAAY,CACZnE,KAAM6C,EACN5C,aAAcmD,EACdlD,eAAgB+C,EAChBhO,KAAMkO,KACPtS,EAAAA,EAAAA,KAACuT,GAAW,CAACpE,KAAM0D,EAAiBzD,aA9BQ,SAAC/P,GAE7CyT,GAAmB,EAIrB,EAwByEzD,eAAgB4D,MAG1F,EC5FA,GAvBY,WACX,OACCjT,EAAAA,EAAAA,KAAC4Q,GAAAA,EAAK,CAAAnR,UACLgI,EAAAA,EAAAA,MAAC+L,EAAU,CAAA/T,SAAA,EACVO,EAAAA,EAAAA,KAACyT,GAAa,KACdhM,EAAAA,EAAAA,MAAC7D,EAAAA,EAAG,CAACC,OAAQ,EAAEpE,SAAA,EACdgI,EAAAA,EAAAA,MAACiM,EAAAA,EAAW,CAACC,QAASC,EAAAA,GAAanU,SAAA,EAClCO,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,EAAE5B,UACZO,EAAAA,EAAAA,KAAC6T,EAAY,OAEd7T,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,GAAG5B,UACbO,EAAAA,EAAAA,KAAC8T,EAAY,UAGf9T,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAClB,KAAM,EAAE5B,UACZO,EAAAA,EAAAA,KAACmL,GAAQ,aAMf,C","sources":["utils/exchange.ts","views/plugin/dnd/itemTypes.ts","views/plugin/dnd/context/index.tsx","views/plugin/dnd/ExamplesList.tsx","hoc/hoverEvenHoc/index.tsx","views/plugin/dnd/service.ts","views/plugin/dnd/useHooks/index.tsx","views/plugin/dnd/GenerateForm.tsx","views/plugin/dnd/components/StaticOptions.tsx","views/plugin/dnd/components/CreatButton.tsx","utils/rules.ts","views/plugin/dnd/EditForm.tsx","views/plugin/dnd/components/JsonView.tsx","views/plugin/dnd/components/ImportJson.tsx","views/plugin/dnd/components/TemplateForm.tsx","views/plugin/dnd/components/GeneratCode.tsx","views/plugin/dnd/OperationBtns.tsx","views/plugin/dnd/index.tsx"],"sourcesContent":["/**\r\n * @file 数组交换位子\r\n * @author ly\r\n * @createDate 2023年7月11日\r\n */\r\n\r\n/**\r\n * @param array 数组交换位子\r\n * @param x 原位置\r\n * @param y 要交换的位置\r\n */\r\nexport const arrIndexExchange = <T>(array: T, x: number, y: number): T => {\r\n\tconst arr = JSON.parse(JSON.stringify(array));\r\n\tarr.splice(y, 0, ...arr.splice(x, 1));\r\n\treturn arr;\r\n};\r\n","/**\r\n * @param 左侧有哪些表单类型\r\n */\r\nexport type ItemTypesParams = 'input' | 'select' | 'textArea' | 'cascader' | 'button';\r\nexport interface ItemTypes {\r\n\tINPUT: ItemTypesParams;\r\n\tSELECT: ItemTypesParams;\r\n\tTEXTAREA: ItemTypesParams;\r\n\tCASCADER: ItemTypesParams;\r\n\tBUTTON: ItemTypesParams;\r\n}\r\nexport const ITEM_TYPES: ItemTypes = {\r\n\tINPUT: 'input',\r\n\tSELECT: 'select',\r\n\tTEXTAREA: 'textArea',\r\n\tCASCADER: 'cascader',\r\n\tBUTTON: 'button'\r\n};\r\n\r\n/**\r\n * @name 左侧item类型\r\n */\r\nexport const FORM_ITEM = 'formItem';\r\n\r\n/**\r\n * @name 中间生成表单中item\r\n */\r\nexport const GENERATE_FORM_ITEM = 'GenerateFormItem';\r\n\r\n/**\r\n * @param value option value\r\n * @param label option label\r\n * @param id 唯一key\r\n */\r\nexport interface Options {\r\n\tvalue: string;\r\n\tlabel: string;\r\n\tid: string;\r\n}\r\n","/**\r\n * @file dnd Context\r\n * @author ly\r\n * @createDate 2022年12月21日\r\n */\r\nimport { FormItem } from '@/antdComponents/iForm';\r\nimport React, { FC, createContext, useMemo, useReducer } from 'react';\r\nimport type { FormParams } from '../EditForm';\r\n\r\ninterface DndContextProps {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\ninterface StateParams {\r\n\tformList: FormParams[];\r\n\tselectFormItemKey?: string;\r\n}\r\n\r\ntype actionParams =\r\n\t| {\r\n\t\t\ttype: 'formList';\r\n\t\t\tvalue: FormParams[];\r\n\t  }\r\n\t| { type: 'selectFormItemKey'; value?: string };\r\n\r\ntype ReducerFun = (state: StateParams, action: actionParams) => StateParams;\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst Context = createContext<{ state: StateParams; dispatch: React.Dispatch<actionParams> } | null>(null);\r\n\r\nconst initState = {\r\n\tformList: [],\r\n\tselectFormItemKey: undefined\r\n};\r\n\r\nconst reducer: ReducerFun = (state, action) => {\r\n\tconst { type, value } = action;\r\n\tif (type === 'formList') {\r\n\t\treturn { ...state, formList: value };\r\n\t} else if (type === 'selectFormItemKey') {\r\n\t\treturn { ...state, selectFormItemKey: value };\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nconst DndContext: FC<DndContextProps> = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(reducer, initState);\r\n\r\n\tconst value = useMemo(() => ({ state, dispatch }), [state]);\r\n\r\n\treturn <Context.Provider value={value}>{children}</Context.Provider>;\r\n};\r\n\r\nexport { Context };\r\nexport type { FormParams };\r\nexport default DndContext;\r\n","/**\r\n * @file 左侧示例表单组件\r\n * @author ly\r\n * @createDate 2022年12月17日\r\n */\r\nimport React, { FC, useContext, useMemo, useRef, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Col, Row } from 'antd';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ITEM_TYPES, FORM_ITEM } from './itemTypes';\r\nimport { Context } from './context';\r\nimport type { ItemTypesParams } from './itemTypes';\r\nimport useThemeHooks from '@/config/antd/theme/useThemeHooks';\r\nimport hoverEvenHoc from '@/hoc/hoverEvenHoc';\r\n\r\nexport const FORM_TYPE_LIST = [\r\n\t{\r\n\t\tname: '输入框',\r\n\t\ttype: ITEM_TYPES.INPUT\r\n\t},\r\n\t{\r\n\t\tname: '文本框',\r\n\t\ttype: ITEM_TYPES.TEXTAREA\r\n\t},\r\n\t{\r\n\t\tname: '下拉框',\r\n\t\ttype: ITEM_TYPES.SELECT\r\n\t},\r\n\t{\r\n\t\tname: '联级框',\r\n\t\ttype: ITEM_TYPES.CASCADER\r\n\t},\r\n\t{\r\n\t\tname: '按钮集合',\r\n\t\ttype: ITEM_TYPES.BUTTON\r\n\t}\r\n];\r\n\r\n/**\r\n * @param name 表单名称\r\n * @param type 表单类型\r\n */\r\n\r\ninterface ExamplesItemProps {\r\n\tname: string;\r\n\ttype: ItemTypesParams;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst ExamplesList = () => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\treturn (\r\n\t\t<div className=\"rounded-lg p-2 border-2 border-solid\" style={{ borderColor: token.colorPrimaryBorder }}>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t{FORM_TYPE_LIST.map((item) => {\r\n\t\t\t\t\treturn <ExamplesItem name={item.name} type={item.type} key={item.type}></ExamplesItem>;\r\n\t\t\t\t})}\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst ExamplesItem: FC<ExamplesItemProps> = ({ name, type }) => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\tconst context = useContext(Context);\r\n\tconst formList = context?.state.formList;\r\n\r\n\tconst [{ isDragging }, drag] = useDrag(\r\n\t\t() => ({\r\n\t\t\ttype: FORM_ITEM,\r\n\t\t\titem: { name: type },\r\n\t\t\tend: (item, monitor) => {\r\n\t\t\t\tconst dropResult = monitor.getDropResult();\r\n\t\t\t\tif (item && dropResult) {\r\n\t\t\t\t\t// 放入目标\r\n\t\t\t\t\tconst { name: type } = item;\r\n\t\t\t\t\t// 生成formItem\r\n\t\t\t\t\tlet newFormList = formList || [];\r\n\t\t\t\t\tif (type === 'button') {\r\n\t\t\t\t\t\tnewFormList.push({\r\n\t\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\t\tname: 'name' + formList?.length,\r\n\t\t\t\t\t\t\tkey: uuidv4(),\r\n\t\t\t\t\t\t\tspan: 24,\r\n\t\t\t\t\t\t\toption: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: '确认',\r\n\t\t\t\t\t\t\t\t\ttype: 'ok',\r\n\t\t\t\t\t\t\t\t\tbtnType: 'primary',\r\n\t\t\t\t\t\t\t\t\tspan: 12,\r\n\t\t\t\t\t\t\t\t\tpermission: '',\r\n\t\t\t\t\t\t\t\t\ticonFont: '',\r\n\t\t\t\t\t\t\t\t\tid: '0'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewFormList.push({\r\n\t\t\t\t\t\t\ttype: type,\r\n\t\t\t\t\t\t\tlabel: 'label',\r\n\t\t\t\t\t\t\tname: 'name' + formList?.length,\r\n\t\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t\t\tkey: uuidv4(),\r\n\t\t\t\t\t\t\tisRule: 1 as const,\r\n\t\t\t\t\t\t\tspan: 24,\r\n\t\t\t\t\t\t\tlabelCol: 6,\r\n\t\t\t\t\t\t\ttrigger: '1'\r\n\t\t\t\t\t\t\t// layout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// const newFormList = [...(formList || []), {}];\r\n\t\t\t\t\tcontext?.dispatch({ type: 'formList', value: newFormList });\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcollect: (monitor) => ({\r\n\t\t\t\tisDragging: monitor.isDragging(),\r\n\t\t\t\thandlerId: monitor.getHandlerId()\r\n\t\t\t})\r\n\t\t}),\r\n\t\t[formList]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Col span={12}>\r\n\t\t\t\t{useMemo(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t\thoverEvenHoc(\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tref={drag}\r\n\t\t\t\t\t\t\t\tdata-testid={`formItem`}\r\n\t\t\t\t\t\t\t\tclassName=\"rounded-lg p-2 mb-2 border border-solid cursor-pointer\"\r\n\t\t\t\t\t\t\t\tstyle={{ borderColor: token.colorPrimaryBorder }}>\r\n\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t[token]\r\n\t\t\t\t)}\r\n\t\t\t</Col>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ExamplesList;\r\n","/**\r\n * @file hoc处理hover 背景样式\r\n * @author ly\r\n * @createDate 2023年3月24日\r\n */\r\nimport React, { useState } from 'react';\r\nimport useThemeHooks from '@/config/antd/theme/useThemeHooks';\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst hoverEvenHoc = (component: React.ReactElement) => {\r\n\tconst HoverEvenHoc = () => {\r\n\t\tconst { token } = useThemeHooks();\r\n\r\n\t\tconst [isHover, setIsHover] = useState(false);\r\n\r\n\t\tconst handleMouse = () => {\r\n\t\t\tif (isHover) return;\r\n\t\t\tsetIsHover(true);\r\n\t\t};\r\n\r\n\t\tconst handleMouseLeave = () => {\r\n\t\t\tsetIsHover(false);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{React.cloneElement(component, {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t...component.props.style,\r\n\t\t\t\t\t\tbackgroundColor: isHover ? token.colorPrimaryBg : ''\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonMouseMove: handleMouse,\r\n\t\t\t\t\tonMouseLeave: handleMouseLeave,\r\n\t\t\t\t\tonDragEnd: handleMouseLeave\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\treturn <HoverEvenHoc></HoverEvenHoc>;\r\n};\r\n\r\nexport default hoverEvenHoc;\r\n","import request from '@/api/request';\r\n\r\nexport type OptionsPararms = {\r\n\tlabel: string;\r\n\tvalue: string;\r\n\tid: string;\r\n};\r\n\r\n// 查询表单option\r\nexport const anyOptions = (url: string) => {\r\n\treturn request<never, OptionsPararms[]>({\r\n\t\turl: '/dnd/options',\r\n\t\tmethod: 'get'\r\n\t});\r\n};\r\n","/**\r\n * @file form hooks\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport { useContext, useEffect } from 'react';\r\nimport { Form } from 'antd';\r\nimport { useRequest } from 'ahooks';\r\nimport type { FormInstance } from 'antd/es/form';\r\nimport type { ButtonOptionsParams, FormParams } from '../EditForm';\r\nimport { Context } from '../context';\r\nimport { anyOptions } from '../service';\r\nimport { Rule } from 'antd/es/form';\r\nimport { FormItem } from '@/antdComponents/iForm/type';\r\nimport type { Options } from '../itemTypes';\r\n\r\n// 监听绑定表单的变化 修改GenerateForm\r\nexport const useEditFormItemValue = (key: keyof FormParams, form: FormInstance<FormParams>) => {\r\n\tconst context = useContext(Context);\r\n\r\n\tconst nameValue = Form.useWatch([key], form);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (context?.state.selectFormItemKey) {\r\n\t\t\tconst newFormList = context.state.formList.map((item) => {\r\n\t\t\t\tif (context?.state.selectFormItemKey === item.key) {\r\n\t\t\t\t\treturn { ...item, [key]: nameValue };\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\r\n\t\t\tcontext.dispatch({ type: 'formList', value: newFormList });\r\n\t\t}\r\n\t}, [nameValue]);\r\n};\r\n\r\n// 监听没有绑定表单的变化 修改GenerateForm\r\nexport const useEditItemValue = () => {\r\n\tconst context = useContext(Context);\r\n\t//\r\n\tconst editItemValue = (params: Partial<FormParams>) => {\r\n\t\tif (context?.state.selectFormItemKey) {\r\n\t\t\tconst newFormList = context.state.formList.map((item) => {\r\n\t\t\t\tif (context?.state.selectFormItemKey === item.key) {\r\n\t\t\t\t\treturn { ...item, ...params };\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\r\n\t\t\tcontext.dispatch({ type: 'formList', value: newFormList });\r\n\t\t}\r\n\t};\r\n\r\n\treturn { editItemValue };\r\n};\r\n\r\n// 请求url 修改GenerateForm\r\nexport const useWatchUrl = () => {\r\n\tconst context = useContext(Context);\r\n\r\n\tconst { run: getAnyOptions } = useRequest(anyOptions, {\r\n\t\tmanual: true,\r\n\t\tonSuccess: (res) => {\r\n\t\t\tconst { data } = res;\r\n\r\n\t\t\tconst newFormList =\r\n\t\t\t\tcontext?.state.formList.map((item) => {\r\n\t\t\t\t\tif (item.key === context.state.selectFormItemKey) {\r\n\t\t\t\t\t\treturn { ...item, option: data };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}) || [];\r\n\r\n\t\t\tcontext?.dispatch({ type: 'formList', value: newFormList });\r\n\t\t}\r\n\t});\r\n\r\n\treturn [getAnyOptions];\r\n};\r\n\r\n// 拖拽数据转成标准表单数据\r\nexport const useFormData = () => {\r\n\tconst getFormData = (dndFormData: FormParams): FormItem<object> => {\r\n\t\tconst { type, key, span, label, disabled, option, isRule, isRuleTitle, rule, ruleTitle, name, labelCol } = dndFormData;\r\n\t\tlet newFormList: FormItem<object> & { disabled?: boolean } = {\r\n\t\t\ttype,\r\n\t\t\tkey,\r\n\t\t\tspan,\r\n\t\t\tlabel,\r\n\t\t\tname,\r\n\t\t\tdisabled,\r\n\t\t\tcomConfig: { option }\r\n\t\t};\r\n\r\n\t\tif (isRule === 2) {\r\n\t\t\tnewFormList = {\r\n\t\t\t\t...newFormList,\r\n\t\t\t\trules: [{ required: true, message: isRuleTitle }]\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tnewFormList = { ...newFormList, rules: [{ required: false }] };\r\n\t\t}\r\n\r\n\t\tif (rule) {\r\n\t\t\tnewFormList = {\r\n\t\t\t\t...newFormList,\r\n\t\t\t\trules: [\r\n\t\t\t\t\t...(newFormList.rules || []),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalidator: (_: Rule, value) => {\r\n\t\t\t\t\t\t\tconst reg = rule && new RegExp(rule.substring(1, rule.length - 1));\r\n\t\t\t\t\t\t\t// /^((0\\d{2,3}-\\d{7,8})|(1[34578]\\d{9}))$/;\r\n\t\t\t\t\t\t\tif (value === '' || value === undefined || value === null) {\r\n\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (reg !== '' && !reg?.test(value) && value !== '') {\r\n\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error(ruleTitle));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (labelCol) {\r\n\t\t\tnewFormList = { ...newFormList, layout: { labelCol: { span: labelCol }, wrapperCol: { span: 24 - labelCol } } };\r\n\t\t}\r\n\r\n\t\treturn newFormList;\r\n\t};\r\n\treturn { getFormData };\r\n};\r\n","/**\r\n * @file 中间 生成表单\r\n * @author ly\r\n * @createDate 2022年12月17日\r\n */\r\nimport React, { FC, useCallback, useContext, useRef } from 'react';\r\nimport { useDrop, useDrag, DropTargetHookSpec } from 'react-dnd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button, Col, Form, Row } from 'antd';\r\nimport { CloseCircleOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport Iform, { FormItem } from '@/antdComponents/iForm';\r\nimport { FORM_ITEM, GENERATE_FORM_ITEM } from './itemTypes';\r\nimport { Context, FormParams } from './context';\r\nimport { arrIndexExchange } from '@/utils/exchange';\r\nimport { useFormData } from './useHooks';\r\nimport useThemeHooks from '@/config/antd/theme/useThemeHooks';\r\n\r\n/**\r\n * @param formParams 某一项表单数据\r\n * @param index 表单下标\r\n */\r\ninterface GenerateFormParams {\r\n\tformParams: FormParams;\r\n\tindex: number;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst GenerateForm = () => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\tconst context = useContext(Context);\r\n\r\n\tconst [{ isOver, canDrop }, drop] = useDrop({\r\n\t\taccept: FORM_ITEM,\r\n\t\tdrop: () => ({ name: 'GenerateForm' }),\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisOver: monitor.isOver(),\r\n\t\t\tcanDrop: monitor.canDrop()\r\n\t\t})\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={drop}\r\n\t\t\tdata-testid=\"GenerateForm\"\r\n\t\t\tclassName=\"rounded-lg p-2 border-2 border-solid  \"\r\n\t\t\tstyle={{ minHeight: 500, borderColor: token.colorPrimaryBorder }}>\r\n\t\t\t<Row>\r\n\t\t\t\t{context?.state.formList.map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Col span={item.span} key={item.key}>\r\n\t\t\t\t\t\t\t<GenerateFormItem formParams={item} index={i}></GenerateFormItem>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// 表单子组件\r\nconst GenerateFormItem: FC<GenerateFormParams> = ({ formParams, index }) => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\tconst context = useContext(Context);\r\n\r\n\tconst { getFormData } = useFormData();\r\n\r\n\tconst ref = useRef<HTMLDivElement>(null);\r\n\r\n\tconst [{ handlerId }, drop] = useDrop(\r\n\t\t{\r\n\t\t\taccept: GENERATE_FORM_ITEM,\r\n\t\t\tcollect(monitor) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\thandlerId: monitor.getHandlerId()\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\thover(item, monitor) {\r\n\t\t\t\tif (!ref.current) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst dragIndex = (item as unknown as { index: number }).index;\r\n\t\t\t\tconst hoverIndex = index;\r\n\t\t\t\t// Don't replace items with themselves\r\n\t\t\t\tif (dragIndex === hoverIndex) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Determine rectangle on screen\r\n\t\t\t\tconst hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n\t\t\t\t// Get vertical middle\r\n\t\t\t\tconst hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n\t\t\t\t// Determine mouse position\r\n\t\t\t\tconst clientOffset = monitor.getClientOffset();\r\n\t\t\t\t// Get pixels to the top\r\n\t\t\t\tif (clientOffset) {\r\n\t\t\t\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\t\t\t\t\t// Only perform the move when the mouse has crossed half of the items height\r\n\t\t\t\t\t// When dragging downwards, only move when the cursor is below 50%\r\n\t\t\t\t\t// When dragging upwards, only move when the cursor is above 50%\r\n\t\t\t\t\t// Dragging downwards\r\n\t\t\t\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Dragging upwards\r\n\t\t\t\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Time to actually perform the action\r\n\t\t\t\t// moveCard(dragIndex, hoverIndex);\r\n\r\n\t\t\t\tconst newFormList = arrIndexExchange(context?.state.formList || [], hoverIndex, dragIndex);\r\n\t\t\t\t// console.log(dragIndex, hoverIndex, newFormList);\r\n\t\t\t\tcontext?.dispatch({ type: 'formList', value: newFormList || [] });\r\n\t\t\t\t// Note: we're mutating the monitor item here!\r\n\t\t\t\t// Generally it's better to avoid mutations,\r\n\t\t\t\t// but it's good here for the sake of performance\r\n\t\t\t\t// to avoid expensive index searches.\r\n\t\t\t\t(item as unknown as { index: number }).index = hoverIndex;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[context?.state.formList]\r\n\t);\r\n\r\n\tconst [{ isDragging }, drag, preview] = useDrag(\r\n\t\t() => ({\r\n\t\t\ttype: GENERATE_FORM_ITEM,\r\n\t\t\titem: () => {\r\n\t\t\t\treturn { id: formParams.key, index };\r\n\t\t\t},\r\n\t\t\tcollect: (monitor) => ({\r\n\t\t\t\thandlerId: monitor.getHandlerId(),\r\n\t\t\t\tisDragging: monitor.isDragging()\r\n\t\t\t})\r\n\t\t}),\r\n\t\t[index]\r\n\t);\r\n\r\n\tconst opacity = isDragging ? 0 : 1;\r\n\tdrag(drop(ref));\r\n\r\n\tconst [form] = Form.useForm();\r\n\r\n\t// 处理回显表单数据\r\n\tconst formList: FormItem<object>[] = [{ ...getFormData(formParams), span: 24 }];\r\n\r\n\tconst onEditFormParams = () => {\r\n\t\tif (formParams.key === context?.state.selectFormItemKey) return;\r\n\t\tcontext?.dispatch({ type: 'selectFormItemKey', value: formParams.key });\r\n\t};\r\n\r\n\t// 删除formItem\r\n\tconst onDeleteFormItem = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\te.stopPropagation();\r\n\r\n\t\tconst formList =\r\n\t\t\tcontext?.state.formList.filter((item) => {\r\n\t\t\t\treturn item.key !== formParams.key;\r\n\t\t\t}) || [];\r\n\r\n\t\tcontext?.dispatch({ type: 'formList', value: formList });\r\n\r\n\t\tif (formParams.key === context?.state.selectFormItemKey) {\r\n\t\t\tcontext?.dispatch({ type: 'selectFormItemKey', value: undefined });\r\n\t\t}\r\n\t};\r\n\r\n\t// 复制formItem\r\n\tconst onCopyFormItem = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\te.stopPropagation();\r\n\t\tconst newFormList =\r\n\t\t\tcontext?.state.formList.reduce<FormParams[]>((prev, item) => {\r\n\t\t\t\tif (formParams.key === item.key) {\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t...[\r\n\t\t\t\t\t\t\titem,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\tname: 'name' + formList?.length,\r\n\t\t\t\t\t\t\t\tkey: uuidv4()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [...prev, item];\r\n\t\t\t\t}\r\n\t\t\t}, []) || [];\r\n\r\n\t\tcontext?.dispatch({ type: 'formList', value: newFormList });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Row\r\n\t\t\tonClick={onEditFormParams}\r\n\t\t\tclassName={\r\n\t\t\t\t'rounded-lg p-4 pb-0 mb-2 border border-solid ' + `${context?.state.selectFormItemKey === formParams.key ? 'shadow-lg' : ''}`\r\n\t\t\t}\r\n\t\t\tstyle={{\r\n\t\t\t\topacity,\r\n\t\t\t\theight: 100,\r\n\t\t\t\tbackgroundColor: context?.state.selectFormItemKey === formParams.key ? token.colorPrimaryBg : '',\r\n\t\t\t\tborderColor: token.colorPrimaryBorder\r\n\t\t\t}}\r\n\t\t\tdata-handler-id={handlerId}\r\n\t\t\tref={ref}>\r\n\t\t\t<Col flex=\"auto\">\r\n\t\t\t\t<Iform form={form} formList={formList}></Iform>\r\n\t\t\t</Col>\r\n\t\t\t<div className=\"absolute right-0 bottom-1 text-center\">\r\n\t\t\t\t<Button type=\"link\" icon={<CloseCircleOutlined />} onClick={(e) => onDeleteFormItem(e)}></Button>\r\n\t\t\t\t<Button type=\"link\" icon={<CopyOutlined />} onClick={(e) => onCopyFormItem(e)}></Button>\r\n\t\t\t</div>\r\n\t\t</Row>\r\n\t);\r\n};\r\nexport default GenerateForm;\r\n","/**\r\n * @file 静态数据\r\n * @author ly\r\n * @createDate 2023年2月16日\r\n */\r\nimport React, { useState } from 'react';\r\nimport { Button, Col, Form, Input, Row, Space } from 'antd';\r\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { formInputItem } from '@/antdComponents/iForm/components/Iinput';\r\nimport { formButton } from '@/antdComponents/iForm/components/Ibutton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport type { Options } from '../itemTypes';\r\n/**\r\n * @param options 集合\r\n * @param key 对应key值\r\n * @param value 修改内容\r\n * @param id 唯一id\r\n */\r\ntype GetNewOptionsParams = {\r\n\toptions: Options[];\r\n\tkey: 'value' | 'label';\r\n\tvalue: string;\r\n\tid: string;\r\n};\r\n\r\n/**\r\n * @param options 静态数据\r\n * @param updateOptions 更新回调\r\n */\r\ninterface StaticOptionsProps {\r\n\toptions: Options[];\r\n\tupdateOptions: (data: Options[]) => void;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst StaticOptions: React.FC<StaticOptionsProps> = ({ options, updateOptions }) => {\r\n\t// 添加表单行\r\n\tconst add = (id: string) => {\r\n\t\tconst addOption = options.find((option) => option.id === id);\r\n\t\tif (addOption) {\r\n\t\t\tupdateOptions([...options, { ...addOption, id: uuidv4() }]);\r\n\t\t}\r\n\t};\r\n\r\n\t// 删除表单行\r\n\tconst subtract = (id: string) => {\r\n\t\tif (options.length === 1) return;\r\n\t\tconst subtractOption = options.filter((option) => option.id !== id);\r\n\t\tupdateOptions(subtractOption);\r\n\t};\r\n\r\n\t// label内容\r\n\tconst labelChange = (value: React.ChangeEvent<HTMLInputElement>, id: string) => {\r\n\t\tconst newOptions = getNewOptions({ options, key: 'label', value: value.target.value, id });\r\n\t\tupdateOptions(newOptions);\r\n\t};\r\n\r\n\t// value内容\r\n\tconst valueChange = (value: React.ChangeEvent<HTMLInputElement>, id: string) => {\r\n\t\tconst newOptions = getNewOptions({ options, key: 'value', value: value.target.value, id });\r\n\t\tupdateOptions(newOptions);\r\n\t};\r\n\r\n\tconst getNewOptions = ({ options, key, value, id }: GetNewOptionsParams) => {\r\n\t\treturn options.map((option) => {\r\n\t\t\tif (option.id === id) {\r\n\t\t\t\treturn { ...option, [key]: value };\r\n\t\t\t}\r\n\t\t\treturn option;\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{options.map((option, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Row key={option.id}>\r\n\t\t\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t\t\t{formInputItem({\r\n\t\t\t\t\t\t\t\tplaceholder: 'label',\r\n\t\t\t\t\t\t\t\tvalue: option.label,\r\n\t\t\t\t\t\t\t\tonChange: (value) => labelChange(value, option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{/* <Input placeholder=\"label\" value={option.label} onChange={(value) => labelChange(value, option.id)} /> */}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t\t\t{formInputItem({\r\n\t\t\t\t\t\t\t\tplaceholder: 'value',\r\n\t\t\t\t\t\t\t\tvalue: option.value,\r\n\t\t\t\t\t\t\t\tonChange: (value) => valueChange(value, option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{/* <Input placeholder=\"value\" value={option.value} onChange={(value) => valueChange(value, option.id)} /> */}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={4}>\r\n\t\t\t\t\t\t\t{formButton({\r\n\t\t\t\t\t\t\t\toption: [{ name: '', type: 'add', block: true, btnType: 'dashed', iconFont: <PlusOutlined />, span: 24 }],\r\n\t\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\t\tadd(option.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{/* <Button type=\"dashed\" block icon={<PlusOutlined />}></Button> */}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={4}>\r\n\t\t\t\t\t\t\t{formButton({\r\n\t\t\t\t\t\t\t\toption: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\t\t\t\ttype: 'subtract',\r\n\t\t\t\t\t\t\t\t\t\tblock: true,\r\n\t\t\t\t\t\t\t\t\t\tbtnType: 'dashed',\r\n\t\t\t\t\t\t\t\t\t\ticonFont: <MinusOutlined />,\r\n\t\t\t\t\t\t\t\t\t\tspan: 24\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\t\tsubtract(option.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{/* <Button type=\"dashed\" onClick={() => subtract(option.id)} block icon={<MinusOutlined />}></Button> */}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default StaticOptions;\r\n","/**\r\n * @file 创建按钮\r\n * @author ly\r\n * @createDate 2023年2月25日\r\n */\r\nimport React, { FC, useState } from 'react';\r\nimport { Button, Col, Form, Input, Row, Space } from 'antd';\r\nimport { formButton } from '@/antdComponents/iForm/components/Ibutton';\r\nimport { formInputItem, formInputNumber } from '@/antdComponents/iForm/components/Iinput';\r\nimport { formSelect } from '@/antdComponents/iForm/components/Iselect';\r\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport type { ButtonOptionsParams } from '../EditForm';\r\nimport type { SelectValueType } from '@/antdComponents/iForm/type';\r\n\r\n/**\r\n * @param options 集合\r\n * @param key 对应key值\r\n * @param value 修改内容\r\n * @param id 唯一id\r\n */\r\ntype GetNewOptionsParams = {\r\n\toptions: ButtonOptionsParams[];\r\n\tkey: 'name' | 'type' | 'btnType' | 'span' | 'hasPermiss' | 'iconFont';\r\n\tvalue: number | string | null | SelectValueType;\r\n\tid: string;\r\n};\r\n\r\n/**\r\n * @param options 静态数据\r\n * @param updateOptions 更新回调\r\n */\r\ninterface CreatButtonProps {\r\n\toptions: ButtonOptionsParams[];\r\n\tupdateOptions: (data: ButtonOptionsParams[]) => void;\r\n}\r\n\r\n// 按钮类型\r\ntype ButtonTypeOptionsParams = {\r\n\ttype: string;\r\n\tvalue: string;\r\n};\r\nconst BUTTON_TYPE_OPTIONS = [\r\n\t{ type: 'primary', value: 'primary' },\r\n\t{ type: 'ghost', value: 'ghost' },\r\n\t{ type: 'dashed', value: 'dashed' },\r\n\t{ type: 'link', value: 'link' },\r\n\t{ type: 'text', value: 'text' },\r\n\t{ type: 'default', value: 'default' }\r\n];\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst CreatButton: FC<CreatButtonProps> = ({ options, updateOptions }) => {\r\n\t// 添加表单行\r\n\tconst add = (id: string) => {\r\n\t\tconst addOption = options.find((option) => option.id === id);\r\n\t\tif (addOption) {\r\n\t\t\tupdateOptions([...options, { ...addOption, id: uuidv4() }]);\r\n\t\t}\r\n\t};\r\n\r\n\t// 删除表单行\r\n\tconst subtract = (id: string) => {\r\n\t\tif (options.length === 1) return;\r\n\t\tconst subtractOption = options.filter((option) => option.id !== id);\r\n\t\tupdateOptions(subtractOption);\r\n\t};\r\n\r\n\tconst onChange = (value: React.ChangeEvent<HTMLInputElement>, key: GetNewOptionsParams['key'], id: string) => {\r\n\t\tconst newOptions = getNewOptions({ options, key, value: value.target.value, id });\r\n\t\tupdateOptions(newOptions);\r\n\t};\r\n\r\n\tconst onInputNumberChange = (value: number | string | null, key: GetNewOptionsParams['key'], id: string) => {\r\n\t\tconst newOptions = getNewOptions({ options, key, value: value, id });\r\n\t\tupdateOptions(newOptions);\r\n\t};\r\n\r\n\tconst onSelectChange = (value: SelectValueType, key: GetNewOptionsParams['key'], id: string) => {\r\n\t\tconst newOptions = getNewOptions({ options, key, value: value, id });\r\n\t\tupdateOptions(newOptions);\r\n\t};\r\n\r\n\tconst getNewOptions = ({ options, key, value, id }: GetNewOptionsParams) => {\r\n\t\treturn options.map((option) => {\r\n\t\t\tif (option.id === id) {\r\n\t\t\t\treturn { ...option, [key]: value };\r\n\t\t\t}\r\n\t\t\treturn option;\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{options.map((option, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Row key={option.id} className=\"m-4\" gutter={16}>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formInputItem({\r\n\t\t\t\t\t\t\t\tplaceholder: '名字',\r\n\t\t\t\t\t\t\t\tvalue: option.name,\r\n\t\t\t\t\t\t\t\tonChange: (value) => onChange(value, 'name', option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formInputItem({\r\n\t\t\t\t\t\t\t\tplaceholder: '标识类型',\r\n\t\t\t\t\t\t\t\tvalue: option.type,\r\n\t\t\t\t\t\t\t\tonChange: (value) => onChange(value, 'type', option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formSelect<ButtonTypeOptionsParams>({\r\n\t\t\t\t\t\t\t\tplaceholder: '组件类型',\r\n\t\t\t\t\t\t\t\tvalue: option.btnType,\r\n\t\t\t\t\t\t\t\toption: BUTTON_TYPE_OPTIONS,\r\n\t\t\t\t\t\t\t\tfieldNames: {\r\n\t\t\t\t\t\t\t\t\tlabel: 'type',\r\n\t\t\t\t\t\t\t\t\tvalue: 'value'\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tonChange: (value) => onSelectChange(value, 'btnType', option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formInputItem({\r\n\t\t\t\t\t\t\t\tplaceholder: '权限标识',\r\n\t\t\t\t\t\t\t\tvalue: option.permission,\r\n\t\t\t\t\t\t\t\tonChange: (value) => onChange(value, 'hasPermiss', option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formInputItem({\r\n\t\t\t\t\t\t\t\tplaceholder: '图标',\r\n\t\t\t\t\t\t\t\tvalue: option.iconFont,\r\n\t\t\t\t\t\t\t\tonChange: (value) => onChange(value, 'iconFont', option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formInputNumber({\r\n\t\t\t\t\t\t\t\tplaceholder: 'span',\r\n\t\t\t\t\t\t\t\tvalue: option.span,\r\n\t\t\t\t\t\t\t\tonChange: (value) => onInputNumberChange(value, 'span', option.id)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formButton({\r\n\t\t\t\t\t\t\t\toption: [{ name: '', type: 'add', block: true, btnType: 'dashed', iconFont: <PlusOutlined />, span: 24 }],\r\n\t\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\t\tadd(option.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{/* <Button type=\"dashed\" block icon={<PlusOutlined />}></Button> */}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t{formButton({\r\n\t\t\t\t\t\t\t\toption: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\t\t\t\ttype: 'subtract',\r\n\t\t\t\t\t\t\t\t\t\tblock: true,\r\n\t\t\t\t\t\t\t\t\t\tbtnType: 'dashed',\r\n\t\t\t\t\t\t\t\t\t\ticonFont: <MinusOutlined />,\r\n\t\t\t\t\t\t\t\t\t\tspan: 24\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\t\tsubtract(option.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{/* <Button type=\"dashed\" onClick={() => subtract(option.id)} block icon={<MinusOutlined />}></Button> */}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CreatButton;\r\n","/**\r\n * @file rule校验\r\n * @author ly\r\n * @createData 2020年4月27日\r\n */\r\nimport { Rule } from 'rc-field-form/lib/interface';\r\n\r\ninterface Rules {\r\n\t(rule: Rule, value: string): Promise<void>;\r\n}\r\n\r\n// 手机号码和座机验证\r\nexport const validatePhoneTwo: Rules = (rule, value) => {\r\n\tconst reg = /^((0\\d{2,3}-\\d{7,8})|(1[34578]\\d{9}))$/;\r\n\tif (value === '' || value === undefined || value === null) {\r\n\t\treturn Promise.resolve();\r\n\t} else {\r\n\t\tif (!reg.test(value) && value !== '') {\r\n\t\t\treturn Promise.reject(new Error('请输入正确的电话号码或者固话号码'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 是否固话\r\nexport const validateTelphone: Rules = (rule, value) => {\r\n\tconst reg = /0\\d{2,3}-\\d{7,8}/;\r\n\tif (value === '' || value === undefined || value === null) {\r\n\t\treturn Promise.resolve();\r\n\t} else {\r\n\t\tif (!reg.test(value) && value !== '') {\r\n\t\t\treturn Promise.reject(new Error('请输入正确的固定电话）'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 是否手机号码\r\nexport const validatePhone: Rules = (rule, value) => {\r\n\tconst reg = /^[1][3-9][0-9]{9}$/;\r\n\tif (value === '' || value === undefined || value === null) {\r\n\t\treturn Promise.resolve();\r\n\t} else {\r\n\t\tif (!reg.test(value) && value !== '') {\r\n\t\t\treturn Promise.reject(new Error('请输入正确的电话号码'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 是否身份证号码\r\nexport const validateIdNo: Rules = (rule, value) => {\r\n\tconst reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\r\n\tif (value === '' || value === undefined || value === null) {\r\n\t\treturn Promise.reject(new Error('身份证不能为空'));\r\n\t} else {\r\n\t\tif (!reg.test(value) && value !== '') {\r\n\t\t\treturn Promise.reject(new Error('请输入正确的身份证号码'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 是否邮箱\r\nexport const validateEMail: Rules = (rule, value) => {\r\n\t// const reg = /^([a-zA-Z0-9]+[-_]?)+@[a-zA-Z0-9]+\\.[a-z]+$/;\r\n\tconst reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\r\n\tif (value === '' || value === undefined || value === null) {\r\n\t\treturn Promise.reject(new Error('邮箱不能为空'));\r\n\t} else {\r\n\t\tif (!reg.test(value)) {\r\n\t\t\treturn Promise.reject(new Error('请输入正确的邮箱'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 验证内容是否包含英文数字以及下划线\r\nexport const isPassword: Rules = (rule, value) => {\r\n\tconst reg = /^[_a-zA-Z0-9]+$/;\r\n\tif (value === '' || value === undefined || value === null) {\r\n\t\treturn Promise.resolve();\r\n\t} else {\r\n\t\tif (!reg.test(value)) {\r\n\t\t\treturn Promise.reject(new Error('仅由英文字母，数字以及下划线组成'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 自动检验数值的范围\r\nexport const checkMax20000: Rules = (rule, value) => {\r\n\tif (value === '' || value === undefined || value === null) {\r\n\t\treturn Promise.resolve();\r\n\t} else if (!Number(value)) {\r\n\t\treturn Promise.reject(new Error('请输入[1,20000]之间的数字'));\r\n\t} else if (Number(value) < 1 || Number(value) > 20000) {\r\n\t\treturn Promise.reject(new Error('请输入[1,20000]之间的数字'));\r\n\t} else {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n\r\n// 验证数字输入框最大数值\r\nexport const checkMaxVal: Rules = (rule, value) => {\r\n\tif (Number(value) < 0 || Number(value) > 9999) {\r\n\t\treturn Promise.reject(new Error('请输入[0,9999]之间的数字'));\r\n\t} else {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n\r\n// 验证是否1-99之间\r\nexport const isOneToNinetyNine: Rules = (rule, value) => {\r\n\tif (!value) {\r\n\t\treturn Promise.reject(new Error('输入不可以为空'));\r\n\t}\r\n\tif (!Number(value)) {\r\n\t\treturn Promise.reject(new Error('请输入正整数'));\r\n\t} else {\r\n\t\tconst re = /^[1-9][0-9]{0,1}$/;\r\n\t\tconst rsCheck = re.test(value);\r\n\t\tif (!rsCheck) {\r\n\t\t\treturn Promise.reject(new Error('请输入正整数，值为【1,99】'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 验证是否整数\r\nexport const isInteger: Rules = (rule, value) => {\r\n\tif (!value) {\r\n\t\treturn Promise.reject(new Error('输入不可以为空'));\r\n\t}\r\n\r\n\tif (!Number(value)) {\r\n\t\treturn Promise.reject(new Error('请输入正整数'));\r\n\t} else {\r\n\t\tconst re = /^[0-9]*[1-9][0-9]*$/;\r\n\t\tconst rsCheck = re.test(value);\r\n\t\tif (!rsCheck) {\r\n\t\t\treturn Promise.reject(new Error('请输入正整数'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// 密码校验\r\nexport const validatePsdReg: Rules = (rule, value) => {\r\n\tif (!value) {\r\n\t\treturn Promise.reject(new Error('请输入密码'));\r\n\t}\r\n\tif (!/^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$)([^\\u4e00-\\u9fa5\\s]){6,20}$/.test(value)) {\r\n\t\treturn Promise.reject(new Error('请输入6-20位英文字母、数字或者符号（除空格），且字母、数字和标点符号至少包含两种'));\r\n\t} else {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n\r\n// 中文校验\r\nexport const validateContacts: Rules = (rule, value) => {\r\n\tif (!value) {\r\n\t\treturn Promise.reject(new Error('请输入中文'));\r\n\t}\r\n\tif (!/^[\\u0391-\\uFFE5A-Za-z]+$/.test(value)) {\r\n\t\treturn Promise.reject(new Error('不可输入特殊字符'));\r\n\t} else {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n\r\n// 身份证校验\r\nexport const ID: Rules = (rule, value) => {\r\n\tif (!value) {\r\n\t\treturn Promise.reject(new Error('身份证不能为空'));\r\n\t}\r\n\tif (!/(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(value)) {\r\n\t\treturn Promise.reject(new Error('请输入正确的二代身份证号码'));\r\n\t} else {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n\r\n// 账号校验\r\nexport const validateCode: Rules = (rule, value) => {\r\n\tif (!value) {\r\n\t\treturn Promise.reject(new Error('请输入账号'));\r\n\t}\r\n\tif (!/^(?![0-9]*$)(?![a-zA-Z]*$)[a-zA-Z0-9]{6,20}$/.test(value)) {\r\n\t\treturn Promise.reject(new Error('账号必须为6-20位字母和数字组合'));\r\n\t} else {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n\r\n// 纯数字校验\r\nexport const validateNumber: Rules = (rule, value) => {\r\n\tlet numberReg = /^\\d+$|^\\d+[.]?\\d+$/;\r\n\tif (value !== '') {\r\n\t\tif (!numberReg.test(value)) {\r\n\t\t\treturn Promise.reject(new Error('请输入数字'));\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\t} else {\r\n\t\treturn Promise.reject(new Error('请输入值'));\r\n\t}\r\n};\r\n\r\n// 最多一位小数\r\nexport const onePoint: Rules = (rule, value) => {\r\n\tif (!/^[0-9]+([.]{1}[0-9]{1})?$/.test(value)) {\r\n\t\treturn Promise.reject(new Error('最多一位小数！！！'));\r\n\t} else {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n};\r\n","/**\r\n * @file 右侧编辑表单\r\n * @author ly\r\n * @createDate 2022年12月17日\r\n */\r\nimport React, { memo, useContext, useEffect, useMemo, useState } from 'react';\r\nimport Iform, { OnValuesChange } from '@/antdComponents/iForm';\r\nimport { Button, Form, Tabs, TabsProps } from 'antd';\r\nimport { Context } from './context';\r\nimport { useEditFormItemValue, useEditItemValue, useWatchUrl } from './useHooks';\r\nimport StaticOptions from './components/StaticOptions';\r\nimport CreatButton from './components/CreatButton';\r\nimport { isPassword } from '@/utils/rules';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport type {\r\n\tFormSliderType,\r\n\tFormInputType,\r\n\tFormSelectType,\r\n\tFormRadioType,\r\n\tFormUserDefinedType,\r\n\tFormTextAreaType\r\n} from '@/antdComponents/iForm/type';\r\nimport type { ItemTypesParams, Options } from './itemTypes';\r\nimport { ButtonItemParams } from '@/antdComponents/iButton/type';\r\nimport useThemeHooks from '@/config/antd/theme/useThemeHooks';\r\n\r\ntype FormListType = [\r\n\t// 标签\r\n\tFormInputType,\r\n\t// 数据字段\r\n\tFormInputType,\r\n\t// label宽度\r\n\tFormSliderType,\r\n\t// 总宽度\r\n\tFormSliderType,\r\n\t// 是否禁用\r\n\tFormSelectType<DisabledParams>,\r\n\t// option获取类型\r\n\tFormUserDefinedType,\r\n\t// 静态数据\r\n\tFormUserDefinedType,\r\n\t// url\r\n\tFormInputType,\r\n\t// urlLabel\r\n\tFormInputType,\r\n\t// urlValue\r\n\tFormInputType,\r\n\t// 发送\r\n\tFormUserDefinedType,\r\n\t// 关联父级\r\n\tFormSelectType<FormListLabel>,\r\n\t// 是否必填\r\n\tFormRadioType<{\r\n\t\t// icon: string;\r\n\t\tvalue: number;\r\n\t\tkey: number;\r\n\t\tname: string;\r\n\t}>,\r\n\t// 是否必填提示语\r\n\tFormTextAreaType,\r\n\t// 校验规则\r\n\tFormInputType,\r\n\t// 校验规则提示语\r\n\tFormTextAreaType,\r\n\t// 生成按钮\r\n\tFormUserDefinedType\r\n];\r\n\r\ntype FormListParam = {\r\n\tstaticPattern: string;\r\n\titems: TabsProps['items'];\r\n\tonChangeStatic(value: string): void;\r\n\tstaticOptions: typeof OPTIONS;\r\n\tupdateStaticOptions: (data: Options[]) => void;\r\n\tonGetOption(): Promise<void>;\r\n\tformListLabel:\r\n\t\t| {\r\n\t\t\t\tlabel: string | undefined;\r\n\t\t\t\tname: string;\r\n\t\t  }[]\r\n\t\t| undefined;\r\n\tbuttonOptions: ButtonOptionsParams[];\r\n\tupdateButtonOptions(data: ButtonOptionsParams[]): void;\r\n};\r\n\r\n/**\r\n * @param span 宽度\r\n * @param label 名称\r\n * @param disabled 禁用\r\n * @param url 请求数据路径\r\n * @param parent 关联父级id\r\n * @param isRule 是否必填\r\n * @param ruleTitle 必填提示\r\n * @param name 字段名\r\n * @param labelCol label宽度\r\n * @param trigger option切换类型\r\n * @param option options数据\r\n * @param urlLabel options label\r\n * @param urlValue options value\r\n */\r\nexport type FormParams = {\r\n\tspan: number;\r\n\tlabel?: string;\r\n\tdisabled?: boolean;\r\n\turl?: string;\r\n\tparent?: string;\r\n\tisRule?: 1 | 2;\r\n\tisRuleTitle?: string;\r\n\trule?: string;\r\n\truleTitle?: string;\r\n\tname: string;\r\n\tlabelCol?: number;\r\n\ttrigger?: string;\r\n\toption?: Options[] | ButtonOptionsParams[];\r\n\turlLabel?: string;\r\n\turlValue?: string;\r\n\ttype: ItemTypesParams;\r\n\tkey: string;\r\n};\r\n\r\n/**\r\n * @param label 名称\r\n * @param value 标识\r\n */\r\ntype DisabledParams = {\r\n\tlabel: string;\r\n\tvalue: boolean;\r\n};\r\n\r\nconst DISABLED_OPTIONS: DisabledParams[] = [\r\n\t{ label: '启用', value: false },\r\n\t{ label: '禁用', value: true }\r\n];\r\n\r\n/**\r\n * @param label 名称\r\n * @param value 标识\r\n */\r\nexport type ButtonOptionsParams = {\r\n\t// name: string;\r\n\t// type: string;\r\n\t// btnType: string;\r\n\t// span: number | string | null;\r\n\t// hasPermiss: string;\r\n\ticonFont?: string;\r\n\tid: string;\r\n} & Omit<ButtonItemParams<string>, 'iconFont'>;\r\n\r\nconst BUTTON_OPTIONS: ButtonOptionsParams[] = [\r\n\t// {\r\n\t// \tname: '确认',\r\n\t// \ttype: 'ok',\r\n\t// \tbtnType: 'primary',\r\n\t// \tspan: 12,\r\n\t// \thasPermiss: '',\r\n\t// \ticonFont: '',\r\n\t// \tid: '0'\r\n\t// }\r\n];\r\n\r\n/**\r\n * 父级集合\r\n * @param label 名称\r\n * @param name 标识\r\n */\r\ntype FormListLabel = {\r\n\tlabel?: string;\r\n\tname: string;\r\n};\r\n\r\n// options类型对应form类型\r\nconst HAS_SELECT_TYPE = ['select', 'cascader'];\r\nconst HAS_SELECT_NAME = [\r\n\t'label',\r\n\t'name',\r\n\t'labelCol',\r\n\t'span',\r\n\t'disabled',\r\n\t'trigger',\r\n\t'staticOptions',\r\n\t'url',\r\n\t'urlLabel',\r\n\t'urlValue',\r\n\t'urlBtn',\r\n\t'parent',\r\n\t'isRule',\r\n\t'isRuleTitle',\r\n\t'rule',\r\n\t'ruleTitle'\r\n];\r\n\r\n// 通用类型\r\nconst HAS_COMMON_TYPE = ['input', 'textArea'];\r\nconst HAS_COMMON_NAME = ['label', 'name', 'labelCol', 'span', 'disabled', 'parent', 'isRule', 'isRuleTitle', 'rule', 'ruleTitle'];\r\n\r\n// 按钮\r\nconst HAS_BUTTON_TYPE = ['button'];\r\nconst HAS_BUTTON_NAME = ['name', 'span', 'button'];\r\n\r\nconst OPTIONS = [{ value: '', label: '', id: uuidv4() }];\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst EditForm = memo(() => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\tconst { editItemValue } = useEditItemValue();\r\n\r\n\tconst context = useContext(Context);\r\n\r\n\tconst [form] = Form.useForm<FormParams>();\r\n\r\n\t// 获取options数据\r\n\tconst [getAnyOptions] = useWatchUrl();\r\n\r\n\t// 点击发送\r\n\tconst onGetOption = async () => {\r\n\t\tif (staticPattern === '1') {\r\n\t\t\teditItemValue({ option: staticOptions });\r\n\t\t} else if (staticPattern === '2') {\r\n\t\t\ttry {\r\n\t\t\t\tawait form.validateFields(['url']);\r\n\t\t\t\tconst url = form.getFieldValue('url');\r\n\t\t\t\tgetAnyOptions(url);\r\n\t\t\t} catch (error) {}\r\n\t\t}\r\n\t};\r\n\r\n\t// 获取所有label name(不包括自己 关联父级)\r\n\tconst formListLabel = useMemo(() => {\r\n\t\t// 先过滤\r\n\t\tconst filterOneself = context?.state.formList.filter((item) => {\r\n\t\t\treturn item.key !== context.state.selectFormItemKey;\r\n\t\t});\r\n\r\n\t\treturn filterOneself?.map((item) => {\r\n\t\t\treturn { label: item.label, name: item.name };\r\n\t\t});\r\n\t}, [context?.state.formList]);\r\n\r\n\t// 静态、动态模式切换\r\n\tconst [staticPattern, setStaticPattern] = useState('1');\r\n\r\n\tconst items: TabsProps['items'] = [\r\n\t\t{\r\n\t\t\tkey: '1',\r\n\t\t\tlabel: `静态数据`\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: '2',\r\n\t\t\tlabel: `动态数据`\r\n\t\t}\r\n\t];\r\n\r\n\tconst onChangeStatic: FormListParam['onChangeStatic'] = (value) => {\r\n\t\tsetStaticPattern(value);\r\n\r\n\t\tif (value === '1') {\r\n\t\t\tform.setFieldValue('url', '');\r\n\t\t\tform.setFieldValue('urlLabel', '');\r\n\t\t\tform.setFieldValue('urlValue', '');\r\n\t\t} else if (value === '2') {\r\n\t\t\tsetStaticOptions(OPTIONS);\r\n\t\t}\r\n\r\n\t\t// 清空option数据\r\n\t\teditItemValue({ option: [], trigger: value });\r\n\t};\r\n\r\n\t// 静态数据模板\r\n\tconst [staticOptions, setStaticOptions] = useState(OPTIONS);\r\n\tconst updateStaticOptions: FormListParam['updateStaticOptions'] = (data) => {\r\n\t\tsetStaticOptions(data);\r\n\t};\r\n\r\n\t// 生成按钮\r\n\tconst [buttonOptions, setButtonOptions] = useState(BUTTON_OPTIONS);\r\n\tconst updateButtonOptions: FormListParam['updateButtonOptions'] = (data) => {\r\n\t\tsetButtonOptions(data);\r\n\t\teditItemValue({ option: data });\r\n\t};\r\n\r\n\tconst { formList } = useFormList({\r\n\t\tstaticPattern,\r\n\t\titems,\r\n\t\tonChangeStatic,\r\n\t\tstaticOptions,\r\n\t\tupdateStaticOptions,\r\n\t\tonGetOption,\r\n\t\tformListLabel,\r\n\t\tbuttonOptions,\r\n\t\tupdateButtonOptions\r\n\t});\r\n\r\n\t// 匹配类型 生成表单\r\n\tconst newFormList = useMemo(() => {\r\n\t\tconst selectFormItem = context?.state.formList.find((item) => {\r\n\t\t\treturn item.key === context?.state.selectFormItemKey;\r\n\t\t});\r\n\t\tif (selectFormItem?.type) {\r\n\t\t\treturn formList.filter((item) => {\r\n\t\t\t\tif (HAS_SELECT_TYPE.indexOf(selectFormItem?.type) > -1) {\r\n\t\t\t\t\t// 读取下拉类型所需要的form类型\r\n\t\t\t\t\treturn HAS_SELECT_NAME.indexOf(item.name) > -1;\r\n\t\t\t\t} else if (HAS_COMMON_TYPE.indexOf(selectFormItem?.type) > -1) {\r\n\t\t\t\t\t// 读取通用类型所需要的form类型\r\n\t\t\t\t\treturn HAS_COMMON_NAME.indexOf(item.name) > -1;\r\n\t\t\t\t} else if (HAS_BUTTON_TYPE.indexOf(selectFormItem?.type) > -1) {\r\n\t\t\t\t\treturn HAS_BUTTON_NAME.indexOf(item.name) > -1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}, [context?.state.selectFormItemKey, context?.state.formList, staticOptions, buttonOptions]);\r\n\r\n\t// 初始化表单数据\r\n\tuseEffect(() => {\r\n\t\tif (context?.state.selectFormItemKey) {\r\n\t\t\tconst newFormListItem = context.state.formList.find((item) => {\r\n\t\t\t\treturn context?.state.selectFormItemKey === item.key;\r\n\t\t\t});\r\n\r\n\t\t\tconst { type, span, label, disabled, url, parent, name, rule, isRule, labelCol, trigger, urlLabel, urlValue, option } =\r\n\t\t\t\tnewFormListItem || {};\r\n\t\t\tform.setFieldsValue({ span, label, disabled, url, parent, name, rule, isRule, labelCol, urlLabel, urlValue, option });\r\n\r\n\t\t\tif (trigger) {\r\n\t\t\t\tsetStaticPattern(trigger);\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'button') {\r\n\t\t\t\tsetButtonOptions(option as ButtonOptionsParams[]);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [context?.state.selectFormItemKey]);\r\n\r\n\t// span\r\n\tuseEditFormItemValue('span', form);\r\n\r\n\t// label\r\n\tuseEditFormItemValue('label', form);\r\n\r\n\t// disabled\r\n\tuseEditFormItemValue('disabled', form);\r\n\r\n\t// url\r\n\tuseEditFormItemValue('url', form);\r\n\r\n\t// parent\r\n\tuseEditFormItemValue('parent', form);\r\n\r\n\t// rule\r\n\tuseEditFormItemValue('isRule', form);\r\n\tuseEditFormItemValue('isRuleTitle', form);\r\n\tuseEditFormItemValue('rule', form);\r\n\tuseEditFormItemValue('ruleTitle', form);\r\n\r\n\t// name\r\n\tuseEditFormItemValue('name', form);\r\n\r\n\t// labelCol\r\n\tuseEditFormItemValue('labelCol', form);\r\n\r\n\t// urlLabel\r\n\tuseEditFormItemValue('urlLabel', form);\r\n\r\n\t// urlValue\r\n\tuseEditFormItemValue('urlValue', form);\r\n\r\n\treturn context?.state.selectFormItemKey ? (\r\n\t\t<div className=\"rounded-lg p-2 border-2 border-solid\" style={{ borderColor: token.colorPrimaryBorder }}>\r\n\t\t\t<Iform form={form} formList={newFormList}></Iform>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<></>\r\n\t);\r\n});\r\nEditForm.displayName = 'EditForm';\r\n\r\nconst useFormList = ({\r\n\tstaticPattern,\r\n\titems,\r\n\tonChangeStatic,\r\n\tstaticOptions,\r\n\tupdateStaticOptions,\r\n\tonGetOption,\r\n\tformListLabel,\r\n\tbuttonOptions,\r\n\tupdateButtonOptions\r\n}: FormListParam) => {\r\n\t// 参数\r\n\tconst formList: FormListType = [\r\n\t\t{\r\n\t\t\ttype: 'input',\r\n\t\t\tkey: '1',\r\n\t\t\tlabel: '标签',\r\n\t\t\tname: 'label',\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'input',\r\n\t\t\trules: [\r\n\t\t\t\t{ required: true, message: '请输入数据字段' },\r\n\t\t\t\t{\r\n\t\t\t\t\tvalidator: isPassword\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tkey: '2',\r\n\t\t\tlabel: '数据字段',\r\n\t\t\tname: 'name',\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'slider',\r\n\t\t\tkey: '3',\r\n\t\t\tlabel: 'label宽度',\r\n\t\t\tname: 'labelCol',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tmax: 24,\r\n\t\t\t\tmin: 0\r\n\t\t\t},\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'slider',\r\n\t\t\tkey: '4',\r\n\t\t\tlabel: '总宽度',\r\n\t\t\tname: 'span',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tmax: 24,\r\n\t\t\t\tmin: 6\r\n\t\t\t},\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'select',\r\n\t\t\tkey: '5',\r\n\t\t\tlabel: '是否禁用',\r\n\t\t\tname: 'disabled',\r\n\t\t\tcomConfig: {\r\n\t\t\t\toption: DISABLED_OPTIONS,\r\n\t\t\t\tallowClear: false\r\n\t\t\t},\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'userDefined',\r\n\t\t\tname: 'trigger',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tchildren: (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Tabs activeKey={staticPattern} items={items} onChange={onChangeStatic} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\r\n\t\t\tkey: '6'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'userDefined',\r\n\t\t\tkey: '7777',\r\n\t\t\tname: 'staticOptions',\r\n\t\t\tspan: 24,\r\n\t\t\tshow: staticPattern === '1',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tchildren: <StaticOptions options={staticOptions} updateOptions={updateStaticOptions} />\r\n\t\t\t},\r\n\t\t\tlayout: { labelCol: { span: 0 }, wrapperCol: { span: 24 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'input',\r\n\t\t\tkey: '88',\r\n\t\t\tlabel: '',\r\n\t\t\tname: 'url',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tplaceholder: '请输入url'\r\n\t\t\t},\r\n\t\t\trules: [{ required: true, message: '请输入url' }],\r\n\t\t\tspan: 12,\r\n\t\t\tshow: staticPattern === '2',\r\n\t\t\tlayout: { labelCol: { span: 0 }, wrapperCol: { span: 24 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'input',\r\n\t\t\tkey: '98',\r\n\t\t\tlabel: '',\r\n\t\t\tname: 'urlLabel',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tplaceholder: 'label'\r\n\t\t\t},\r\n\t\t\trules: [{ required: true, message: '请输入label' }],\r\n\t\t\tspan: 6,\r\n\t\t\tshow: staticPattern === '2',\r\n\t\t\tlayout: { labelCol: { span: 0 }, wrapperCol: { span: 24 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'input',\r\n\t\t\tkey: '108',\r\n\t\t\tlabel: '',\r\n\t\t\tname: 'urlValue',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tplaceholder: 'value'\r\n\t\t\t},\r\n\t\t\trules: [{ required: true, message: '请输入value' }],\r\n\t\t\tspan: 6,\r\n\t\t\tshow: staticPattern === '2',\r\n\t\t\tlayout: { labelCol: { span: 0 }, wrapperCol: { span: 24 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'userDefined',\r\n\t\t\tkey: '11',\r\n\t\t\tname: 'urlBtn',\r\n\t\t\tspan: 6,\r\n\t\t\t// show: staticPattern === '1',\r\n\t\t\tcomConfig: {\r\n\t\t\t\tchildren: (\r\n\t\t\t\t\t<div className=\"flex justify-end\">\r\n\t\t\t\t\t\t<Button type=\"primary\" onClick={onGetOption}>\r\n\t\t\t\t\t\t\t发送\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\tlayout: { labelCol: { span: 0 }, wrapperCol: { span: 24 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'select',\r\n\t\t\tkey: '12',\r\n\t\t\tlabel: '关联父级',\r\n\t\t\tname: 'parent',\r\n\t\t\tcomConfig: {\r\n\t\t\t\toption: formListLabel,\r\n\t\t\t\tfieldNames: { label: 'label', value: 'name' }\r\n\t\t\t},\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'radio' as const,\r\n\t\t\tname: 'isRule',\r\n\t\t\tlabel: '是否必填',\r\n\t\t\trules: [],\r\n\t\t\tkey: '13',\r\n\t\t\tspan: 24,\r\n\t\t\tcomConfig: {\r\n\t\t\t\toption: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// icon: 'icon-zhuzhuangtu-dashuju',\r\n\t\t\t\t\t\tvalue: 1,\r\n\t\t\t\t\t\tname: '否',\r\n\t\t\t\t\t\tkey: 1\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// icon: 'icon-drxx91',\r\n\t\t\t\t\t\tvalue: 2,\r\n\t\t\t\t\t\tname: '是',\r\n\t\t\t\t\t\tkey: 2\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\toptionType: 'button'\r\n\t\t\t},\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tlabelCol: { span: 6 },\r\n\t\t\t\twrapperCol: { span: 18 }\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'textArea',\r\n\t\t\tkey: '14',\r\n\t\t\tlabel: '是否必填提示语',\r\n\t\t\tname: 'isRuleTitle',\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'textArea',\r\n\t\t\tkey: '15',\r\n\t\t\tlabel: '校验规则',\r\n\t\t\tname: 'rule',\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'textArea',\r\n\t\t\tkey: '16',\r\n\t\t\tlabel: '校验规则提示语',\r\n\t\t\tname: 'ruleTitle',\r\n\t\t\tspan: 24,\r\n\t\t\tlayout: { labelCol: { span: 6 }, wrapperCol: { span: 18 } }\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'userDefined',\r\n\t\t\tkey: 'button',\r\n\t\t\tname: 'button',\r\n\t\t\tspan: 24,\r\n\t\t\tcomConfig: { children: <CreatButton options={buttonOptions} updateOptions={updateButtonOptions} /> },\r\n\t\t\tlayout: { labelCol: { span: 0 }, wrapperCol: { span: 24 } }\r\n\t\t}\r\n\t];\r\n\treturn { formList };\r\n};\r\n\r\nexport default EditForm;\r\n","/**\r\n * @name 生成json\r\n * @user ly\r\n * @date 2023年3月13日\r\n */\r\nimport React, { FC, useContext, useEffect, useState } from 'react';\r\nimport Imodal, { OnOkOrCancelType } from '@/antdComponents/iModal';\r\nimport ReactJson, { ReactJsonViewProps } from 'react-json-view';\r\nimport { Context } from '../context';\r\nimport { Segmented } from 'antd';\r\nimport { useFormData } from '../useHooks';\r\nimport type { SegmentedValue } from 'antd/es/segmented';\r\nimport type { FormItem } from '@/antdComponents/iForm/type';\r\n\r\ninterface JsonViewProps {\r\n\topen: boolean;\r\n\tonOkOrCancel: OnOkOrCancelType;\r\n\tconfirmLoading: boolean;\r\n}\r\n\r\ntype SelectJsonType = 'dnd' | 'standard';\r\n\r\nconst JSON_OPTIONS = [\r\n\t{ label: 'dnd格式', value: 'dnd' },\r\n\t{ label: '标准格式', value: 'standard' }\r\n];\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst JsonView: FC<JsonViewProps> = ({ open, onOkOrCancel, confirmLoading }) => {\r\n\tconst context = useContext(Context);\r\n\r\n\tconst { getFormData } = useFormData();\r\n\r\n\tconst [jsonData, setJsonData] = useState<FormItem<object>[]>([]);\r\n\tuseEffect(() => {\r\n\t\tif (open) {\r\n\t\t\tonJsonChange('dnd');\r\n\t\t}\r\n\t}, [open]);\r\n\r\n\tlet propsVal: ReactJsonViewProps = {\r\n\t\tname: null, // JSON数据的根节点(用默认或指定的根节点包裹自己的数据)\r\n\t\tsrc: jsonData, // 需要展示的JSON数据\r\n\t\ttheme: 'rjv-default', // 支持base-16主题\r\n\t\ticonStyle: 'circle', // circle(圆)、triangle(三角形)、square(正方形)\r\n\t\tindentWidth: 6, // 首行缩进长度\r\n\t\tcollapsed: 2, // 节点折叠\r\n\t\tcollapseStringsAfterLength: false, // 超出内容会变成…的功能\r\n\t\tdisplayDataTypes: true, // 数据类型会出现在数据的前缀值\r\n\t\tdisplayObjectSize: true // 对象和数组被标记为大\r\n\t};\r\n\r\n\tconst [selectJsonType, setSelectJsonType] = useState<SelectJsonType>('dnd');\r\n\r\n\tconst onJsonChange = (value: SegmentedValue) => {\r\n\t\tsetSelectJsonType(value as SelectJsonType);\r\n\t\tif (value === 'standard') {\r\n\t\t\tsetJsonData(\r\n\t\t\t\tcontext?.state.formList.map((item) => {\r\n\t\t\t\t\treturn getFormData(item);\r\n\t\t\t\t}) || []\r\n\t\t\t);\r\n\t\t} else if (value === 'dnd') {\r\n\t\t\tsetJsonData(context?.state.formList || []);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Imodal title={'json'} width={800} open={open} onOkOrCancel={onOkOrCancel} confirmLoading={confirmLoading}>\r\n\t\t\t<Segmented options={JSON_OPTIONS} value={selectJsonType} onChange={onJsonChange} />\r\n\t\t\t<ReactJson {...propsVal} />\r\n\t\t</Imodal>\r\n\t);\r\n};\r\n\r\nexport default JsonView;\r\n","/**\r\n * @file 导入JSON\r\n * @author ly\r\n * @createDate 2023年1月12日\r\n */\r\nimport React, { FC } from 'react';\r\nimport Imodal, { OnOkOrCancelType } from '@/antdComponents/iModal';\r\nimport Iform from '@/antdComponents/iForm';\r\nimport type { FormInstance } from 'antd/lib/form/hooks/useForm';\r\nimport type { FormTextAreaType } from '@/antdComponents/iForm/type';\r\nimport { Rule } from 'antd/es/form';\r\n\r\ntype ImportJsonProps = {\r\n\topen: boolean;\r\n\tonOkOrCancel: OnOkOrCancelType;\r\n\tconfirmLoading: boolean;\r\n\tform: FormInstance<importJsonForm>;\r\n};\r\n\r\nexport type importJsonForm = {\r\n\tjson: string;\r\n};\r\n\r\ntype formListParams = [FormTextAreaType];\r\n\r\nconst validator = (rule: Rule, str: string) => {\r\n\tif (typeof str === 'string') {\r\n\t\ttry {\r\n\t\t\tlet obj = JSON.parse(str);\r\n\t\t\tif (typeof obj === 'object' && obj) {\r\n\t\t\t\treturn Promise.resolve();\r\n\t\t\t} else {\r\n\t\t\t\treturn Promise.reject('格式不对');\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\treturn Promise.reject('格式不对');\r\n\t\t}\r\n\t}\r\n};\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst ImportJson: FC<ImportJsonProps> = ({ form, open, onOkOrCancel, confirmLoading }) => {\r\n\tconst formList: formListParams = [\r\n\t\t{\r\n\t\t\ttype: 'textArea',\r\n\t\t\tkey: '1',\r\n\t\t\tlabel: 'JSON',\r\n\t\t\tname: 'json',\r\n\t\t\tcomConfig: { rows: 20 },\r\n\t\t\tspan: 24,\r\n\t\t\trules: [\r\n\t\t\t\t{\r\n\t\t\t\t\tvalidator: validator\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tlayout: { labelCol: { span: 2 }, wrapperCol: { span: 22 } }\r\n\t\t}\r\n\t];\r\n\treturn (\r\n\t\t<Imodal width={1000} title={'导入dnd-json'} open={open} onOkOrCancel={onOkOrCancel} confirmLoading={confirmLoading}>\r\n\t\t\t<Iform form={form} formList={formList} />\r\n\t\t</Imodal>\r\n\t);\r\n};\r\n\r\nexport default ImportJson;\r\n","/**\r\n * @name 表单示例\r\n * @user ly\r\n * @date 2022年12月18日\r\n */\r\nimport React, { FC, useContext } from 'react';\r\nimport Iform, { FormInstance } from '@/antdComponents/iForm';\r\nimport Imodal, { OnOkOrCancelType } from '@/antdComponents/iModal';\r\nimport { Context } from '../context';\r\nimport { useFormData } from '../useHooks';\r\n\r\ntype TemplateFormProps = {\r\n\topen: boolean;\r\n\tonOkOrCancel: OnOkOrCancelType;\r\n\tconfirmLoading: boolean;\r\n\tform: FormInstance;\r\n};\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst TemplateForm: FC<TemplateFormProps> = ({ form, open, onOkOrCancel, confirmLoading }) => {\r\n\tconst context = useContext(Context);\r\n\r\n\tconst { getFormData } = useFormData();\r\n\r\n\treturn (\r\n\t\t<Imodal width={800} title={'示例'} open={open} onOkOrCancel={onOkOrCancel} confirmLoading={confirmLoading}>\r\n\t\t\t<Iform\r\n\t\t\t\tform={form}\r\n\t\t\t\tformList={\r\n\t\t\t\t\tcontext?.state.formList.map((item) => {\r\n\t\t\t\t\t\treturn getFormData(item);\r\n\t\t\t\t\t}) || []\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</Imodal>\r\n\t);\r\n};\r\n\r\nexport default TemplateForm;\r\n","/**\r\n * @file 生成代码\r\n * @author ly\r\n * @createDate 2023年3月13日\r\n */\r\nimport React, { FC, useContext } from 'react';\r\nimport Imodal, { OnOkOrCancelType } from '@/antdComponents/iModal';\r\nimport { Context } from '../context';\r\nimport Icard from '@/antdComponents/iCard';\r\nimport { useFormData } from '../useHooks';\r\n\r\ntype GeneratCodeProps = {\r\n\topen: boolean;\r\n\tonOkOrCancel: OnOkOrCancelType;\r\n\tconfirmLoading: boolean;\r\n};\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst GeneratCode: FC<GeneratCodeProps> = ({ open, onOkOrCancel, confirmLoading }) => {\r\n\tconst context = useContext(Context);\r\n\r\n\tconst { getFormData } = useFormData();\r\n\r\n\treturn (\r\n\t\t<Imodal width={1000} title={'导入dnd-json'} open={open} onOkOrCancel={onOkOrCancel} confirmLoading={confirmLoading}>\r\n\t\t\t<Icard bordered={true}>\r\n\t\t\t\t<div>{`import React, {FC} from 'react';`}</div>\r\n\t\t\t\t<div className=\"mb-2\">{`import Iform from '@/antdComponents/iForm';`}</div>\r\n\r\n\t\t\t\t<div className=\"mb-1 whitespace-pre\">{`const SeachForm: FC<Iprops> = ({ form, onFinish }) => {`}</div>\r\n\t\t\t\t<div style={{ whiteSpace: 'pre-line' }} className=\"mb-1 whitespace-pre\">\r\n\t\t\t\t\t{'  const formList = ' +\r\n\t\t\t\t\t\tJSON.stringify(\r\n\t\t\t\t\t\t\tcontext?.state.formList.map((item) => {\r\n\t\t\t\t\t\t\t\treturn getFormData(item);\r\n\t\t\t\t\t\t\t}) || [],\r\n\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t2\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mb-1 whitespace-pre\">{`  return <Iform form={form} formList={formList}></Iform>;`}</div>\r\n\t\t\t\t<div className=\"mb-1 whitespace-pre\">{`};`}</div>\r\n\t\t\t</Icard>\r\n\t\t</Imodal>\r\n\t);\r\n};\r\n\r\nexport default GeneratCode;\r\n","/**\r\n * @name 上方按钮操作\r\n * @user ly\r\n * @date 2022年12月30日\r\n */\r\nimport React, { useContext, useState } from 'react';\r\nimport { Form } from 'antd';\r\nimport Ibutton from '@/antdComponents/iButton';\r\nimport JsonView from './components/JsonView';\r\nimport ImportJson from './components/ImportJson';\r\nimport { Context } from './context';\r\nimport type { importJsonForm } from './components/ImportJson';\r\nimport type { OnOkOrCancelType } from '@/antdComponents/iModal';\r\nimport TemplateForm from './components/TemplateForm';\r\nimport GeneratCode from './components/GeneratCode';\r\nimport type { ButtonItemParams, OnClickBtn } from '@/antdComponents/iDropdown';\r\n\r\ntype ButtonType = 'JSON' | 'import' | 'template' | 'generatCode';\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst OperationBtns = () => {\r\n\tconst context = useContext(Context);\r\n\r\n\tconst buttonList: ButtonItemParams<ButtonType>[] = [\r\n\t\t{\r\n\t\t\tname: '生成示例',\r\n\t\t\ttype: 'template',\r\n\t\t\tbtnType: 'primary'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: '生成JSON',\r\n\t\t\ttype: 'JSON',\r\n\t\t\tbtnType: 'primary',\r\n\t\t\tclassName: 'ml-1'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: '导入JSON',\r\n\t\t\ttype: 'import',\r\n\t\t\tbtnType: 'primary',\r\n\t\t\tclassName: 'ml-1'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: '生成代码',\r\n\t\t\ttype: 'generatCode',\r\n\t\t\tbtnType: 'primary',\r\n\t\t\tclassName: 'ml-1'\r\n\t\t}\r\n\t];\r\n\r\n\t//jsonView\r\n\tconst [jsonViewOpen, setJsonViewOpen] = useState(false);\r\n\tconst [jsonViewLoading, setJsonViewLoading] = useState(false);\r\n\r\n\tconst jsonViewFun: OnOkOrCancelType = (type) => {\r\n\t\tsetJsonViewOpen(false);\r\n\t};\r\n\r\n\t// ImportJson\r\n\tconst [importJsonOpen, setImportJsonOpen] = useState(false);\r\n\tconst [importJsonLoading, setImportJsonLoading] = useState(false);\r\n\tconst [importJsonForm] = Form.useForm<importJsonForm>();\r\n\r\n\tconst importJsonFun: OnOkOrCancelType = async (type) => {\r\n\t\tif (type === 'ok') {\r\n\t\t\tconst formListStr = importJsonForm.getFieldValue('json');\r\n\t\t\tif (!formListStr) {\r\n\t\t\t\treturn setImportJsonOpen(false);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst values = await importJsonForm.validateFields();\r\n\t\t\t\tcontext?.dispatch({ type: 'formList', value: JSON.parse(formListStr) });\r\n\t\t\t\timportJsonForm.resetFields();\r\n\t\t\t\tsetImportJsonOpen(false);\r\n\t\t\t} catch (errorInfo) {\r\n\t\t\t\t// console.log('Failed:', errorInfo);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\timportJsonForm.resetFields();\r\n\t\t\tsetImportJsonOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// TemplateForm\r\n\tconst [templateFormOpen, setTemplateFormOpen] = useState(false);\r\n\tconst [templateFormLoading, setTemplateFormLoading] = useState(false);\r\n\tconst [templateFormForm] = Form.useForm<importJsonForm>();\r\n\r\n\tconst templateFun: OnOkOrCancelType = async (type) => {\r\n\t\tif (type === 'ok') {\r\n\t\t\tsetTemplateFormOpen(false);\r\n\t\t} else {\r\n\t\t\tsetTemplateFormOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// generatCode\r\n\tconst [generatCodeOpen, setgeneratCodeOpen] = useState(false);\r\n\tconst [generatCodeLoading, setgeneratCode] = useState(false);\r\n\r\n\tconst generatCodeModalBtn: OnOkOrCancelType = (type) => {\r\n\t\tif (type === 'ok') {\r\n\t\t\tsetgeneratCodeOpen(false);\r\n\t\t} else {\r\n\t\t\tsetgeneratCodeOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onClickBtn: OnClickBtn<ButtonType> = (type) => {\r\n\t\tif (type === 'JSON') {\r\n\t\t\tsetJsonViewOpen(true);\r\n\t\t} else if (type === 'import') {\r\n\t\t\tsetImportJsonOpen(true);\r\n\t\t} else if (type === 'template') {\r\n\t\t\tsetTemplateFormOpen(true);\r\n\t\t} else if (type === 'generatCode') {\r\n\t\t\tsetgeneratCodeOpen(true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"mb-2\">\r\n\t\t\t<Ibutton buttonList={buttonList} onClick={onClickBtn}></Ibutton>\r\n\t\t\t<JsonView open={jsonViewOpen} onOkOrCancel={jsonViewFun} confirmLoading={jsonViewLoading} />\r\n\t\t\t<ImportJson open={importJsonOpen} onOkOrCancel={importJsonFun} confirmLoading={importJsonLoading} form={importJsonForm} />\r\n\t\t\t<TemplateForm\r\n\t\t\t\topen={templateFormOpen}\r\n\t\t\t\tonOkOrCancel={templateFun}\r\n\t\t\t\tconfirmLoading={templateFormLoading}\r\n\t\t\t\tform={templateFormForm}></TemplateForm>\r\n\t\t\t<GeneratCode open={generatCodeOpen} onOkOrCancel={generatCodeModalBtn} confirmLoading={generatCodeLoading}></GeneratCode>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default OperationBtns;\r\n","/**\r\n * @file react-dnd 表单生成\r\n * @author ly\r\n * @createDate 2022年12月17日\r\n */\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport ExamplesList from './ExamplesList';\r\nimport GenerateForm from './GenerateForm';\r\nimport EditForm from './EditForm';\r\nimport DndContext from './context';\r\nimport OperationBtns from './OperationBtns';\r\nimport Icard from '@/antdComponents/iCard';\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst Dnd = () => {\r\n\treturn (\r\n\t\t<Icard>\r\n\t\t\t<DndContext>\r\n\t\t\t\t<OperationBtns />\r\n\t\t\t\t<Row gutter={8}>\r\n\t\t\t\t\t<DndProvider backend={HTML5Backend}>\r\n\t\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t\t<ExamplesList />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t\t<GenerateForm />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</DndProvider>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<EditForm />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</DndContext>\r\n\t\t</Icard>\r\n\t);\r\n};\r\n\r\nexport default Dnd;\r\n"],"names":["arrIndexExchange","array","x","y","arr","JSON","parse","stringify","splice","apply","concat","_toConsumableArray","FORM_ITEM","GENERATE_FORM_ITEM","Context","createContext","initState","formList","selectFormItemKey","undefined","reducer","state","action","type","value","_objectSpread","_ref","children","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","useMemo","_jsx","Provider","FORM_TYPE_LIST","name","ExamplesItem","token","useThemeHooks","context","useContext","_useDrag","useDrag","item","end","monitor","dropResult","getDropResult","newFormList","push","length","key","uuidv4","span","option","btnType","permission","iconFont","id","label","disabled","isRule","labelCol","trigger","collect","isDragging","handlerId","getHandlerId","_useDrag2","drag","_Fragment","Col","component","ref","className","style","borderColor","colorPrimaryBorder","HoverEvenHoc","_useState","useState","_useState2","isHover","setIsHover","handleMouseLeave","React","props","backgroundColor","colorPrimaryBg","onMouseMove","onMouseLeave","onDragEnd","Row","gutter","map","anyOptions","url","request","method","useEditFormItemValue","form","nameValue","Form","useWatch","useEffect","_defineProperty","useFormData","getFormData","dndFormData","isRuleTitle","rule","ruleTitle","comConfig","rules","required","message","validator","_","reg","RegExp","substring","test","Promise","resolve","reject","Error","layout","wrapperCol","GenerateFormItem","formParams","index","useRef","_useDrop3","useDrop","accept","hover","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","_useDrop4","drop","opacity","_Form$useForm","useForm","_jsxs","onClick","height","flex","Iform","Button","icon","CloseCircleOutlined","e","stopPropagation","filter","onDeleteFormItem","CopyOutlined","reduce","prev","onCopyFormItem","_useDrop","isOver","canDrop","_useDrop2","_useDrop2$","minHeight","i","options","updateOptions","getNewOptions","_ref2","formInputItem","placeholder","onChange","newOptions","target","labelChange","valueChange","formButton","block","PlusOutlined","addOption","find","MinusOutlined","subtractOption","subtract","BUTTON_TYPE_OPTIONS","formSelect","fieldNames","onSelectChange","formInputNumber","onInputNumberChange","isPassword","DISABLED_OPTIONS","BUTTON_OPTIONS","HAS_SELECT_TYPE","HAS_SELECT_NAME","HAS_COMMON_TYPE","HAS_COMMON_NAME","HAS_BUTTON_TYPE","HAS_BUTTON_NAME","OPTIONS","EditForm","memo","_useEditItemValue","editItemValue","params","useEditItemValue","_useWatchUrl","useRequest","manual","onSuccess","res","data","run","useWatchUrl","getAnyOptions","onGetOption","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","staticPattern","staticOptions","validateFields","getFieldValue","t0","stop","arguments","formListLabel","filterOneself","setStaticPattern","_useState3","_useState4","setStaticOptions","_useState5","_useState6","buttonOptions","setButtonOptions","useFormList","items","onChangeStatic","setFieldValue","updateStaticOptions","updateButtonOptions","selectFormItem","indexOf","parent","urlLabel","urlValue","setFieldsValue","displayName","_ref3","max","min","allowClear","Tabs","activeKey","show","StaticOptions","optionType","CreatButton","JSON_OPTIONS","open","onOkOrCancel","confirmLoading","jsonData","setJsonData","onJsonChange","propsVal","src","theme","iconStyle","indentWidth","collapsed","collapseStringsAfterLength","displayDataTypes","displayObjectSize","selectJsonType","setSelectJsonType","Imodal","title","width","Segmented","ReactJson","str","obj","rows","Icard","bordered","whiteSpace","jsonViewOpen","setJsonViewOpen","jsonViewLoading","importJsonOpen","setImportJsonOpen","_useState7","_useState8","importJsonLoading","importJsonForm","importJsonFun","formListStr","abrupt","sent","resetFields","_x","_useState9","_useState10","templateFormOpen","setTemplateFormOpen","_useState11","_useState12","templateFormLoading","_Form$useForm3","templateFormForm","templateFun","_callee2","_context2","_x2","_useState13","_useState14","generatCodeOpen","setgeneratCodeOpen","_useState15","_useState16","generatCodeLoading","Ibutton","buttonList","JsonView","ImportJson","TemplateForm","GeneratCode","DndContext","OperationBtns","DndProvider","backend","HTML5Backend","ExamplesList","GenerateForm"],"sourceRoot":""}