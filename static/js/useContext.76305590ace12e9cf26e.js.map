{"version":3,"file":"static/js/useContext.76305590ace12e9cf26e.js","mappings":"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","sources":["antdComponents/iCollapse/index.tsx","antdComponents/iCollapse/useStyleHooks.tsx","pluginComponents/iCodeEditor/index.tsx","views/react/hooks/useContext/IuseReducer.tsx","views/react/hooks/useContext/Icontext.tsx","views/react/hooks/useContext/index.tsx"],"sourcesContent":["/**\r\n * @file 折叠面板\r\n * @author ly\r\n * @createDate 2023年4月5日\r\n */\r\nimport React, { FC, ReactNode } from 'react';\r\nimport { Collapse, CollapseProps } from 'antd';\r\nimport useStyleHooks from './useStyleHooks';\r\n\r\n/**\r\n * @param list 渲染数据\r\n * @param defaultActiveKey 初始化选中面板的 key\r\n * @param styleConfig 配置面板颜色主题类型\r\n * @param bordered 带边框风格的折叠面板\r\n * @param onChange 切换面板的回调\r\n * @param style 面板css样式\r\n * @param expandIcon 自定义切换图标\r\n */\r\nexport type IcollapseProps<T> = {\r\n\tlist: CollapseProps['items'];\r\n\tdefaultActiveKey?: T[];\r\n\tstyleConfig?: '1';\r\n\tbordered?: boolean;\r\n\tonChange?: (key: string | string[]) => void;\r\n\tstyle?: React.CSSProperties;\r\n\texpandIcon?: (value: { isActive?: boolean }) => ReactNode;\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst Icollapse = <T extends string | number>({\r\n\tlist,\r\n\tdefaultActiveKey,\r\n\tstyleConfig,\r\n\tbordered = true,\r\n\tonChange,\r\n\texpandIcon,\r\n\tstyle\r\n}: IcollapseProps<T>) => {\r\n\t// 折叠面板样式配置\r\n\tconst styleConfigParams = useStyleHooks({ list, styleConfig, style, bordered });\r\n\r\n\treturn (\r\n\t\t<Collapse\r\n\t\t\tbordered={styleConfigParams.bordered}\r\n\t\t\tdefaultActiveKey={defaultActiveKey}\r\n\t\t\tonChange={onChange}\r\n\t\t\texpandIcon={expandIcon}\r\n\t\t\tstyle={styleConfigParams.style}\r\n\t\t\titems={styleConfigParams.list}></Collapse>\r\n\t);\r\n};\r\n\r\nexport default Icollapse;\r\n","/**\r\n * @file 折叠面板主题样式配置\r\n * @author ly\r\n * @createDate 2023年5月12日\r\n */\r\nimport React from 'react';\r\nimport type { IcollapseProps } from './index';\r\nimport useThemeHooks from '@/config/antd/theme/useThemeHooks';\r\n\r\ntype UseStyleHooksProps<T> = Pick<IcollapseProps<T>, 'list' | 'styleConfig' | 'style' | 'bordered'>;\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst useStyleHooks = <T,>({ list, styleConfig, style, bordered }: UseStyleHooksProps<T>) => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\tconst ListStyle = {\r\n\t\tmarginBottom: 24,\r\n\t\tbackground: token.colorFillAlter,\r\n\t\tborderRadius: token.borderRadiusLG,\r\n\t\tborder: 'none'\r\n\t};\r\n\r\n\tif (styleConfig === '1') {\r\n\t\tconst listOne = list?.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tstyle: ListStyle\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn { list: listOne, style: { background: token.colorBgContainer }, bordered: false };\r\n\t}\r\n\r\n\t// 默认配置\r\n\treturn { list, styleConfig, style, bordered };\r\n};\r\n\r\nexport default useStyleHooks;\r\n","/**\r\n * @file 代码编辑器\r\n * @author ly\r\n * @createDate\r\n */\r\nimport React, { FC, useState } from 'react';\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism.css'; //Example style, you can use another\r\n\r\ntype IcodeEditorProps = {\r\n\tinitCode: string;\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IcodeEditor: FC<IcodeEditorProps> = ({ initCode = `function add(a, b) {\\n  return a + b;\\n}` }) => {\r\n\tconst [code, setCode] = useState(initCode);\r\n\r\n\treturn (\r\n\t\t<Editor\r\n\t\t\tvalue={code}\r\n\t\t\tonValueChange={(code) => setCode(code)}\r\n\t\t\thighlight={(code) => highlight(code, languages.js, 'jsx')}\r\n\t\t\tpadding={10}\r\n\t\t\tstyle={{\r\n\t\t\t\t// fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n\t\t\t\tfontSize: 14\r\n\t\t\t}}\r\n\t\t\treadOnly={true}\r\n\t\t\tdisabled={true}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default IcodeEditor;\r\n","import React, { useReducer } from 'react';\r\nimport { ReduerValueParam } from './Icontext';\r\n\r\ninterface ActionFuncType<T> {\r\n\t(state: T, action: { type: string; value: number }): T;\r\n}\r\n\r\nconst initValue = {\r\n\tcount: 0,\r\n\tsum: 10\r\n};\r\n\r\nconst myActions: ActionFuncType<ReduerValueParam> = (state, action) => {\r\n\tconst { type, value } = action;\r\n\tif (type === 'add') {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcount: state.count + value\r\n\t\t};\r\n\t} else if (type === 'sub') {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcount: state.count - value\r\n\t\t};\r\n\t}\r\n\treturn state;\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst useContextReducer = () => {\r\n\tconst [sum, dispatch] = useReducer(myActions, initValue);\r\n\treturn { sum, dispatch };\r\n};\r\n\r\nexport default useContextReducer;\r\n","/**\r\n * @name 创建一个公用的useContext\r\n * @user ly\r\n * @date 日期：2020年4月27日\r\n */\r\nimport React, { FC, useMemo } from 'react';\r\nimport useContextReducer from './IuseReducer';\r\n\r\nexport interface ReduerValueParam {\r\n\tcount: number;\r\n\tsum?: number;\r\n}\r\n\r\nexport interface dispatchParam {\r\n\ttype: string;\r\n\tvalue: number;\r\n}\r\n\r\ninterface IuseContextComProps {\r\n\tchildren?: React.ReactNode;\r\n}\r\n\r\ntype MyContextParam = {\r\n\tsum: ReduerValueParam;\r\n\tdispatch: React.Dispatch<dispatchParam>;\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nexport const Context = React.createContext<MyContextParam | null>(null);\r\n\r\nconst Icontext: FC<IuseContextComProps> = ({ children }) => {\r\n\tconst { sum, dispatch } = useContextReducer();\r\n\r\n\tconst value = useMemo(() => ({ sum, dispatch }), [sum]);\r\n\r\n\treturn <Context.Provider value={value}>{children}</Context.Provider>;\r\n};\r\n\r\nexport default Icontext;\r\n","/**\r\n * @file useContext + useResource\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport React, { useState, useContext, useMemo, memo } from 'react';\r\nimport Icontext, { Context } from './Icontext';\r\nimport { Button } from 'antd';\r\nimport Icard from '@/antdComponents/iCard';\r\nimport Icollapse from '@/antdComponents/iCollapse';\r\nimport IcodeEditor from '@/pluginComponents/iCodeEditor';\r\n\r\n/**\r\n * tips: 可以结合useReduce实现redux\r\n *\r\n * 优化context更新\r\n * 不处理的情况下 外部组件更新会导致context内部组件都更新\r\n * 优化\r\n * Icontext更新 导致state dispatch更新 用useMemo缓存\r\n * 被包裹的组件 用memo在包裹一下 这样即使子组件内部引用了context也不会更新。\r\n */\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IuseContext = () => {\r\n\tconst [parentValue, setParentValue] = useState(0);\r\n\r\n\treturn (\r\n\t\t<Icard>\r\n\t\t\t{parentValue}\r\n\r\n\t\t\t<Button type=\"link\" onClick={() => setParentValue(parentValue + 1)}>\r\n\t\t\t\t+1\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Icontext>\r\n\t\t\t\t<ChildMemo></ChildMemo>\r\n\t\t\t</Icontext>\r\n\r\n\t\t\t<Code></Code>\r\n\t\t</Icard>\r\n\t);\r\n};\r\n\r\nexport default IuseContext;\r\n\r\nconst ChildMemo = memo(() => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<UseContextComItem></UseContextComItem>\r\n\t\t\t<Child></Child>\r\n\t\t</>\r\n\t);\r\n});\r\nChildMemo.displayName = 'childMemo';\r\n\r\nconst UseContextComItem = () => {\r\n\tconst context = useContext(Context);\r\n\t// console.log('READER');\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{'我是子组件: '}\r\n\t\t\t{context?.sum.count}\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"link\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tcontext?.dispatch({ type: 'sub', value: 1 });\r\n\t\t\t\t}}>\r\n\t\t\t\t-1\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Child = () => {\r\n\t// console.log('Child');\r\n\r\n\treturn <div>Child</div>;\r\n};\r\n\r\nconst Code = () => {\r\n\tconst initCode = `\r\nimport { createContext, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext(null);\r\n\t\r\nexport default function MyApp() {\r\n    return (\r\n\t    <ThemeContext.Provider value=\"dark\">\r\n\t\t  <Form />\r\n\t\t</ThemeContext.Provider>\r\n\t)\r\n}\r\n\t\r\nfunction Form() {\r\n\treturn (\r\n\t\t<Panel title=\"Welcome\">\r\n\t\t  <Button>Sign up</Button>\r\n\t\t  <Button>Log in</Button>\r\n\t\t</Panel>\r\n\t);\r\n}\r\n\t\r\nfunction Panel({ title, children }) {\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst className = 'panel-' + theme;\r\n\treturn (\r\n\t\t<section className={className}>\r\n\t\t  <h1>{title}</h1>\r\n\t\t  {children}\r\n\t\t</section>\r\n\t)\r\n}\r\n\t\r\nfunction Button({ children }) {\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst className = 'button-' + theme;\r\n\treturn (\r\n\t\t<button className={className}>\r\n\t\t  {children}\r\n\t\t</button>\r\n\t);\r\n}\r\n\t`;\r\n\r\n\tconst list = [\r\n\t\t{\r\n\t\t\tlabel: 'useContext 说明',\r\n\t\t\tchildren: (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div>useContext 是一个 React 钩子,可以让你从组件中读取和订阅上下文</div>\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t\tkey: '0'\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: '代码示例',\r\n\t\t\tchildren: (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<IcodeEditor initCode={initCode}></IcodeEditor>\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t\tkey: '2'\r\n\t\t}\r\n\t];\r\n\r\n\treturn <Icollapse styleConfig=\"1\" defaultActiveKey={['0']} list={list}></Icollapse>;\r\n};\r\n"],"names":["_ref","list","defaultActiveKey","styleConfig","_ref$bordered","bordered","onChange","expandIcon","styleConfigParams","style","token","useThemeHooks","ListStyle","marginBottom","background","colorFillAlter","borderRadius","borderRadiusLG","border","map","item","_objectSpread","colorBgContainer","useStyleHooks","_jsx","Collapse","items","_ref$initCode","initCode","_useState","useState","_useState2","_slicedToArray","code","setCode","Editor","value","onValueChange","highlight","languages","js","padding","fontSize","readOnly","disabled","initValue","count","sum","myActions","state","action","type","Context","React","_useReducer","_useReducer2","children","_useContextReducer","useReducer","dispatch","useMemo","Provider","parentValue","setParentValue","_jsxs","Icard","Button","onClick","Icontext","ChildMemo","Code","memo","_Fragment","UseContextComItem","Child","displayName","context","useContext","label","key","IcodeEditor","Icollapse"],"sourceRoot":""}