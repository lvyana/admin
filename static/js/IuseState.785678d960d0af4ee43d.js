"use strict";(self.webpackChunkreact_app=self.webpackChunkreact_app||[]).push([[7643],{94805:function(e,n,t){var r=t(1413),i=(t(72791),t(36473)),o=t(80184);n.Z=function(e){var n=e.bordered,t=void 0!==n&&n,d=e.children,s=e.style,u=void 0===s?{}:s,a=e.hoverable,l=void 0!==a&&a,c=e.className;return(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(i.Z,{hoverable:l,bordered:t,bodyStyle:(0,r.Z)({padding:"16px"},u),className:c,children:d})})}},68792:function(e,n,t){t.d(n,{Z:function(){return c}});var r=t(14916),i=(t(72791),t(66579)),o=t(85060),d=t(1413),s=t(22044),u=function(e){var n=e.list,t=e.styleConfig,r=e.style,i=e.bordered,o=(0,s.Z)().token,u={marginBottom:24,background:o.colorFillAlter,borderRadius:o.borderRadiusLG,border:"none"};return"1"===t?{list:n.map((function(e){return(0,d.Z)((0,d.Z)({},e),{},{style:u})})),style:{background:o.colorBgContainer},bordered:!1}:{list:n,styleConfig:t,style:r,bordered:i}},a=t(80184),l=r.Z.Panel,c=function(e){var n=e.list,t=e.defaultActiveKey,d=e.styleConfig,s=e.bordered,c=void 0===s||s,h=e.onChange,f=e.expandIcon,y=e.style,b=(0,i.C)(o.h2),v=u({list:n,styleConfig:d,style:y,bordered:c});return(0,a.jsx)("div",{children:(0,a.jsx)(r.Z,{bordered:v.bordered,defaultActiveKey:t,onChange:h,size:b,expandIcon:f,style:v.style,children:v.list.map((function(e){return(0,a.jsx)(l,{header:e.header,style:e.style,children:e.content},e.key)}))})})}},4429:function(e,n,t){var r=t(29439),i=t(72791),o=t(94044),d=t.n(o),s=t(61293),u=(t(44350),t(99465),t(6639),t(27862),t(80184));n.Z=function(e){var n=e.initCode,t=void 0===n?"function add(a, b) {\n  return a + b;\n}":n,o=(0,i.useState)(t),a=(0,r.Z)(o,2),l=a[0],c=a[1];return(0,u.jsx)(d(),{value:l,onValueChange:function(e){return c(e)},highlight:function(e){return(0,s.highlight)(e,s.languages.js,"jsx")},padding:10,style:{fontSize:14},readOnly:!0,disabled:!0})}},77982:function(e,n,t){t.r(n);var r=t(29439),i=t(72791),o=t(87309),d=t(94805),s=t(68792),u=t(4429),a=t(80184);n.default=function(){var e=(0,i.useState)(0),n=(0,r.Z)(e,2),t=n[0],l=n[1],c=(0,i.useState)((function(){return 0})),h=(0,r.Z)(c,2),f=h[0],y=h[1],b=[{header:"useState在组件式编程里的基本用处",content:(0,a.jsx)("div",{children:"useState 是一个组件定义状态信息,所谓“状态”,就是该组件任意时刻都存放的各种数据"}),key:"0"},{header:"useState更新",content:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{children:"1、当组件更新state时,会触发组件的重新渲染,可以认为发生了局部刷新"}),(0,a.jsx)("div",{children:"2、在函数内多次更新,会合并处理"}),(0,a.jsx)("div",{children:"3、18之前手动合并处理unstable_batchedUpdates,18之后自动合并处理就不需要了"})]}),key:"1"},{header:"代码示例",content:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(u.Z,{initCode:"import { useState } from 'react';\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n  }\n\n  return (\n    <button onClick={handleClick}>\n      You pressed me {count} times\n    </button>\n  );\n};"})}),key:"2"}];return(0,a.jsxs)(d.Z,{children:[(0,a.jsx)(o.ZP,{type:"link",onClick:function(){setTimeout((function(){return l(t+1)}),1e3),setTimeout((function(){return l(t+1)}),1e3),setTimeout((function(){return y(f+1)}),2e3)},children:"+1"}),t,f,(0,a.jsx)(s.Z,{styleConfig:"1",defaultActiveKey:["0"],list:b})]})}}}]);