{"version":3,"file":"static/js/useRef.95fa44677bd7f3551cc2.js","mappings":"+KAsDMA,EAAoB,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OAC5B,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,IAAKF,EAAOG,SAAC,OAC1B,EACA,UA1CgB,WACf,IAAMH,GAASI,EAAAA,EAAAA,QAA8B,OAC7CC,EAAAA,EAAAA,YAAU,WACT,GACE,IAGH,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAE/BE,GAFMD,EAAA,GAAUA,EAAA,IAEVT,EAAAA,EAAAA,QAAO,IAoBnB,OACCW,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAb,SAAA,CAAC,OACDO,EAAM,aAAWI,EAAIG,SAC1BhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CAACC,QArBM,WAIfL,EAAIG,QAAUP,EAWdC,EAASD,EAAQ,EAElB,EAI2BP,SAAC,OAC1BF,EAAAA,EAAAA,KAACH,EAAG,CAACE,OAAQA,MAGhB,C","sources":["views/react/hooks/useRef/index.tsx"],"sourcesContent":["/**\r\n * @file useRef tips: useRef.current的值修改不会重新渲染组件\r\n * @author ly\r\n * @createDate 2020年4月27日\r\n */\r\nimport React, { FC, LegacyRef, useEffect, useRef, useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport Icard from '@/antdComponents/iCard';\r\n\r\ninterface SonProps {\r\n\tsonRef: LegacyRef<HTMLDivElement>;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IuseRef = () => {\r\n\tconst sonRef = useRef<HTMLDivElement | null>(null);\r\n\tuseEffect(() => {\r\n\t\t// console.log(sonRef);\r\n\t}, []);\r\n\t// console.log('组件刷新');\r\n\r\n\tconst [count, setcount] = useState(0);\r\n\tconst [first, setfirst] = useState(1);\r\n\r\n\tconst Ref = useRef(0);\r\n\r\n\tconst addFunc = () => {\r\n\t\t// console.log('触发了');\r\n\r\n\t\t// useRef不会触发render\r\n\t\tRef.current = count;\r\n\t\t// console.log(Ref.current);\r\n\r\n\t\t// 异步更新会render两次\r\n\t\t// setTimeout(() => setcount(count + 1), 1000);\r\n\t\t// setTimeout(() => setfirst(first + 1), 1000);\r\n\r\n\t\t// setTimeout(() => setcount((count) => count + 1), 1000);\r\n\t\t// setTimeout(() => setfirst((first) => first + 1), 1000);\r\n\r\n\t\t// 同步更新render一次 会合并处理\r\n\t\tsetcount(count + 1);\r\n\t\t// setfirst(first + 1);\r\n\t};\r\n\treturn (\r\n\t\t<Icard>\r\n\t\t\tadd:{count}----- ref:{Ref.current}\r\n\t\t\t<Button onClick={addFunc}>+</Button>\r\n\t\t\t<Son sonRef={sonRef}></Son>\r\n\t\t</Icard>\r\n\t);\r\n};\r\n\r\nconst Son: FC<SonProps> = ({ sonRef }) => {\r\n\treturn <div ref={sonRef}>son</div>;\r\n};\r\nexport default IuseRef;\r\n"],"names":["Son","_ref","sonRef","_jsx","ref","children","useRef","useEffect","_useState","useState","_useState2","_slicedToArray","count","setcount","_useState3","_useState4","Ref","_jsxs","Icard","current","Button","onClick"],"sourceRoot":""}