{"version":3,"file":"static/js/useEffect.f865161ed5f1030c57c4.js","mappings":"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","sources":["antdComponents/iCollapse/index.tsx","antdComponents/iCollapse/useStyleHooks.tsx","pluginComponents/iCodeEditor/index.tsx","views/react/hooks/useEffect/index.tsx"],"sourcesContent":["/**\r\n * @file 折叠面板\r\n * @author ly\r\n * @createDate 2023年4月5日\r\n */\r\nimport React, { FC, ReactNode } from 'react';\r\nimport { Collapse, CollapseProps } from 'antd';\r\nimport useStyleHooks from './useStyleHooks';\r\n\r\n/**\r\n * @param list 渲染数据\r\n * @param defaultActiveKey 初始化选中面板的 key\r\n * @param styleConfig 配置面板颜色主题类型\r\n * @param bordered 带边框风格的折叠面板\r\n * @param onChange 切换面板的回调\r\n * @param style 面板css样式\r\n * @param expandIcon 自定义切换图标\r\n */\r\nexport type IcollapseProps<T> = {\r\n\tlist: CollapseProps['items'];\r\n\tdefaultActiveKey?: T[];\r\n\tstyleConfig?: '1';\r\n\tbordered?: boolean;\r\n\tonChange?: (key: string | string[]) => void;\r\n\tstyle?: React.CSSProperties;\r\n\texpandIcon?: (value: { isActive?: boolean }) => ReactNode;\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst Icollapse = <T extends string | number>({\r\n\tlist,\r\n\tdefaultActiveKey,\r\n\tstyleConfig,\r\n\tbordered = true,\r\n\tonChange,\r\n\texpandIcon,\r\n\tstyle\r\n}: IcollapseProps<T>) => {\r\n\t// 折叠面板样式配置\r\n\tconst styleConfigParams = useStyleHooks({ list, styleConfig, style, bordered });\r\n\r\n\treturn (\r\n\t\t<Collapse\r\n\t\t\tbordered={styleConfigParams.bordered}\r\n\t\t\tdefaultActiveKey={defaultActiveKey}\r\n\t\t\tonChange={onChange}\r\n\t\t\texpandIcon={expandIcon}\r\n\t\t\tstyle={styleConfigParams.style}\r\n\t\t\titems={styleConfigParams.list}></Collapse>\r\n\t);\r\n};\r\n\r\nexport default Icollapse;\r\n","/**\r\n * @file 折叠面板主题样式配置\r\n * @author ly\r\n * @createDate 2023年5月12日\r\n */\r\nimport React from 'react';\r\nimport type { IcollapseProps } from './index';\r\nimport useThemeHooks from '@/config/antd/theme/useThemeHooks';\r\n\r\ntype UseStyleHooksProps<T> = Pick<IcollapseProps<T>, 'list' | 'styleConfig' | 'style' | 'bordered'>;\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst useStyleHooks = <T,>({ list, styleConfig, style, bordered }: UseStyleHooksProps<T>) => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\tconst ListStyle = {\r\n\t\tmarginBottom: 24,\r\n\t\tbackground: token.colorFillAlter,\r\n\t\tborderRadius: token.borderRadiusLG,\r\n\t\tborder: 'none'\r\n\t};\r\n\r\n\tif (styleConfig === '1') {\r\n\t\tconst listOne = list?.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tstyle: ListStyle\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn { list: listOne, style: { background: token.colorBgContainer }, bordered: false };\r\n\t}\r\n\r\n\t// 默认配置\r\n\treturn { list, styleConfig, style, bordered };\r\n};\r\n\r\nexport default useStyleHooks;\r\n","/**\r\n * @file 代码编辑器\r\n * @author ly\r\n * @createDate\r\n */\r\nimport React, { FC, useState } from 'react';\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/themes/prism.css'; //Example style, you can use another\r\n\r\ntype IcodeEditorProps = {\r\n\tinitCode: string;\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IcodeEditor: FC<IcodeEditorProps> = ({ initCode = `function add(a, b) {\\n  return a + b;\\n}` }) => {\r\n\tconst [code, setCode] = useState(initCode);\r\n\r\n\treturn (\r\n\t\t<Editor\r\n\t\t\tvalue={code}\r\n\t\t\tonValueChange={(code) => setCode(code)}\r\n\t\t\thighlight={(code) => highlight(code, languages.js, 'jsx')}\r\n\t\t\tpadding={10}\r\n\t\t\tstyle={{\r\n\t\t\t\t// fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n\t\t\t\tfontSize: 14\r\n\t\t\t}}\r\n\t\t\treadOnly={true}\r\n\t\t\tdisabled={true}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default IcodeEditor;\r\n","/**\r\n * @file useEffect\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport React, { FC, useState, useEffect } from 'react';\r\nimport { Button } from 'antd';\r\nimport Icard from '@/antdComponents/iCard';\r\nimport Icollapse from '@/antdComponents/iCollapse';\r\nimport IcodeEditor from '@/pluginComponents/iCodeEditor';\r\n\r\ntype SonProps = {\r\n\tvalue: number;\r\n};\r\n\r\nconst initCode = `//闭包陷阱\r\nfunction Counter() {\r\n\tconst [count, setCount] = useState(0);\r\n  \r\n\tuseEffect(() => {\r\n\t  const id = setInterval(() => {\r\n\t\tsetCount(count + 1);\r\n\t  }, 1000);\r\n\t  return () => clearInterval(id);\r\n\t}, []);\r\n  \r\n\treturn <h1>{count}</h1>;\r\n  }\r\n\r\n  // 解决方案1\r\n  useEffect(() => {\r\n\tconst id = setInterval(() => {\r\n\t  setCount(count + 1);\r\n\t}, 1000);\r\n\treturn () => clearInterval(id);\r\n  }, [count]);\r\n  //缺陷\r\n  // 计时器不准了，因为每次 count 变化时都会销毁并重新计时。\r\n  // 频繁 生成/销毁 定时器带来了一定性能负担。\r\n\r\n  // 完美解决方案\r\n  useEffect(() => {\r\n\tconst id = setInterval(() => {\r\n\t  setCount(c => c + 1);\r\n\t}, 1000);\r\n\treturn () => clearInterval(id);\r\n  }, []);\r\n  \r\n  `;\r\n\r\nconst list = [\r\n\t{\r\n\t\tlabel: '执行机制',\r\n\t\tchildren: '浏览器渲染之后执行,不会阻塞渲染',\r\n\t\tkey: '0'\r\n\t},\r\n\t{\r\n\t\tlabel: '无参数',\r\n\t\tchildren: '每次 reader 都会执行',\r\n\t\tkey: '1'\r\n\t},\r\n\t{\r\n\t\tlabel: '空数组 []',\r\n\t\tchildren: '组件初始化执行一次',\r\n\t\tkey: '2'\r\n\t},\r\n\t{\r\n\t\tlabel: '数组并且有参数 [a,b]',\r\n\t\tchildren: '数组内数据变化就会执行',\r\n\t\tkey: '3'\r\n\t},\r\n\t{\r\n\t\tlabel: '回调函数中 return 作用',\r\n\t\tchildren: (\r\n\t\t\t<div>\r\n\t\t\t\t<div>1、清理上一次事件绑定,不清理会导致事件多次绑定</div>\r\n\t\t\t\t<div>2、组件初始化不执行,组件销毁时执行,数据更新时先执行 return 函数</div>\r\n\t\t\t</div>\r\n\t\t),\r\n\t\tkey: '4'\r\n\t},\r\n\t{\r\n\t\tlabel: '示例代码',\r\n\t\tchildren: (\r\n\t\t\t<>\r\n\t\t\t\t<IcodeEditor initCode={initCode}></IcodeEditor>\r\n\t\t\t</>\r\n\t\t),\r\n\t\tkey: '5'\r\n\t}\r\n];\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IuseEffect = () => {\r\n\tconst [value, setValue] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log('我没有参数', value);\r\n\t\treturn () => {\r\n\t\t\t// console.log('return我没有参数', value);\r\n\t\t};\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log('我的参数[]', value);\r\n\t\treturn () => {\r\n\t\t\t// console.log('return我的参数[]', value);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log('我的参数[value]', value);\r\n\t\treturn () => {\r\n\t\t\t// console.log('return我的参数[value]', value);\r\n\t\t};\r\n\t}, [value]);\r\n\r\n\tconst add = () => {\r\n\t\tsetValue(value + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Icard>\r\n\t\t\t<Button type=\"link\" onClick={add}>\r\n\t\t\t\t+1\r\n\t\t\t</Button>\r\n\t\t\t<Son value={value}></Son>\r\n\t\t\t<Icollapse styleConfig=\"1\" defaultActiveKey={['0']} list={list}></Icollapse>\r\n\t\t</Icard>\r\n\t);\r\n};\r\n\r\nexport default IuseEffect;\r\n\r\nconst Son: FC<SonProps> = ({ value }) => {\r\n\tuseEffect(() => {\r\n\t\t// console.log('son effect');\r\n\t\treturn () => {\r\n\t\t\t// console.log('son effect return');\r\n\t\t};\r\n\t});\r\n\treturn <>{value}</>;\r\n};\r\n"],"names":["_ref","list","defaultActiveKey","styleConfig","_ref$bordered","bordered","onChange","expandIcon","styleConfigParams","style","token","useThemeHooks","ListStyle","marginBottom","background","colorFillAlter","borderRadius","borderRadiusLG","border","map","item","_objectSpread","colorBgContainer","useStyleHooks","_jsx","Collapse","items","_ref$initCode","initCode","_useState","useState","_useState2","_slicedToArray","code","setCode","Editor","value","onValueChange","highlight","languages","js","padding","fontSize","readOnly","disabled","label","children","key","_jsxs","_Fragment","IcodeEditor","setValue","useEffect","Icard","Button","type","onClick","Son","Icollapse"],"sourceRoot":""}