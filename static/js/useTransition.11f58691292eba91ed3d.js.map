{"version":3,"file":"static/js/useTransition.11f58691292eba91ed3d.js","mappings":"wLA2DA,UAhDuB,WACtB,IAAAA,GAAqCC,EAAAA,EAAAA,iBAAeC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAASF,EAAA,GAAEG,EAAeH,EAAA,GACjCI,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/BG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwBJ,EAAAA,EAAAA,UAAmB,IAAGK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAvCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEdG,GAAIC,EAAAA,EAAAA,cACTC,EAAAA,EAAAA,WAAS,SAACC,GACTb,GAAgB,WAEf,IADA,IAAMc,EAAM,GACHC,EAAI,EAAGA,EAAI,KAAOA,IAC1BD,EAAIE,KAAKH,GAEVJ,EAAQK,EACT,GACD,GAAG,KACH,IAED,OACCG,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACLF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,WAELC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACLR,MAAOT,EACPkB,SAAU,SAACC,GACVlB,EAASkB,EAAEC,OAAOX,OAClBH,EAAEa,EAAEC,OAAOX,MACZ,QAGFI,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,QAELC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACLR,MAAOT,EACPkB,SAAU,SAACC,GACVlB,EAASkB,EAAEC,OAAOX,OAElB,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAI,KAAOA,IAC1BD,EAAIE,KAAKO,EAAEC,OAAOX,OAEnBJ,EAAQK,EACT,OAGDf,GAAYqB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,WAAeX,EAAKiB,KAAI,SAACC,EAAMC,GAAK,OAAKP,EAAAA,EAAAA,KAAA,OAAAD,SAAkBO,GAARC,EAAmB,MAG3F,C","sources":["views/react/hooks/useTransition/index.tsx"],"sourcesContent":["/**\r\n * @file useTransition 返回一个状态值表示过渡任务的等待状态，以及一个启动该过渡任务的函数。\r\n * @author ly\r\n * @createDate 2023年3月9日\r\n */\r\nimport React, { useState, useTransition, useCallback } from 'react';\r\nimport { debounce } from 'lodash';\r\nimport Icard from '@/antdComponents/iCard';\r\nimport { Input } from 'antd';\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IuseTransition = () => {\r\n\tconst [isPending, startTransition] = useTransition();\r\n\tconst [input, setInput] = useState('');\r\n\tconst [list, setList] = useState<string[]>([]);\r\n\r\n\tconst a = useCallback(\r\n\t\tdebounce((value) => {\r\n\t\t\tstartTransition(() => {\r\n\t\t\t\tconst res = [];\r\n\t\t\t\tfor (let i = 0; i < 15000; i++) {\r\n\t\t\t\t\tres.push(value);\r\n\t\t\t\t}\r\n\t\t\t\tsetList(res);\r\n\t\t\t});\r\n\t\t}, 500),\r\n\t\t[]\r\n\t);\r\n\treturn (\r\n\t\t<Icard>\r\n\t\t\t<span>\r\n\t\t\t\t优化后输入框：\r\n\t\t\t\t<Input\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetInput(e.target.value);\r\n\t\t\t\t\t\ta(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t输入框：\r\n\t\t\t\t<Input\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetInput(e.target.value);\r\n\t\t\t\t\t\tconst res = [];\r\n\t\t\t\t\t\tfor (let i = 0; i < 15000; i++) {\r\n\t\t\t\t\t\t\tres.push(e.target.value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetList(res);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t\t{isPending ? <div>加载中...</div> : list.map((item, index) => <div key={index}>{item}</div>)}\r\n\t\t</Icard>\r\n\t);\r\n};\r\n\r\nexport default IuseTransition;\r\n"],"names":["_useTransition","useTransition","_useTransition2","_slicedToArray","isPending","startTransition","_useState","useState","_useState2","input","setInput","_useState3","_useState4","list","setList","a","useCallback","debounce","value","res","i","push","_jsxs","Icard","children","_jsx","Input","onChange","e","target","map","item","index"],"sourceRoot":""}