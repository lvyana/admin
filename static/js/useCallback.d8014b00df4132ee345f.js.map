{"version":3,"file":"static/js/useCallback.d8014b00df4132ee345f.js","mappings":"mMAeMA,EAAU,WACf,OAAOC,MAAQC,UAAUC,UAC1B,EAoCA,UAhCqB,WACpB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAiBL,KAAUM,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,GAA0CL,EAAAA,EAAAA,UAAiBL,KAAUW,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,GAAkBC,EAAAA,EAAAA,cAAY,WACnCF,EAAiBb,IAClB,GAAG,IAEGgB,EAAU,WACfP,EAAST,IACV,EAEA,OACCiB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACLF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACCC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,OAAON,QAASA,EAAQG,SAAC,UAGtCC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,OAAON,QAASF,EAAgBK,SAAC,sBAK/CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACCC,EAAAA,EAAAA,KAACG,EAAM,CAACC,KAAMhB,EAAOiB,QAAST,KAC9BI,EAAAA,EAAAA,KAACM,EAAiB,CAACF,KAAMZ,EAAea,QAASX,SAIrD,EAIA,IAAMS,EAAS,SAAHI,GAAmD,IAA7CH,EAAIG,EAAJH,KAAMC,EAAOE,EAAPF,QAGvB,OACCR,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,UACIK,EAAK,KAACJ,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcT,SAAEnB,OAC9CoB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,OAAON,QAASS,EAAQN,SAAC,YAKzC,EAEMO,GAAoBG,EAAAA,EAAAA,OAAK,SAAAC,GAAgD,IAA7CN,EAAIM,EAAJN,KAAMC,EAAOK,EAAPL,QAGvC,OACCR,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,UACIK,EAAK,KAACJ,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcT,SAAEnB,OAC9CoB,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,OAAON,QAASS,EAAQN,SAAC,YAKzC,IAEAO,EAAkBK,YAAc,mB","sources":["views/react/hooks/useCallback/index.tsx"],"sourcesContent":["/**\r\n * @file useCallback优化子组件 tips: useCallback 一定要搭配memo使用 否则子组件也会更新 props参数会影响更新\r\n * @author ly\r\n * @createDate 2022年4月27日\r\n */\r\nimport React, { useState, memo, useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport Icard from '@/antdComponents/iCard';\r\nimport dayjs from 'dayjs';\r\n\r\ninterface MyUseCallbackItemProps {\r\n\taddFunc: () => void;\r\n\titem: string | null;\r\n}\r\n\r\nconst getTime = () => {\r\n\treturn dayjs().valueOf().toString();\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IuseCallback = () => {\r\n\tconst [count, setCount] = useState<string>(getTime());\r\n\r\n\tconst [callbackCount, setCallbackCount] = useState<string>(getTime());\r\n\r\n\tconst onCallbackClick = useCallback(() => {\r\n\t\tsetCallbackCount(getTime());\r\n\t}, []);\r\n\r\n\tconst onClick = () => {\r\n\t\tsetCount(getTime());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Icard>\r\n\t\t\t<div>\r\n\t\t\t\t<Button type=\"link\" onClick={onClick}>\r\n\t\t\t\t\t普通点击\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button type=\"link\" onClick={onCallbackClick}>\r\n\t\t\t\t\tuseCallback点击\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<MyItem item={count} addFunc={onClick}></MyItem>\r\n\t\t\t\t<MyUseCallbackItem item={callbackCount} addFunc={onCallbackClick}></MyUseCallbackItem>\r\n\t\t\t</div>\r\n\t\t</Icard>\r\n\t);\r\n};\r\n\r\nexport default IuseCallback;\r\n\r\nconst MyItem = ({ item, addFunc }: MyUseCallbackItemProps) => {\r\n\t// console.log('普通子组件我更新了');\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t我是子组件: {item}-<span className=\"text-red-600\">{getTime()}</span>\r\n\t\t\t<Button type=\"link\" onClick={addFunc}>\r\n\t\t\t\t获取时间戳\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst MyUseCallbackItem = memo(({ item, addFunc }: MyUseCallbackItemProps) => {\r\n\t// console.log('useCallback子组件我更新了');\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t我是子组件: {item}-<span className=\"text-red-600\">{getTime()}</span>\r\n\t\t\t<Button type=\"link\" onClick={addFunc}>\r\n\t\t\t\t获取时间戳\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nMyUseCallbackItem.displayName = 'MyUseCallbackItem';\r\n"],"names":["getTime","dayjs","valueOf","toString","_useState","useState","_useState2","_slicedToArray","count","setCount","_useState3","_useState4","callbackCount","setCallbackCount","onCallbackClick","useCallback","onClick","_jsxs","Icard","children","_jsx","Button","type","MyItem","item","addFunc","MyUseCallbackItem","_ref","className","memo","_ref2","displayName"],"sourceRoot":""}