{"version":3,"file":"static/js/522.8282b1823182cfa54510.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","../node_modules/@ant-design/icons/es/icons/SettingOutlined.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["SettingOutlined","props","ref","React","AntdIcon","_extends","icon","SettingOutlinedSvg","_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","_ref2","layoutId","layoutGroupId","configAndProps","useContext","id","undefined","context","_getCurrentTreeVarian","initial","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","init","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","root","rootMargin","_viewport$amount","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","_ref$clamp","isClamp","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","remaining","offsetProgress","fillOffset","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","stiffness","damping","mass","isResolvedFromDuration","derived","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","exponentialDecay","exp","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","underDampedSpring","keyframesTransition","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueName","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","getDefaultTransition","setValue","createInstantAnimation","owner","HTMLElement","acceleratedAnimation","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createAcceleratedAnimation","isWillChangeMotionValue","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","_ref$transitionEnd","setTarget","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","xDelta","yDelta","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","_objectDestructuringEmpty","resolveCSSVariables","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}