{"version":3,"file":"static/js/432.de4c81b98835e3054428.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","../node_modules/@ant-design/icons/es/icons/SettingOutlined.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["SettingOutlined","props","ref","React","AntdIcon","_extends","icon","SettingOutlinedSvg","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","_ref2","layoutId","layoutGroupId","configAndProps","useContext","id","undefined","context","_getCurrentTreeVarian","initial","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","init","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","root","rootMargin","_viewport$amount","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","_ref$clamp","isClamp","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","remaining","offsetProgress","fillOffset","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","stiffness","damping","mass","isResolvedFromDuration","derived","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","exponentialDecay","exp","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","underDampedSpring","keyframesTransition","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueName","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","getDefaultTransition","setValue","createInstantAnimation","owner","HTMLElement","acceleratedAnimation","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createAcceleratedAnimation","isWillChangeMotionValue","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","_ref$transitionEnd","setTarget","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","xDelta","yDelta","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","_objectDestructuringEmpty","resolveCSSVariables","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}