{"version":3,"file":"static/js/expenses.8f79119ebcc100af5506.js","mappings":"4JA4EA,IAtC4C,SAAHA,GASlC,IARNC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAkBH,EAAlBG,mBAAkBC,EAAAJ,EAClBK,UAAAA,OAAS,IAAAD,GAAOA,EAAAE,EAAAN,EAChBO,gBAAAA,OAAe,IAAAD,GAAOA,EAAAE,EAAAR,EACtBS,gBAAAA,OAAe,IAAAD,GAAOA,EACtBE,EAAKV,EAALU,MACAC,EAASX,EAATW,UAOAC,EAA8BV,EAAKW,QAA3BC,EAAOF,EAAPE,QAASC,EAAQH,EAARG,SAEjB,OACCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACVP,OAAKQ,EAAAA,EAAAA,GAAA,CAAIC,UAAW,OAAQC,MAAO,SAAYV,GAC/CC,UAAWA,EACXV,MAAOA,EACPM,gBAAiBA,EACjBE,gBAAiBA,EACjBY,eAAgBP,EAChBQ,gBAAiBP,EACjBF,QAASC,EACTC,SAAUA,EAEVQ,SAnBe,SAACT,EAAiBC,GAClCb,EAAKW,QAAU,CAAEE,SAAAA,EAAUD,QAAAA,GAC3BX,EAAmB,SACpB,EAiBEE,UAAW,SAACJ,GACX,GAAII,EACH,MAAM,KAANmB,OAAYvB,EAAK,KAEnB,GAGH,C,sECpCA,IAZoC,SAAHD,GAA0E,IAApEyB,EAAQzB,EAARyB,SAAUC,EAAK1B,EAAL0B,MAAOC,EAAiB3B,EAAjB2B,kBAAiBC,EAAA5B,EAAE6B,UAAAA,OAAS,IAAAD,EAAG,MAAKA,EACnFE,GAD0F9B,EAAL+B,OAC3EC,EAAAA,EAAAA,KAAVF,OAER,OACCd,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,UACCT,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,CAACL,UAAWA,EAAWF,kBAAmBA,EAAmBI,MAAOD,EAAMK,aAAcT,MAAOA,EAAMD,SAC3GA,KAIL,C,uEChCaW,EAAmB,SAAIC,EAAUC,EAAWC,GACxD,IAAMC,EAAMC,KAAKC,MAAMD,KAAKE,UAAUN,IAEtC,OADAG,EAAII,OAAMC,MAAVL,EAAG,CAAQD,EAAG,GAACf,QAAAsB,EAAAA,EAAAA,GAAKN,EAAII,OAAON,EAAG,MAC3BE,CACR,C,kOCCQO,EAAgBC,EAAAA,EAAhBD,YASKE,EAAwC,SAAHjD,GAA8D,IAAxDkD,EAAKlD,EAALkD,MAAOC,EAAMnD,EAANmD,OAAQC,EAAUpD,EAAVoD,WAAY7B,EAAQvB,EAARuB,SAAU8B,EAAWrD,EAAXqD,YAC5F,OAAOC,EAAAA,EAAAA,GAAe,CACrBJ,MAAAA,EACAC,OAAAA,EACAC,WAAAA,EACA7B,SAAUA,EACV8B,YAAAA,EACAE,UAAU,EACVC,oBAAqBT,GAEvB,EAoBA,EAlBwC,SAAHU,GAAyC,IAAnChC,EAAQgC,EAARhC,SAAUiC,EAAQD,EAARC,SAAUC,EAAOF,EAAPE,QAC9D,OACCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAClD,UAAU,MAAKc,SAAA,EACnBT,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CAAArC,UACHT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,OAAMc,SAAEA,OAExBmC,EAAAA,EAAAA,MAACE,EAAAA,EAAG,CAAArC,SAAA,EACHT,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CAACpD,UAAU,OAAOqD,KAAK,UAAUC,QAASN,EAAQlC,SAAC,QAG1DT,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CAACpD,UAAU,OAAOqD,KAAK,UAAUC,QAASP,EAASjC,SAAC,YAM/D,EC9BA,EAduB,SAACuC,GACvB,MAAa,eAATA,EACIf,EAGD,WAIN,OAFQjC,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,SAAE,OAGX,CACD,ECoEMyC,EAAiB,SAAHC,GAU+D,IATlFH,EAAIG,EAAJH,KACAI,EAAID,EAAJC,KACAC,EAAYF,EAAZE,aACAC,EAAeH,EAAfG,gBACAC,EAAOJ,EAAPI,QACAC,EAAOL,EAAPK,QACAC,EAASN,EAATM,UACAC,EAAQP,EAARO,SACAC,EAAaR,EAAbQ,cA4BA,OApBAC,EAAAA,EAAAA,YAAU,WACLJ,GACHF,EAAgBF,EAAKvD,QAAQ4D,IAAc,GAE7C,GAAG,CAACD,KAiBHxD,EAAAA,EAAAA,KAAC6D,EAAU,CAAClB,QAfG,WACfS,EAAKvD,QAAQ4D,GAAa,GAC1BH,EAAgB,IAChBC,IACAG,GACD,EAU+BhB,SARd,WAChBU,EAAKvD,QAAQ4D,GAAaJ,EAC1BC,EAAgBD,GAChBE,IACAG,GACD,EAGkDjD,SAC/CqD,EAAed,EAAfc,EAAoB5D,EAAAA,EAAAA,GAAC,CAAEgC,MAAOmB,EAAc9C,SA1B9B,SAAC2B,GACjBoB,EAAgBpB,EACjB,GAwB4DyB,KAI7D,EAEA,EAxE6B,SAAH3E,GAAA,IACzBgE,EAAIhE,EAAJgE,KACAS,EAASzE,EAATyE,UACAC,EAAQ1E,EAAR0E,SACAN,EAAIpE,EAAJoE,KACAO,EAAa3E,EAAb2E,cAAa,MACkD,CAC/DI,eAAgB,SAAAtB,GAA0D,IAAvDY,EAAYZ,EAAZY,aAAcC,EAAeb,EAAfa,gBAAiBC,EAAOd,EAAPc,QAASC,EAAOf,EAAPe,QAC1D,OACCxD,EAAAA,EAAAA,KAACkD,EAAc,CACdF,KAAMA,EACNI,KAAMA,EACNK,UAAWA,EACXJ,aAAcA,EACdC,gBAAiBA,EACjBC,QAASA,EACTC,QAASA,EACTE,SAAUA,EACVC,cAAeA,GAElB,EACAK,WAAY,SAACC,GAAuB,IAADC,EAClC,OAAOlE,EAAAA,EAAAA,KAACmE,EAAAA,EAAc,CAACzE,MAAO,CAAEqB,MAA8B,QAAvBmD,EAAAd,EAAKvD,QAAQ4D,UAAU,IAAAS,GAAvBA,EAAyBE,OAAS,eAAYC,IACtF,EACA,E,uDC5DKC,EAA4C,CACjDC,SAAU,QACVC,IAAK,IACLC,MAAO,IACPC,OAAQ,GACRC,UAAW,sBAyEZ,EApEoD,SAAH3F,GAAsB,IAAhByB,EAAQzB,EAARyB,SAUhDmE,GAAaC,EAAAA,EAAAA,UACbC,GAAoBD,EAAAA,EAAAA,UAE1BE,GAAwBC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAcpB,OACCrC,EAAAA,EAAAA,MAAA3B,EAAAA,SAAA,CAAAR,SAAA,EACCT,EAAAA,EAAAA,KAACqF,EAAAA,EAAOC,IAAG,CACVC,OAAQ,SAACC,EAAGC,GACXb,EAAW/E,QAAU4F,EAAKC,OAC1BZ,EAAkBjF,QAAU4F,EAAKE,MACjCH,EAAEI,iBACFJ,EAAEK,iBACH,EACA5C,QAtBY,WACd,GAAI2B,EAAW/E,QACd,OAAOiG,YAAW,WACjBlB,EAAW/E,QAAU,IACtB,GAAG,KAEJuF,GAAQ,EACT,EAgBGW,MAAI,EACJC,YAAa,EACbC,gBAAiB,CAChBzB,KAAM,GACN0B,MAAO,IACPzB,MAAO,GACP0B,OAAQ,KAETzG,OAAKQ,EAAAA,EAAAA,GAAA,CAAIkG,QAASjB,EAAO,QAAU,OAAQkB,UAAW,UAAa/B,GAAuB7D,UAC1FT,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CAACuD,MAAM,SAASC,MAAMvG,EAAAA,EAAAA,KAACmE,EAAAA,EAAc,SAG3CgB,IACDnF,EAAAA,EAAAA,KAAA,OAAKN,MAjD8C,CACrD6E,SAAU,QACVC,IAAK,GACL0B,KAAM,EACNM,MAAO,OACP9B,OAAQ,GACR+B,QAAS,IA2C8BhG,UACpCT,EAAAA,EAAAA,KAACqF,EAAAA,EAAOC,IAAG,CAAC5F,MAAO,CAAEgH,QAAS,GAAKC,QAAS,CAAED,QAAS,EAAGnF,EAAG,QAAUqF,WAAY,CAAEC,KAAM,SAAUC,SAAU,IAAMrG,UACpHmC,EAAAA,EAAAA,MAACmE,EAAAA,EAAK,CAACpH,UAAS,aAAec,SAAA,CAC7BA,GACDT,EAAAA,EAAAA,KAAA,OAAAS,UACCT,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CACNC,KAAK,OACLC,QAlCS,WAChBmC,GAAQ,EACT,EAiCQ1F,MAAO,CAAE6E,SAAU,SAAU4B,OAAQ,EAAGD,KAAM,MAAOvB,UAAW,sBAChE4B,MAAMvG,EAAAA,EAAAA,KAACgH,EAAAA,EAAU,iBAQ1B,E,WCxDA,EAlBoB,SAAHhI,GAAoG,IAA9CoE,EAAIpE,EAAJoE,KAAM6D,EAAQjI,EAARiI,SAC5E,OACCrE,EAAAA,EAAAA,MAAA3B,EAAAA,SAAA,CAAAR,SAAA,EACCT,EAAAA,EAAAA,KAACkH,EAAAA,GAAc,CAACC,SAAU,KAAK1G,UAC9BT,EAAAA,EAAAA,KAACoH,EAAgB,CAAA3G,UAChBT,EAAAA,EAAAA,KAACqH,EAAAA,EAAK,CAACjE,KAAMA,EAAM6D,SAAUA,SAI/BjH,EAAAA,EAAAA,KAACsH,EAAAA,GAAc,CAACC,SAAU,KAAK9G,UAC9BT,EAAAA,EAAAA,KAAC+G,EAAAA,EAAK,CAACS,UAAW,CAAEC,cAAe,GAAIhH,UACtCT,EAAAA,EAAAA,KAACqH,EAAAA,EAAK,CAACjE,KAAMA,EAAM6D,SAAUA,UAKlC,E,gCC+CA,EA5D8B,SAAHjI,GAA4B,IAAtBoE,EAAIpE,EAAJoE,KAAMsE,EAAQ1I,EAAR0I,SACtCC,ECZsB,WAAgB,IAAfC,EAAIC,UAAAzD,OAAA,QAAAC,IAAAwD,UAAA,GAAAA,UAAA,GAAG,GAC9B9C,GAAoCC,EAAAA,EAAAA,UAA4B,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5D+C,EAAU7C,EAAA,GAAE8C,EAAa9C,EAAA,IAEhCrB,EAAAA,EAAAA,YAAU,WAET,OADAoE,IACO,WACND,EAAc,GACf,CACD,GAAGH,GAGH,IAAMI,EAAS,eAAAhJ,GAAAiJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACCC,EAAAA,EAAAA,KAAS,KAAD,EAApBN,EAAGG,EAAAI,KACDN,EAASD,EAATC,KACRP,EAAcO,GAAM,wBAAAE,EAAAK,OAAA,GAAAT,EAAA,KACpB,kBAJc,OAAApJ,EAAA6C,MAAA,KAAAgG,UAAA,KAMf,MAAO,CAAEC,WAAAA,EACV,CDNwBgB,GAEjB7B,EAAyF,CAY9F,CACCjE,KAAM,QACN+F,KAAM,MACNC,MAAO,KACPC,IAAK,EACLC,OAAQ,CACPC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAErBA,KAAM,GAEP,CACCpG,KAAM,SACN+F,KAAM,SACNC,MAAO,KACPM,UAAW,CACVnH,OA9BewF,EAAVG,WA+BL1F,WAAY,CAAE4G,MAAO,OAAQ9G,MAAO,WAErC+G,IAAK,EACLC,OAAQ,CACPC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAErBA,KAAM,GAEP,CACCpG,KAAM,SACN+F,KAAM,SACNE,IAAK,GACLG,KAAM,EACNE,UAAW,CACVnH,OAAQ,CACP,CAAEoH,QAAS,UAAWvG,KAAM,SAAU+F,KAAM,KAAMS,SAAU,eAC5D,CAAExG,KAAM,UAAW+F,KAAM,KAAMS,SAAU,gBAAiB7J,UAAW,SAEtED,MAAO,CAAE+J,WAAY,QACrBxG,QAASyE,KAKZ,OAAO1H,EAAAA,EAAAA,KAAC0J,EAAW,CAACtG,KAAMA,EAAM6D,SAAUA,GAC3C,E,mGENA,EAtDoC,SAAHjI,GAAsE,IAAhE2K,EAAQ3K,EAAR2K,SAAUC,EAAW5K,EAAX4K,YAAaC,EAAc7K,EAAd6K,eAAgBC,EAAiB9K,EAAjB8K,kBAsC7E,OACC9J,EAAAA,EAAAA,KAAC+J,EAAAA,EAAI,CACJpK,UAAU,iBACViK,YAAaA,EACbI,QAAS,SAACJ,GAhCXE,EAgCmCF,EAAqB,EACvDK,WAAS,EACTC,WAAS,EACTC,YA5C4C,SAAC1E,GAG9C,EA0CC2E,OAhCkC,SAAC3E,GAEpC,IAAM4E,EAAQV,EAASW,WAAU,SAACC,GAAI,OAAKA,EAAKC,gBAAkB/E,EAAKgF,cAAc,EAAE,IAGvF,KAA2B,IAAvBhF,EAAKiF,cAAiC,IAAVL,IAErB5E,EAAKiF,eAAiBL,EAE1B,IAA2B,IAAvB5E,EAAKiF,aAAqB,CAEpC,IAAIC,GAAWvJ,EAAAA,EAAAA,GAAiBuI,EAAUU,EAAO,GACjDR,EAAec,EAChB,MAAO,GAAIlF,EAAKiF,aAAeL,EAAO,CAErC,IAAIM,GAAWvJ,EAAAA,EAAAA,GAAiBuI,EAAUU,EAAO5E,EAAKiF,aAAe,GACrEb,EAAec,EAChB,MAAO,GAAIlF,EAAKiF,aAAeL,EAAO,CAErC,IAAIM,GAAWvJ,EAAAA,EAAAA,GAAiBuI,EAAUU,EAAO5E,EAAKiF,cACtDb,EAAec,EAChB,CACD,EAWEC,SAAUjB,EACVvH,WAAY,CAAE1B,MAAO,kBAAmBuI,IAAK,gBAAiBxI,SAAU,YACxEoK,WAAS,GAGZ,ECuBMC,EAAsB,SAAC9H,EAAc+H,GAC1C,OAAOA,EAAaC,QAAO,SAACC,EAAyBV,GACpD,OAAIA,EAAKvH,OAASA,EACVuH,EAAKW,YAEND,CACR,GAAG,GACJ,E,WC1EME,EAAwC,SAAHnM,GAAqC,IAA/BgE,EAAIhE,EAAJgE,KAAMoI,EAAIpM,EAAJoM,KAAMC,EAAWrM,EAAXqM,YACtDC,GAAWC,EAAAA,EAAAA,MAGjBC,ED6B2B,SAACxI,EAAcoI,GAC1C,IAAML,GAAeU,EAAAA,EAAAA,IAAeC,EAAAA,IAGpCC,GAAgD3G,EAAAA,EAAAA,UAA6B,IAAG4G,GAAA1G,EAAAA,EAAAA,GAAAyG,EAAA,GAAzEE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAG5CG,GAAsC/G,EAAAA,EAAAA,UAAgB,IAAGgH,GAAA9G,EAAAA,EAAAA,GAAA6G,EAAA,GAAlDnC,EAAWoC,EAAA,GAAEC,EAAcD,EAAA,GAuBlC,OAVApI,EAAAA,EAAAA,YAAU,WACT,GAAIwH,EAAM,CACT,IAAMc,EAAsBpB,EAAoB9H,EAAM+H,GACtDe,EAAoBI,GAEpB,IAAMC,EAfe,SAACN,GACvB,OAAOA,EAAiBb,QAAO,SAACC,EAAYV,GAC3C,MAA4B,SAAxBA,EAAK6B,eACF,GAAN5L,QAAAsB,EAAAA,EAAAA,GAAWmJ,GAAG,CAAEV,EAAKC,gBAEdS,CAET,GAAG,GACJ,CAOyBoB,CAAeH,GACtCD,EAAeE,EAChB,CACD,GAAG,CAACpB,EAAcK,IAEX,CAAES,iBAAAA,EAAkBC,oBAAAA,EAAqBlC,YAAAA,EAAaqC,eAAAA,EAC9D,CC5DgFK,CAAoBtJ,EAAMoI,GAAjGS,EAAgBL,EAAhBK,iBAAkBC,EAAmBN,EAAnBM,oBAAqBlC,EAAW4B,EAAX5B,YAAaqC,EAAcT,EAAdS,eAO5DlH,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDwH,EAActH,EAAA,GAAEuH,EAAiBvH,EAAA,GASlCwH,EAAQ,eAAAhK,GAAAwF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAsE,EAAA,OAAAxE,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAUV,OAPN8D,GAAkB,GACZE,EAAab,EAAiBb,QAAO,SAACC,EAAYV,GACvD,OAAiD,IAA7CX,EAAY+C,QAAQpC,EAAKC,eACtB,GAANhK,QAAAsB,EAAAA,EAAAA,GAAWmJ,GAAG,CAAEV,EAAKC,gBAEdS,CAET,GAAG,IAAGzC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,ECrDqBJ,EDuDP,CAAEtF,KAAAA,EAAMkI,YAAawB,ICtDnCE,EAAAA,EAAAA,IAAM,CACZC,IAAK,gBACLC,OAAQ,OACRxE,KAAAA,IDmDuD,KAAD,EAErDgD,GAASyB,EAAAA,EAAAA,OACT1B,IAAc7C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAwE,GAAAxE,EAAA,iBAEfgE,GAAkB,GAAO,yBAAAhE,EAAAK,OC5DpB,IAAsBP,CD4DF,GAAAF,EAAA,kBACzB,kBAlBa,OAAA3F,EAAAZ,MAAA,KAAAgG,UAAA,KAwBdoF,GAA0CjI,EAAAA,EAAAA,WAAS,GAAMkI,GAAAhI,EAAAA,EAAAA,GAAA+H,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCvB,GAAgC3G,EAAAA,EAAAA,WAAS,GAAM4G,GAAA1G,EAAAA,EAAAA,GAAAyG,EAAA,GAAxC0B,EAAQzB,EAAA,GAAE0B,EAAW1B,EAAA,IAwB5BhI,EAAAA,EAAAA,YAAU,WACkB,IAAvBgG,EAAYxF,OAEfmJ,EAAY,KACF1B,EAAiBzH,SAAWwF,EAAYxF,OAElDmJ,EAAY,KAGZA,EAAY,IAEd,GAAG,CAAC3D,IAGJ,IAAM2D,EAAc,SAACvK,GACP,MAATA,GACHoK,GAAiB,GACjBE,GAAY,IACO,MAATtK,GACVoK,GAAiB,GACjBE,GAAY,IACO,MAATtK,IACVoK,GAAiB,GACjBE,GAAY,GAEd,EAEA,OACC1K,EAAAA,EAAAA,MAAC4K,EAAAA,EAAM,CAAC9M,MAAO,OAAQ0K,KAAMA,EAAMqC,aApFG,SAACzK,GAC1B,OAATA,EACHyJ,IACmB,WAATzJ,GAwBXqI,GArBD,EA8EgEkB,eAAgBA,EAAe9L,SAAA,EAC7FT,EAAAA,EAAAA,KAAC0N,EAAAA,EAAQ,CAACP,cAAeA,EAAe5M,SAnDjB,SAACiF,GAGzB,GAFA4H,GAAiB,GACjBE,EAAY9H,EAAEmI,OAAOC,SACjBpI,EAAEmI,OAAOC,QAAS,CAErB,IAAMC,EAAUhC,EAAiBb,QAAO,SAACC,EAAYV,GACpD,MAAM,GAAN/J,QAAAsB,EAAAA,EAAAA,GAAWmJ,GAAG,CAAEV,EAAKC,eACtB,GAAG,IACHyB,EAAe4B,EAChB,MAEC5B,EAAe,GAEjB,EAsCsE2B,QAASP,EAAS5M,SAAC,QAGvFT,EAAAA,EAAAA,KAAC8N,EAAQ,CACRnE,SAAUkC,EACVjC,YAAaA,EACbC,eAjGoB,SAACkE,GACvBjC,EAAoBiC,EACrB,EAgGGjE,kBAxCuB,SAACkE,GAC1B/B,EAAe+B,EAChB,MAyCD,EAMA,GAAeC,EAAAA,EAAAA,MAAK9C,GEjGpB,EA3BwC,SAAHnM,GAA4B,IAAtByB,EAAQzB,EAARyB,SAAUuC,EAAIhE,EAAJgE,KACpD+B,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CmJ,EAAUjJ,EAAA,GAAEkJ,EAAalJ,EAAA,GAK1BoG,GAAc+C,EAAAA,EAAAA,cAAY,WAC/BD,GAAc,EACf,GAAG,CAACD,IAEJ,OACCtL,EAAAA,EAAAA,MAAA3B,EAAAA,SAAA,CAAAR,SAAA,EACCmC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACwL,QAAQ,gBAAe5N,SAAA,EAC3BT,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CAAArC,SAAEA,KACNT,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CAAArC,UACHT,EAAAA,EAAAA,KAAC6C,EAAAA,EAAG,CAAApC,UACHT,EAAAA,EAAAA,KAAC8C,EAAAA,EAAG,CAAArC,UACHT,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CAACC,KAAK,OAAOuD,MAAMvG,EAAAA,EAAAA,KAACsO,EAAAA,EAAe,IAAKrL,QAflC,WAClBkL,GAAc,EACf,cAkBEnO,EAAAA,EAAAA,KAACmL,EAAa,CAACnI,KAAMA,EAAMoI,KAAM8C,EAAY7C,YAAaA,MAG7D,ECVakD,EAAY,SAACjG,GACzB,OAAOkG,EAAAA,EAAAA,IAA8C,CACpD3B,IAAK,sBACLC,OAAQ,OACRxE,KAAAA,GAEF,E,sBC8CA,GAhEiB,WAChB,IAAMmG,GAAoB5J,EAAAA,EAAAA,QAA0B,CACnDkE,KAAM,KAUC2F,ECFc,SAAH1P,GAAkE,IAA5D2P,EAAW3P,EAAX2P,YAAaF,EAAiBzP,EAAjByP,kBAChCG,GAAWC,EAAAA,EAAAA,MAqBjB9J,GAA0BC,EAAAA,EAAAA,UAA6C,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnE+J,EAAK7J,EAAA,GAAE8J,EAAQ9J,EAAA,GAqGtB,MAAO,CAAEyJ,QAnGwC,EAAAxO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAE/CQ,MAAO,KACP+C,UAAW,OACXwF,IAAK,QACF+F,EAA0E,CAC5EhM,KAAM,aACNS,UAAW,OACXC,SAAU,kBAAMiL,EAAY,OAAO,EACnCvL,KAAMqL,EACN9K,cAAe,CACdxB,OAAQ,CACP,CACCzB,MAAO,cACPwB,MAAO,SAER,CACCxB,MAAO,eACPwB,MAAO,WAGTE,WAAY,CAAE4G,MAAO,QAAS9G,MAAO,SACrCG,YAAa,YAEb,IAEFmE,MAAO,IACPyI,MAAO,SACPC,OAAQ,SAACC,EAAMC,GAAM,OACpBpP,EAAAA,EAAAA,KAACqP,EAAAA,EAAQ,CAACxO,UAAU,MAAMF,kBAAmB,CAAE6F,MAAO,KAAO9F,OAAOV,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,SAAG0O,IAAS1O,UAC/ET,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CAACC,KAAK,OAAOtD,MAAO,CAAE8G,MAAO,KAAOvD,QAAS,kBAlDX,SAACD,EAAMoM,GAElDR,EAAS,YAAa,CAAEU,MAAO,CAAEvG,KAAMqG,EAAOrG,OAEhD,CA8C8DwG,CAAQ,EAAQH,EAAO,EAAC3O,UACjFT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAWD,MAAO,CAAE8G,MAAO,IAAK/F,SAC7C0O,OAGO,IAGb,CACCzO,MAAO,KACP+C,UAAW,MACXwF,IAAK,MACLzC,MAAO,IACPyI,MAAO,SACPC,OAAQ,SAACC,GAAI,OACZnP,EAAAA,EAAAA,KAACqP,EAAAA,EAAQ,CAACxO,UAAU,MAAMF,kBAAmB,CAAE6F,MAAO,SAAW9F,OAAOV,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,SAAG0O,IAAS1O,UACnFT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUc,SAAE0O,KACjB,GAGb,CACCzO,MAAO,KACP+C,UAAW,SACXwF,IAAK,SACLgG,MAAO,SACPC,OAAQ,SAACC,GAAI,OACZnP,EAAAA,EAAAA,KAACqP,EAAAA,EAAQ,CAACxO,UAAU,MAAMF,kBAAmB,CAAE6F,MAAO,SAAW9F,OAAOV,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,SAAG0O,IAAS1O,UACnFT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUc,SAAE0O,KACjB,GAGb,CACCzO,MAAO,KACP+C,UAAW,SACXwF,IAAK,SACLgG,MAAO,SACPC,OAAQ,SAACC,GAAI,OACZnP,EAAAA,EAAAA,KAACqP,EAAAA,EAAQ,CAACxO,UAAU,MAAMF,kBAAmB,CAAE6F,MAAO,SAAW9F,OAAOV,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,SAAG0O,IAAS1O,UACnFT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUc,SAAE0O,KACjB,GAGb,CACCzO,MAAO,KACP+C,UAAW,SACXwF,IAAK,SACLgG,MAAO,SACPC,OAAQ,SAACC,GAAI,OACZnP,EAAAA,EAAAA,KAACqP,EAAAA,EAAQ,CAACxO,UAAU,MAAMF,kBAAmB,CAAE6F,MAAO,SAAW9F,OAAOV,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,SAAG0O,IAAS1O,UACnFT,EAAAA,EAAAA,KAAA,OAAKL,UAAU,WAAUc,SAAE0O,KACjB,GAGb,CACCzO,MAAO,KACPuI,IAAK,YACLzC,MAAO,GACPyI,MAAO,SACPC,OAAQ,SAACC,EAAMC,GACd,OACCpP,EAAAA,EAAAA,KAACwP,EAAAA,EAAS,CACTV,MAAOA,EACPW,aAAc,SAACrE,GAAI,OAzGH,SAACA,EAAegE,GAChChE,GACH2D,EAAS,CACR,CAAE/L,KAAM,KAAM+F,KAAM,KAAMQ,QAAS,QACnC,CAAEvG,KAAM,KAAM+F,KAAM,KAAMQ,QAAS,SAKtC,CAgG6BkG,CAAarE,EAAa,EAClDsE,WAAY,SAAC1M,GAAI,OAAK2L,EAAY3L,EAAMoM,EAAO,GAElD,IAKH,CD1HqBO,CAAe,CAAEhB,YAPJ,SAAC3L,EAAMd,GAC1B,SAATc,IACH9D,EAAKW,QAAQC,QAAU,EACvB4H,EAAS,UAEX,EAEkD+G,kBAAAA,IAA1CC,QAERkB,EAAeC,EAAAA,EAAKC,UAAb1M,GAA0C8B,EAAAA,EAAAA,GAAA0K,EAAA,GAAtC,GAEXG,EE9BoB,WACpB,IAAAhL,GAAkDC,EAAAA,EAAAA,UAA8B,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5EiL,EAAiB/K,EAAA,GAAEgL,EAAoBhL,EAAA,GAE9CgI,GAA0BjI,EAAAA,EAAAA,UAAS,GAAEkI,GAAAhI,EAAAA,EAAAA,GAAA+H,EAAA,GAA9BhO,EAAKiO,EAAA,GAAEgD,EAAQhD,EAAA,GAEtBvB,GAA8B3G,EAAAA,EAAAA,WAAS,GAAM4G,GAAA1G,EAAAA,EAAAA,GAAAyG,EAAA,GAAtCwE,EAAOvE,EAAA,GAAEwE,EAAUxE,EAAA,GAEpByE,EAAY,eAAArR,GAAAiJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOkI,GAAuB,IAAAjI,EAAAC,EAAAiI,EAAA,OAAArI,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEhC,OAFgCF,EAAAC,KAAA,EAEjD2H,GAAW,GAAM5H,EAAAE,KAAA,EACC6F,GAASrO,EAAAA,EAAAA,GAAC,CAAC,EAAIoQ,IAAU,KAAD,EAApCjI,EAAGG,EAAAI,KACDN,EAAgBD,EAAhBC,KAAMrJ,EAAUoJ,EAAVpJ,MACdgR,EAAqB3H,GACrB4H,EAASjR,GAAOuJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAwE,GAAAxE,EAAA,iBAEjB4H,GAAW,GAAO,yBAAA5H,EAAAK,OAAA,GAAAT,EAAA,mBAClB,gBATiBoI,GAAA,OAAAxR,EAAA6C,MAAA,KAAAgG,UAAA,KAWlB,MAAO,CAAEmI,kBAAAA,EAAmB/Q,MAAAA,EAAOoR,aAAAA,EAAcF,QAAAA,EAClD,CFW6DM,GAApDT,EAAiBD,EAAjBC,kBAAmB/Q,EAAK8Q,EAAL9Q,MAAOoR,EAAYN,EAAZM,aAAcF,EAAOJ,EAAPI,QAGhDO,EG3BoB,SAACC,GACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,GAAQC,EAASG,SAE5BzF,GAAWC,EAAAA,EAAAA,MAEXyF,GAAYvF,EAAAA,EAAAA,IAAewF,EAAAA,IAC3BC,GAAoBC,EAAAA,EAAAA,UAAQ,kBAAMH,CAAS,GAAE,IAG7CI,EAAa,CAAC,kBAcpB,MAAO,CAAEF,kBAAAA,EAAmBG,iBAZH,SAAKnP,GAEzBkP,EAAWzE,QAAQmE,IAAa,IAElB,mBAAbA,EACHxF,GAASgG,EAAAA,EAAAA,IAAiBpP,IAE1BqP,EAAAA,GAAQC,MAAM,eAGjB,EAGD,CHCiDC,GAAxCP,EAAiBR,EAAjBQ,kBAAmBG,EAAgBX,EAAhBW,iBAErBnS,GAAO2F,EAAAA,EAAAA,QAAO,CACnB9E,UAAUmR,aAAiB,EAAjBA,EAAmBnR,WAAY,GACzCD,SAASoR,aAAiB,EAAjBA,EAAmBpR,UAAW,IAGlC4R,EAAe,SAACpB,GACrBe,EAAiBf,EAClB,GAEA1M,EAAAA,EAAAA,YAAU,WACT,IAAA5E,EAAiDkS,GAAqB,CAAC,EAA/DpR,EAAOd,EAAPc,QAASC,EAAQf,EAARe,SAAUgJ,EAAI/J,EAAJ+J,KAAM4I,EAAG3S,EAAH2S,IAAKhJ,EAAM3J,EAAN2J,OACtCvF,EAAKwO,eAAe,CAAED,IAAAA,EAAKhJ,OAAAA,IAC3B8F,EAAkB5O,QAAQkJ,KAAOA,EACjC7J,EAAKW,QAAU,CAAEC,QAASA,GAAWZ,EAAKW,QAAQC,QAASC,SAAUA,GAAYb,EAAKW,QAAQE,UAC9F2H,EAAS,SACV,GAAG,IAEH,IAAMA,EAAW,SAAC1E,GACjB,GAAa,WAATA,EAAmB,CACtB,IAAIsN,EAASlN,EAAKyO,iBAClBH,GAAYxR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoQ,GAAWpR,EAAKW,SAAY4O,EAAkB5O,SACjE,MAAO,GAAa,YAATmD,EAAoB,CAC9BI,EAAK0O,cACL,IAAIxB,EAASlN,EAAKyO,iBAClBH,GAAYxR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoQ,GAAWpR,EAAKW,SAAY4O,EAAkB5O,SACjE,CACA,IAAIyQ,EAASlN,EAAKyO,iBAClBxB,GAAYnQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoQ,GAAWpR,EAAKW,SAAY4O,EAAkB5O,SACjE,EAEA,OACC+C,EAAAA,EAAAA,MAAA,OAAAnC,SAAA,EACCT,EAAAA,EAAAA,KAAC+R,EAAS,CAAC3O,KAAMA,EAAMsE,SAAUA,KAEjC9E,EAAAA,EAAAA,MAACmE,EAAAA,EAAK,CAACS,UAAW,CAAErH,UAAW,QAASM,SAAA,EACvCT,EAAAA,EAAAA,KAACgS,EAAU,CAAChP,KAAM,cAClBhD,EAAAA,EAAAA,KAACiS,EAAAA,EAAM,CAAoBC,OAAO,MAAMxD,QAASA,EAASpG,KAAM0H,EAAmBG,QAASA,EAASgC,OAAQ,CAAE7Q,EAAG,WAClHtB,EAAAA,EAAAA,KAACoS,EAAAA,EAAY,CAACnT,MAAOA,EAAOC,KAAMA,EAAMC,mBAAoBuI,SAIhE,C","sources":["antdComponents/iPagination/index.tsx","antdComponents/iTooltip/index.tsx","utils/exchange.ts","antdComponents/iTable/components/headSeach/TableSeach.tsx","antdComponents/iTable/components/headSeach/modules.tsx","antdComponents/iTable/components/headSeach/index.tsx","pluginComponents/iAnimateComponent/index.tsx","antdComponents/iSearchForm/index.tsx","views/antd/expenses/components/SeachForm.tsx","useHooks/usePublicApi.tsx","antdComponents/iEditHeader/TreeMenu.tsx","useHooks/useHeaderConfig.tsx","antdComponents/iEditHeader/index.tsx","antdComponents/iEditHeader/service.ts","antdComponents/iEditTableHeader/index.tsx","views/antd/expenses/service.ts","views/antd/expenses/index.tsx","views/antd/expenses/useHooks/useTable.tsx","views/antd/expenses/useHooksApi.tsx","useHooks/useKeepAlive.tsx"],"sourcesContent":["/**\r\n * @file Paginations分页\r\n * @author ly\r\n * @createDate 2020年4月27日\r\n */\r\nimport React, { FC, useMemo } from 'react';\r\nimport { Pagination } from 'antd';\r\n\r\n/**\r\n * @param pageSize 每页条数\r\n * @param pageNum 当前页数\r\n */\r\ntype Page = {\r\n\tpageSize: number;\r\n\tpageNum: number;\r\n};\r\n\r\n/**\r\n * @param total 总条数\r\n * @param page 页码\r\n * @param onPaginationChange 页码或 pageSize 改变的回调，参数是改变后的页码及每页条数\r\n * @param showTotal 用于显示数据总量和当前数据顺序\r\n * @param showSizeChanger 是否展示 pageSize 切换器，当 total 大于 50 时默认为 true\r\n * @param showQuickJumper 是否可以快速跳转至某页\r\n */\r\ninterface IpaginationsProps {\r\n\ttotal?: number; // 条数\r\n\tpage: React.MutableRefObject<Page>;\r\n\tonPaginationChange: (type: 'subimt') => void;\r\n\tshowTotal?: boolean;\r\n\tshowSizeChanger?: boolean;\r\n\tshowQuickJumper?: boolean;\r\n\tstyle?: React.CSSProperties;\r\n\tclassName?: string;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst Ipaginations: FC<IpaginationsProps> = ({\r\n\ttotal,\r\n\tpage,\r\n\tonPaginationChange,\r\n\tshowTotal = true,\r\n\tshowSizeChanger = true,\r\n\tshowQuickJumper = true,\r\n\tstyle,\r\n\tclassName\r\n}) => {\r\n\tconst onChange = (pageNum: number, pageSize: number) => {\r\n\t\tpage.current = { pageSize, pageNum };\r\n\t\tonPaginationChange('subimt');\r\n\t};\r\n\r\n\tconst { pageNum, pageSize } = page.current;\r\n\r\n\treturn (\r\n\t\t<Pagination\r\n\t\t\tstyle={{ marginTop: '30px', float: 'right', ...style }}\r\n\t\t\tclassName={className}\r\n\t\t\ttotal={total}\r\n\t\t\tshowSizeChanger={showSizeChanger}\r\n\t\t\tshowQuickJumper={showQuickJumper}\r\n\t\t\tdefaultCurrent={pageNum}\r\n\t\t\tdefaultPageSize={pageSize}\r\n\t\t\tcurrent={pageNum}\r\n\t\t\tpageSize={pageSize}\r\n\t\t\t// pageSizeOptions=[10, 20, 50, 100]\r\n\t\t\tonChange={onChange}\r\n\t\t\tshowTotal={(total) => {\r\n\t\t\t\tif (showTotal) {\r\n\t\t\t\t\treturn `总 ${total} 条`;\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\nexport default Ipaginations;\r\n","/**\r\n * @file 鼠标移入出现提示\r\n * @author ly\r\n * @createDate 2020年4月27日\r\n */\r\nimport React, { CSSProperties, FC, ReactNode } from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport useThemeHooks from '@/config/antd/theme/useThemeHooks';\r\nimport { TooltipPlacement } from 'antd/es/tooltip';\r\n\r\n/**\r\n * @param children 子集内容\r\n * @param overlayInnerStyle 样式\r\n * @param placement 位置\r\n * @param color 颜色\r\n * @param title 显示内容\r\n */\r\ninterface ItooltipProps {\r\n\tchildren: ReactNode;\r\n\toverlayInnerStyle?: CSSProperties;\r\n\tplacement?: TooltipPlacement;\r\n\tcolor?: string;\r\n\ttitle: ReactNode;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst Itooltip: FC<ItooltipProps> = ({ children, title, overlayInnerStyle, placement = 'top', color }) => {\r\n\tconst { token } = useThemeHooks();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip placement={placement} overlayInnerStyle={overlayInnerStyle} color={token.colorPrimary} title={title}>\r\n\t\t\t\t{children}\r\n\t\t\t</Tooltip>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Itooltip;\r\n","/**\r\n * @param array 原数组\r\n * @param x 原位置\r\n * @param y 要交换的位置\r\n */\r\nexport const arrIndexExchange = <T>(array: T, x: number, y: number): T => {\r\n\tconst arr = JSON.parse(JSON.stringify(array));\r\n\tarr.splice(y, 0, ...arr.splice(x, 1));\r\n\treturn arr;\r\n};\r\n","/**\r\n * @file 表头搜索\r\n * @author ly\r\n * @createDate 2023年4月9日\r\n */\r\nimport React, { FC } from 'react';\r\nimport { Button, Col, Row, TreeSelect } from 'antd';\r\nimport { formTreeSelect } from '@/antdComponents/iForm/components/ItreeSelect';\r\nimport { FormItemMap } from '@/antdComponents/iForm';\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\n\r\ntype TreeSelectProps = {\r\n\tchildren: React.ReactNode;\r\n\tonSubmit: () => void;\r\n\tonClose: () => void;\r\n};\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nexport const treeSelect: FormItemMap['treeSelect'] = ({ value, option, fieldNames, onChange, placeholder }) => {\r\n\treturn formTreeSelect({\r\n\t\tvalue,\r\n\t\toption,\r\n\t\tfieldNames,\r\n\t\tonChange: onChange,\r\n\t\tplaceholder,\r\n\t\tcheckbox: true,\r\n\t\tshowCheckedStrategy: SHOW_PARENT\r\n\t});\r\n};\r\n\r\nconst TableSeach: FC<TreeSelectProps> = ({ children, onSubmit, onClose }) => {\r\n\treturn (\r\n\t\t<Row className=\"p-2\">\r\n\t\t\t<Col>\r\n\t\t\t\t<div className=\"w-52\">{children}</div>\r\n\t\t\t</Col>\r\n\t\t\t<Col>\r\n\t\t\t\t<Button className=\"ml-2\" type=\"default\" onClick={onClose}>\r\n\t\t\t\t\t清空\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button className=\"ml-2\" type=\"primary\" onClick={onSubmit}>\r\n\t\t\t\t\t确定\r\n\t\t\t\t</Button>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default TableSeach;\r\n","import { treeSelect } from './TableSeach';\r\nimport type { FormItemMapType } from '@/antdComponents/iForm';\r\n\r\nconst tableHeadSeach = (type: FormItemMapType) => {\r\n\tif (type === 'treeSelect') {\r\n\t\treturn treeSelect;\r\n\t}\r\n\r\n\treturn () => {\r\n\t\tconst defaultUi = () => {\r\n\t\t\treturn <>出错啦</>;\r\n\t\t};\r\n\t\treturn defaultUi();\r\n\t};\r\n};\r\n\r\nexport type { FormItemMapType };\r\nexport default tableHeadSeach;\r\n","/**\r\n * @file 表头搜索\r\n * @author ly\r\n * @createDate 2023年4月9日\r\n */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { ColumnType } from 'antd/es/table';\r\nimport { BaseOptionType } from 'antd/es/cascader';\r\nimport TableSeach from './TableSeach';\r\nimport { FilterDropdownProps } from 'antd/es/table/interface';\r\nimport tableHeadSeach from './modules';\r\n\r\nimport type { FormItemMapType } from './modules';\r\nimport type { TreeselectType } from '@/antdComponents/iForm';\r\n\r\nexport type FormParamType = (string | number)[];\r\n\r\ntype FormParam<T> = { [K in keyof T]?: FormParamType };\r\n\r\n/**\r\n * @param option 下拉数据\r\n * @param fieldNames option 对应的key\r\n * @param placeholder 搜索提示\r\n */\r\nexport type SearchProps<D> = {\r\n\toption: D[];\r\n\tfieldNames: { label: string; value: string };\r\n\tplaceholder: string;\r\n};\r\n\r\n/**\r\n * @param SeachFormItemType\r\n * @param dataIndex 表头搜索对应名字\r\n * @param form 表头所有搜索的ref数据\r\n * @param visible 打开表头搜索\r\n * @param onSearch 搜索和重置回调\r\n */\r\ntype ColumnSearchProps<T, P> = {\r\n\ttype: FormItemMapType;\r\n\tSeachFormItem: SeachFormItemType<P>;\r\n\tdataIndex: keyof T;\r\n\tform: React.MutableRefObject<FormParam<T>>;\r\n\tvisible: boolean;\r\n\tonSearch: () => void;\r\n};\r\n\r\n/**\r\n * 表头搜索组件(可拓展)\r\n */\r\ntype SeachFormItemType<P> = TreeselectType<P>;\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\n// 表格表头参数配置\r\nconst getColumnSearchProps = <T, P extends BaseOptionType>({\r\n\ttype,\r\n\tdataIndex,\r\n\tonSearch,\r\n\tform,\r\n\tSeachFormItem\r\n}: Omit<ColumnSearchProps<T, P>, 'visible'>): ColumnType<T> => ({\r\n\tfilterDropdown: ({ selectedKeys, setSelectedKeys, confirm, visible }) => {\r\n\t\treturn (\r\n\t\t\t<TableHeadSeach<T, P>\r\n\t\t\t\ttype={type}\r\n\t\t\t\tform={form}\r\n\t\t\t\tdataIndex={dataIndex}\r\n\t\t\t\tselectedKeys={selectedKeys}\r\n\t\t\t\tsetSelectedKeys={setSelectedKeys}\r\n\t\t\t\tconfirm={confirm}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonSearch={onSearch}\r\n\t\t\t\tSeachFormItem={SeachFormItem}></TableHeadSeach>\r\n\t\t);\r\n\t},\r\n\tfilterIcon: (filtered: boolean) => {\r\n\t\treturn <SearchOutlined style={{ color: form.current[dataIndex]?.length ? '#1890ff' : undefined }} />;\r\n\t}\r\n});\r\n\r\n// 表格表头filterDropdown组件\r\nconst TableHeadSeach = <T, P extends BaseOptionType>({\r\n\ttype,\r\n\tform,\r\n\tselectedKeys,\r\n\tsetSelectedKeys,\r\n\tconfirm,\r\n\tvisible,\r\n\tdataIndex,\r\n\tonSearch,\r\n\tSeachFormItem\r\n}: Omit<FilterDropdownProps, 'prefixCls' | 'close'> & ColumnSearchProps<T, P>) => {\r\n\t// const [selectValue, setselectValue] = useState<FormParamType>([]);\r\n\r\n\tconst onChange = (value: FormParamType) => {\r\n\t\tsetSelectedKeys(value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (visible) {\r\n\t\t\tsetSelectedKeys(form.current[dataIndex] || []);\r\n\t\t}\r\n\t}, [visible]);\r\n\r\n\tconst onClose = () => {\r\n\t\tform.current[dataIndex] = [];\r\n\t\tsetSelectedKeys([]);\r\n\t\tconfirm();\r\n\t\tonSearch();\r\n\t};\r\n\r\n\tconst onSubmit = () => {\r\n\t\tform.current[dataIndex] = selectedKeys;\r\n\t\tsetSelectedKeys(selectedKeys);\r\n\t\tconfirm();\r\n\t\tonSearch();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableSeach onClose={onClose} onSubmit={onSubmit}>\r\n\t\t\t{tableHeadSeach(type)({ value: selectedKeys, onChange, ...SeachFormItem })}\r\n\t\t\t{/* {treeSelect({ value: selectedKeys, onChange, ...SeachFormItem })} */}\r\n\t\t</TableSeach>\r\n\t);\r\n};\r\n\r\nexport default getColumnSearchProps;\r\n","/**\r\n * @file 动画组件\r\n * @author ly\r\n * @createDate 2020年4月27日\r\n */\r\nimport React, { FC, useState, useRef } from 'react';\r\nimport { Button, Tooltip } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Point, motion } from 'framer-motion';\r\nimport { UpOutlined } from '@ant-design/icons';\r\nimport Icard from '@/antdComponents/iCard';\r\n\r\n/**\r\n * @param children 子组件\r\n */\r\ninterface AnimateComponentProps {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nconst animateComponentIcon: React.CSSProperties = {\r\n\tposition: 'fixed',\r\n\ttop: 138,\r\n\tright: 200,\r\n\tzIndex: 10,\r\n\ttransform: 'translate(-50%, 0)'\r\n};\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst AnimateComponent: FC<AnimateComponentProps> = ({ children }) => {\r\n\tconst animateComponentPosition: React.CSSProperties = {\r\n\t\tposition: 'fixed',\r\n\t\ttop: 80,\r\n\t\tleft: 0,\r\n\t\twidth: '100%',\r\n\t\tzIndex: 10,\r\n\t\tpadding: 20\r\n\t};\r\n\r\n\tconst dragOffset = useRef<Point | null>();\r\n\tconst dragCurrentOffset = useRef<Point | null>();\r\n\r\n\tconst [flag, setflag] = useState(true);\r\n\tconst onShow = () => {\r\n\t\tif (dragOffset.current) {\r\n\t\t\treturn setTimeout(() => {\r\n\t\t\t\tdragOffset.current = null;\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t\tsetflag(false);\r\n\t};\r\n\r\n\tconst onHidden = () => {\r\n\t\tsetflag(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div\r\n\t\t\t\tonDrag={(e, info) => {\r\n\t\t\t\t\tdragOffset.current = info.offset;\r\n\t\t\t\t\tdragCurrentOffset.current = info.point;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={onShow}\r\n\t\t\t\tdrag\r\n\t\t\t\tdragElastic={0}\r\n\t\t\t\tdragConstraints={{\r\n\t\t\t\t\ttop: -50,\r\n\t\t\t\t\tleft: -200,\r\n\t\t\t\t\tright: 50,\r\n\t\t\t\t\tbottom: 200\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{ display: flag ? 'block' : 'none', textAlign: 'center', ...animateComponentIcon }}>\r\n\t\t\t\t<Button shape=\"circle\" icon={<SearchOutlined />} />\r\n\t\t\t</motion.div>\r\n\r\n\t\t\t{!flag && (\r\n\t\t\t\t<div style={animateComponentPosition}>\r\n\t\t\t\t\t<motion.div style={{ opacity: 0 }} animate={{ opacity: 1, y: 'auto' }} transition={{ ease: 'linear', duration: 0.3 }}>\r\n\t\t\t\t\t\t<Icard className={`shadow-2xl`}>\r\n\t\t\t\t\t\t\t{children}\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"link\"\r\n\t\t\t\t\t\t\t\t\tonClick={onHidden}\r\n\t\t\t\t\t\t\t\t\tstyle={{ position: 'sticky', bottom: 0, left: '50%', transform: 'translate(-50%, 0)' }}\r\n\t\t\t\t\t\t\t\t\ticon={<UpOutlined />}></Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Icard>\r\n\t\t\t\t\t</motion.div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AnimateComponent;\r\n","/**\r\n * @file 实现搜索表单\r\n * @author ly\r\n * @createDate 2020年4月27日\r\n */\r\nimport React, { FC } from 'react';\r\nimport Iform, { FormItem, FormInstance } from '@/antdComponents/iForm';\r\nimport AnimateComponent from '@/pluginComponents/iAnimateComponent';\r\nimport { IresponsiveMin, IresponsiveMax } from '@/pluginComponents/iResponsive';\r\nimport Icard from '@/antdComponents/iCard';\r\n\r\n/**\r\n * @param form 表单实例\r\n * @param formList 表单集合类型\r\n */\r\ninterface IsearchFormProps<T, P> {\r\n\tform: FormInstance<P>;\r\n\tformList: T;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IsearchForm = <T extends FormItem<object>[], P extends object>({ form, formList }: IsearchFormProps<T, P>) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<IresponsiveMax MaxWidth={1540}>\r\n\t\t\t\t<AnimateComponent>\r\n\t\t\t\t\t<Iform form={form} formList={formList}></Iform>\r\n\t\t\t\t</AnimateComponent>\r\n\t\t\t</IresponsiveMax>\r\n\r\n\t\t\t<IresponsiveMin MinWidth={1540}>\r\n\t\t\t\t<Icard bodyStyle={{ paddingBottom: 0 }}>\r\n\t\t\t\t\t<Iform form={form} formList={formList}></Iform>\r\n\t\t\t\t</Icard>\r\n\t\t\t</IresponsiveMin>\r\n\t\t</>\r\n\t);\r\n};\r\nexport type { FormInstance, FormItem };\r\nexport default IsearchForm;\r\n","/**\r\n * @file 搜索组件\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport React, { FC } from 'react';\r\nimport IsearchForm, { FormInstance } from '@/antdComponents/iSearchForm';\r\nimport { useHooksStatus } from '@/useHooks/usePublicApi';\r\nimport { statusDataProps } from '@/api/publicApi';\r\nimport type { ExpensesFormParams } from '../index';\r\nimport type { FormInputType, FormSelectType, FormButtonType, FinishType } from '@/antdComponents/iForm/type';\r\n\r\nexport type ButtonType = 'subimt' | 'onReset';\r\n\r\n/**\r\n * @param form 表单实例\r\n * @param onFinish\r\n */\r\ninterface Iprops {\r\n\tform: FormInstance<ExpensesFormParams>;\r\n\tonFinish: FinishType<ButtonType>;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst SeachForm: FC<Iprops> = ({ form, onFinish }) => {\r\n\tconst { statusData } = useHooksStatus();\r\n\r\n\tconst formList: [FormInputType, FormSelectType<statusDataProps>, FormButtonType<ButtonType>] = [\r\n\t\t// {\r\n\t\t// \ttype: 'input',\r\n\t\t// \tname: 'name',\r\n\t\t// \tlabel: '名称',\r\n\t\t// \tkey: 1,\r\n\t\t// \tlayout: {\r\n\t\t// \t\tlabelCol: { span: 6 },\r\n\t\t// \t\twrapperCol: { span: 18 }\r\n\t\t// \t},\r\n\t\t// \tspan: 6\r\n\t\t// },\r\n\t\t{\r\n\t\t\ttype: 'input',\r\n\t\t\tname: 'age',\r\n\t\t\tlabel: '年龄',\r\n\t\t\tkey: 2,\r\n\t\t\tlayout: {\r\n\t\t\t\tlabelCol: { span: 6 },\r\n\t\t\t\twrapperCol: { span: 18 }\r\n\t\t\t},\r\n\t\t\tspan: 6\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'select',\r\n\t\t\tname: 'status',\r\n\t\t\tlabel: '状态',\r\n\t\t\tcomConfig: {\r\n\t\t\t\toption: statusData,\r\n\t\t\t\tfieldNames: { label: 'name', value: 'status' }\r\n\t\t\t},\r\n\t\t\tkey: 3,\r\n\t\t\tlayout: {\r\n\t\t\t\tlabelCol: { span: 6 },\r\n\t\t\t\twrapperCol: { span: 18 }\r\n\t\t\t},\r\n\t\t\tspan: 6\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'button',\r\n\t\t\tname: 'button',\r\n\t\t\tkey: 14,\r\n\t\t\tspan: 6,\r\n\t\t\tcomConfig: {\r\n\t\t\t\toption: [\r\n\t\t\t\t\t{ btnType: 'primary', type: 'subimt', name: '搜索', iconFont: 'icon-sousuo' },\r\n\t\t\t\t\t{ type: 'onReset', name: '重置', iconFont: 'icon-zhongzhi', className: 'ml-1' }\r\n\t\t\t\t],\r\n\t\t\t\tstyle: { marginLeft: '10px' },\r\n\t\t\t\tonClick: onFinish\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\r\n\treturn <IsearchForm form={form} formList={formList}></IsearchForm>;\r\n};\r\n\r\nexport default SeachForm;\r\n","/**\r\n * @file 公共api\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { status, statusDataProps } from '../api/publicApi';\r\n\r\n/**\r\n * 获取状态数据\r\n * @param deep 能改变状态参数\r\n * @returns 状态数据\r\n */\r\nconst useHooksStatus = (deep = []) => {\r\n\tconst [statusData, setStatusData] = useState<statusDataProps[]>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStatus();\r\n\t\treturn () => {\r\n\t\t\tsetStatusData([]);\r\n\t\t};\r\n\t}, deep);\r\n\r\n\t// 状态\r\n\tconst getStatus = async () => {\r\n\t\tconst res = await status();\r\n\t\tconst { data } = res;\r\n\t\tsetStatusData(data);\r\n\t};\r\n\r\n\treturn { statusData };\r\n};\r\n\r\nexport { useHooksStatus };\r\n","/**\r\n * @file 排序、选中\r\n * @author ly\r\n * @createDate 2023年2月3日\r\n */\r\nimport React, { FC, Key } from 'react';\r\nimport { Tree } from 'antd';\r\nimport { arrIndexExchange } from '@/utils/exchange';\r\nimport type { TreeProps } from 'antd/es/tree';\r\nimport type { HeaderFieldParam } from '@/store/reducers/globalConfig';\r\n\r\n/**\r\n * @param initData 初始化数据\r\n * @param checkedKeys 选中数据\r\n * @param updateInitData 更新初始化数据顺序\r\n * @param updateCheckedKeys 更新选中数据\r\n */\r\ninterface TreeMenuProps {\r\n\tinitData: HeaderFieldParam[];\r\n\tcheckedKeys: Key[];\r\n\tupdateInitData: (newInitData: HeaderFieldParam[]) => void;\r\n\tupdateCheckedKeys: (type: Key[]) => void;\r\n}\r\nconst TreeMenu: FC<TreeMenuProps> = ({ initData, checkedKeys, updateInitData, updateCheckedKeys }) => {\r\n\tconst onDragEnter: TreeProps['onDragEnter'] = (info) => {\r\n\t\t// console.log(info);\r\n\t\t// expandedKeys 需要受控时设置\r\n\t\t// setExpandedKeys(info.expandedKeys)\r\n\t};\r\n\r\n\t// 勾选\r\n\tconst onCheck = (checkedKeysValue: Key[]) => {\r\n\t\t// console.log('onCheck', checkedKeysValue);\r\n\t\tupdateCheckedKeys(checkedKeysValue);\r\n\t};\r\n\r\n\t// 鼠标放下事件\r\n\tconst onDrop: TreeProps['onDrop'] = (info) => {\r\n\t\t// 获取到移动的下表\r\n\t\tconst index = initData.findIndex((item) => item.headerFieldId === info.dragNodesKeys[0]);\r\n\r\n\t\t// 判断下表位置是否移动数据\r\n\t\tif (info.dropPosition === -1 && index === 0) {\r\n\t\t\treturn;\r\n\t\t} else if (info.dropPosition === index) {\r\n\t\t\treturn;\r\n\t\t} else if (info.dropPosition === -1) {\r\n\t\t\t// 处理移动数据-1\r\n\t\t\tlet newGData = arrIndexExchange(initData, index, 0);\r\n\t\t\tupdateInitData(newGData);\r\n\t\t} else if (info.dropPosition > index) {\r\n\t\t\t// 处理移动数据下移\r\n\t\t\tlet newGData = arrIndexExchange(initData, index, info.dropPosition - 1);\r\n\t\t\tupdateInitData(newGData);\r\n\t\t} else if (info.dropPosition < index) {\r\n\t\t\t// 处理移动数据上移\r\n\t\t\tlet newGData = arrIndexExchange(initData, index, info.dropPosition);\r\n\t\t\tupdateInitData(newGData);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tree\r\n\t\t\tclassName=\"draggable-tree\"\r\n\t\t\tcheckedKeys={checkedKeys}\r\n\t\t\tonCheck={(checkedKeys) => onCheck(checkedKeys as Key[])}\r\n\t\t\tdraggable\r\n\t\t\tblockNode\r\n\t\t\tonDragEnter={onDragEnter}\r\n\t\t\tonDrop={onDrop}\r\n\t\t\ttreeData={initData}\r\n\t\t\tfieldNames={{ title: 'headerFieldName', key: 'headerFieldId', children: 'children' }}\r\n\t\t\tcheckable\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default TreeMenu;\r\n","/**\r\n * @file 定制表头\r\n * @author ly\r\n * @createDate 2022年4月27日\r\n */\r\nimport React, { useState, useEffect, Key } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@/store';\r\nimport { GET_HEADER_CONFIG } from '@/store/reducers/globalConfig';\r\nimport type { IcolumnsType } from '@/antdComponents/iTable';\r\nimport type { HeaderConfigListParam, HeaderFieldParam } from '@/store/reducers/globalConfig';\r\n/**\r\n * @param type 表格类型\r\n * @param columns 前端表头模板\r\n * @returns 表头\r\n */\r\nconst useHeaderConfig = <T,>(type: string, columns: IcolumnsType<T>) => {\r\n\t// 处理后 模板数据\r\n\tconst [headerConfigItem, setHeaderConfigItem] = useState<IcolumnsType<T>>([]);\r\n\r\n\t// 后端返回模板\r\n\tconst headerConfig = useAppSelector(GET_HEADER_CONFIG);\r\n\r\n\t// 表格宽度\r\n\tconst [headerWidth, setheaderWidth] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst NewHeaderConfigItem = getSortShow();\r\n\t\tsetHeaderConfigItem(NewHeaderConfigItem);\r\n\r\n\t\tconst newHeaderWidth = getHeaderWidth(NewHeaderConfigItem);\r\n\t\tsetheaderWidth(newHeaderWidth);\r\n\t}, [headerConfig]);\r\n\r\n\t// 排序加是否显示\r\n\tconst getSortShow = () => {\r\n\t\tconst headerConfigItem = getHeaderConfigItem(type, headerConfig);\r\n\r\n\t\treturn headerConfigItem.reduce((pre: IcolumnsType<T>, item) => {\r\n\t\t\tconst newColumns = columns.find((value) => value.key === item.headerFieldKey);\r\n\t\t\tif (newColumns && item.headerSelected === 'true') {\r\n\t\t\t\treturn [...pre, newColumns];\r\n\t\t\t} else {\r\n\t\t\t\treturn pre;\r\n\t\t\t}\r\n\t\t}, []);\r\n\t};\r\n\r\n\tconst getHeaderWidth = (NewHeaderConfigItem: IcolumnsType<T>) => {\r\n\t\treturn NewHeaderConfigItem.reduce((pre, item) => {\r\n\t\t\tif (typeof item.width === 'number') {\r\n\t\t\t\treturn (pre += item.width as number);\r\n\t\t\t}\r\n\t\t\treturn pre;\r\n\t\t}, 0);\r\n\t};\r\n\r\n\treturn { headerConfigItem, headerWidth };\r\n};\r\n\r\n/**\r\n * @param type 表格类型\r\n * @param open 开关是否初始化渲染\r\n * @returns 表头 转成 拖拽树\r\n */\r\nconst useHeaderConfigItem = (type: string, open: boolean) => {\r\n\tconst headerConfig = useAppSelector(GET_HEADER_CONFIG);\r\n\r\n\t// 拿到对应的后端表头数据\r\n\tconst [headerConfigItem, setHeaderConfigItem] = useState<HeaderFieldParam[]>([]);\r\n\r\n\t// 选中的key\r\n\tconst [checkedKeys, setCheckedKeys] = useState<Key[]>([]);\r\n\r\n\t// 查出all选中的key\r\n\tconst getCheckedKeys = (headerConfigItem: HeaderFieldParam[]) => {\r\n\t\treturn headerConfigItem.reduce((pre: Key[], item) => {\r\n\t\t\tif (item.headerSelected === 'true') {\r\n\t\t\t\treturn [...pre, item.headerFieldId];\r\n\t\t\t} else {\r\n\t\t\t\treturn pre;\r\n\t\t\t}\r\n\t\t}, []);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (open) {\r\n\t\t\tconst NewHeaderConfigItem = getHeaderConfigItem(type, headerConfig);\r\n\t\t\tsetHeaderConfigItem(NewHeaderConfigItem);\r\n\r\n\t\t\tconst NewCheckedKeys = getCheckedKeys(NewHeaderConfigItem);\r\n\t\t\tsetCheckedKeys(NewCheckedKeys);\r\n\t\t}\r\n\t}, [headerConfig, open]);\r\n\r\n\treturn { headerConfigItem, setHeaderConfigItem, checkedKeys, setCheckedKeys };\r\n};\r\n\r\n// 获取后端某个表头配置\r\nconst getHeaderConfigItem = (type: string, headerConfig: HeaderConfigListParam[]) => {\r\n\treturn headerConfig.reduce((pre: HeaderFieldParam[], item) => {\r\n\t\tif (item.type === type) {\r\n\t\t\treturn item.headerField;\r\n\t\t}\r\n\t\treturn pre;\r\n\t}, []);\r\n};\r\n\r\nexport { useHeaderConfig, useHeaderConfigItem };\r\n","/**\r\n * @file 实现编辑表头\r\n * @author ly\r\n * @createDate 2022年7月30日\r\n */\r\nimport React, { FC, useState, useEffect, Key, memo } from 'react';\r\nimport { useAppDispatch } from '@/store';\r\nimport { getHeaderConfig } from '@/store/reducers/globalConfig';\r\nimport { Checkbox } from 'antd';\r\nimport Imodal, { OnOkOrCancelType } from '@/antdComponents/iModal';\r\nimport TreeMenu from './TreeMenu';\r\nimport { useHeaderConfigItem } from '@/useHooks/useHeaderConfig';\r\nimport type { CheckboxChangeEvent } from 'antd/es/checkbox';\r\nimport type { HeaderFieldParam } from '@/store/reducers/globalConfig';\r\nimport { updateHeader } from './service';\r\n\r\nexport type HeaderType = 'expenses';\r\n\r\n/**\r\n * @param type 判断开关方法类型\r\n * @param open 开关\r\n * @param closeHeader 关闭表头\r\n */\r\ninterface IheaderConfigProps {\r\n\ttype: HeaderType;\r\n\topen: boolean;\r\n\tcloseHeader: () => void;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst IheaderConfig: FC<IheaderConfigProps> = ({ type, open, closeHeader }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\t// 初始化数据\r\n\tconst { headerConfigItem, setHeaderConfigItem, checkedKeys, setCheckedKeys } = useHeaderConfigItem(type, open);\r\n\r\n\t// 更新数据\r\n\tconst updateInitData = (newInitData: HeaderFieldParam[]) => {\r\n\t\tsetHeaderConfigItem(newInitData);\r\n\t};\r\n\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n\tconst onOkOrCancel: OnOkOrCancelType = (type) => {\r\n\t\tif (type === 'ok') {\r\n\t\t\thandleOk();\r\n\t\t} else if (type === 'cancel') {\r\n\t\t\thandleCancel();\r\n\t\t}\r\n\t};\r\n\tconst handleOk = async () => {\r\n\t\t// console.log(headerConfigItem);\r\n\t\t// console.log(checkedKeys);\r\n\t\tsetConfirmLoading(true);\r\n\t\tconst isFalseArr = headerConfigItem.reduce((pre: Key[], item) => {\r\n\t\t\tif (checkedKeys.indexOf(item.headerFieldId) === -1) {\r\n\t\t\t\treturn [...pre, item.headerFieldId];\r\n\t\t\t} else {\r\n\t\t\t\treturn pre;\r\n\t\t\t}\r\n\t\t}, []);\r\n\t\ttry {\r\n\t\t\tawait updateHeader({ type, headerField: isFalseArr });\r\n\t\t\t// 刷新表头\r\n\t\t\tdispatch(getHeaderConfig());\r\n\t\t\tcloseHeader();\r\n\t\t} catch (error) {}\r\n\t\tsetConfirmLoading(false);\r\n\t};\r\n\tconst handleCancel = () => {\r\n\t\tcloseHeader();\r\n\t};\r\n\r\n\t// 全选\r\n\tconst [indeterminate, setIndeterminate] = useState(false);\r\n\tconst [checkAll, setCheckAll] = useState(false);\r\n\r\n\tconst onCheckAllChange = (e: CheckboxChangeEvent) => {\r\n\t\tsetIndeterminate(false);\r\n\t\tsetCheckAll(e.target.checked);\r\n\t\tif (e.target.checked) {\r\n\t\t\t// 全选\r\n\t\t\tconst allKeys = headerConfigItem.reduce((pre: Key[], item) => {\r\n\t\t\t\treturn [...pre, item.headerFieldId as Key];\r\n\t\t\t}, []);\r\n\t\t\tsetCheckedKeys(allKeys);\r\n\t\t} else {\r\n\t\t\t// 取消\r\n\t\t\tsetCheckedKeys([]);\r\n\t\t}\r\n\t};\r\n\r\n\t// 选中数据\r\n\t// const [checkedKeys, setCheckedKeys] = useState<Key[]>([]);\r\n\r\n\tconst updateCheckedKeys = (checkedKeysValue: Key[]) => {\r\n\t\tsetCheckedKeys(checkedKeysValue);\r\n\t};\r\n\t// 监听checkedKeys变化 是否全部选中\r\n\tuseEffect(() => {\r\n\t\tif (checkedKeys.length === 0) {\r\n\t\t\t// 一个都没选中\r\n\t\t\tonSelectAll('0');\r\n\t\t} else if (headerConfigItem.length === checkedKeys.length) {\r\n\t\t\t// 全选\r\n\t\t\tonSelectAll('2');\r\n\t\t} else {\r\n\t\t\t// 半选\r\n\t\t\tonSelectAll('1');\r\n\t\t}\r\n\t}, [checkedKeys]);\r\n\r\n\t// TreeMenu 全选状态\r\n\tconst onSelectAll = (type: onSelectAllParam) => {\r\n\t\tif (type === '0') {\r\n\t\t\tsetIndeterminate(false);\r\n\t\t\tsetCheckAll(false);\r\n\t\t} else if (type === '1') {\r\n\t\t\tsetIndeterminate(true);\r\n\t\t\tsetCheckAll(false);\r\n\t\t} else if (type === '2') {\r\n\t\t\tsetIndeterminate(false);\r\n\t\t\tsetCheckAll(true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Imodal title={'编辑表头'} open={open} onOkOrCancel={onOkOrCancel} confirmLoading={confirmLoading}>\r\n\t\t\t<Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll}>\r\n\t\t\t\t全选\r\n\t\t\t</Checkbox>\r\n\t\t\t<TreeMenu\r\n\t\t\t\tinitData={headerConfigItem}\r\n\t\t\t\tcheckedKeys={checkedKeys}\r\n\t\t\t\tupdateInitData={updateInitData}\r\n\t\t\t\tupdateCheckedKeys={updateCheckedKeys}></TreeMenu>\r\n\t\t</Imodal>\r\n\t);\r\n};\r\n/**\r\n * @param type 无选中0 半选1 全选2\r\n */\r\nexport type onSelectAllParam = '0' | '1' | '2';\r\n\r\nexport default memo(IheaderConfig);\r\n","import { Key } from 'react';\r\nimport axios from '@/api/request';\r\n\r\ninterface updateHeaderParams {\r\n\ttype: string;\r\n\theaderField: Key[];\r\n}\r\n// 更新表头配置\r\nexport function updateHeader(data: updateHeaderParams) {\r\n\treturn axios({\r\n\t\turl: '/updateHeader',\r\n\t\tmethod: 'post',\r\n\t\tdata\r\n\t});\r\n}\r\n","/**\r\n * @file 封装编辑表头\r\n * @author ly\r\n * @createDate 2020年4月27日\r\n */\r\nimport React, { FC, ReactNode, useCallback, useState } from 'react';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport IheaderConfig, { HeaderType } from '@/antdComponents/iEditHeader';\r\n\r\n/**\r\n * @param children 子级\r\n * @param type 表格数据对应的类型\r\n */\r\ninterface HeaderEditProps {\r\n\tchildren?: ReactNode;\r\n\ttype: HeaderType;\r\n}\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst HeaderEdit: FC<HeaderEditProps> = ({ children, type }) => {\r\n\tconst [headerOpen, setheaderOpen] = useState(false);\r\n\tconst editHeader = () => {\r\n\t\tsetheaderOpen(true);\r\n\t};\r\n\r\n\tconst closeHeader = useCallback(() => {\r\n\t\tsetheaderOpen(false);\r\n\t}, [headerOpen]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row justify=\"space-between\">\r\n\t\t\t\t<Col>{children}</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button type=\"link\" icon={<SettingOutlined />} onClick={editHeader}></Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<IheaderConfig type={type} open={headerOpen} closeHeader={closeHeader}></IheaderConfig>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default HeaderEdit;\r\n","import request from '@/api/request';\r\n\r\n/**\r\n * 接口参数(/expenses/tabelData)\r\n * @param name 姓名\r\n * @param age 年龄\r\n * @param status 状态\r\n * @param pageSize 页数\r\n * @param pageNum 页码\r\n */\r\nexport interface TabelDataParams {\r\n\tname?: string[];\r\n\tage?: string;\r\n\tstatus?: '1' | '2';\r\n\tpageSize: number;\r\n\tpageNum: number;\r\n}\r\n\r\n/**\r\n * 接口返回(/expenses/tabelData)\r\n * @param name 姓名\r\n * @param age 年龄\r\n * @param weight 体重\r\n * @param height 身高\r\n * @param remark 备注\r\n */\r\nexport interface TabelDataResponse {\r\n\tkey: string;\r\n\tname: string;\r\n\tage: number;\r\n\tweight: number;\r\n\theight: number;\r\n\tremark: string;\r\n}\r\n\r\n// 查询表格数据\r\nexport const tabelData = (data: TabelDataParams) => {\r\n\treturn request<TabelDataParams, TabelDataResponse[]>({\r\n\t\turl: '/expenses/tabelData',\r\n\t\tmethod: 'post',\r\n\t\tdata\r\n\t});\r\n};\r\n","/**\r\n * @file expenses\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Form } from 'antd';\r\nimport useHeaderTable, { ButtonEvent } from './useHooks/useTable';\r\nimport Itable from '@/antdComponents/iTable';\r\nimport Icard from '@/antdComponents/iCard';\r\nimport SeachForm from './components/SeachForm';\r\nimport Ipaginations from '@/antdComponents/iPagination';\r\nimport HeaderEdit from '@/antdComponents/iEditTableHeader';\r\nimport { useTabelData } from './useHooksApi';\r\nimport useKeepAlive from '@/useHooks/useKeepAlive';\r\nimport type { TabelDataParams, TabelDataResponse } from './service';\r\nimport type { ButtonType } from './components/SeachForm';\r\n\r\nexport type ExpensesFormParams = Omit<TabelDataParams, 'pageSize' | 'pageNum' | 'name'>;\r\n\r\nexport type ColumnsSeachValue = Pick<TabelDataParams, 'name'>;\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst Expenses = () => {\r\n\tconst columnsSeachValue = useRef<ColumnsSeachValue>({\r\n\t\tname: []\r\n\t});\r\n\r\n\tconst buttonEvent: ButtonEvent = (type, value) => {\r\n\t\tif (type === 'name') {\r\n\t\t\tpage.current.pageNum = 1;\r\n\t\t\tonFinish('subimt');\r\n\t\t}\r\n\t};\r\n\r\n\tconst { columns } = useHeaderTable({ buttonEvent, columnsSeachValue });\r\n\r\n\tconst [form] = Form.useForm<ExpensesFormParams>();\r\n\r\n\tconst { expensesTableData, total, getTabelData, loading } = useTabelData();\r\n\r\n\t// 缓存\r\n\tconst { initKeepAliveData, setKeepAliveData } = useKeepAlive();\r\n\r\n\tconst page = useRef({\r\n\t\tpageSize: initKeepAliveData?.pageSize || 10,\r\n\t\tpageNum: initKeepAliveData?.pageNum || 1\r\n\t});\r\n\r\n\tconst setKeepAlive = (params: TabelDataParams) => {\r\n\t\tsetKeepAliveData(params);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { pageNum, pageSize, name, age, status } = initKeepAliveData || {};\r\n\t\tform.setFieldsValue({ age, status });\r\n\t\tcolumnsSeachValue.current.name = name;\r\n\t\tpage.current = { pageNum: pageNum || page.current.pageNum, pageSize: pageSize || page.current.pageSize };\r\n\t\tonFinish('subimt');\r\n\t}, []);\r\n\r\n\tconst onFinish = (type: ButtonType) => {\r\n\t\tif (type === 'subimt') {\r\n\t\t\tlet params = form.getFieldsValue();\r\n\t\t\tsetKeepAlive({ ...params, ...page.current, ...columnsSeachValue.current });\r\n\t\t} else if (type === 'onReset') {\r\n\t\t\tform.resetFields();\r\n\t\t\tlet params = form.getFieldsValue();\r\n\t\t\tsetKeepAlive({ ...params, ...page.current, ...columnsSeachValue.current });\r\n\t\t}\r\n\t\tlet params = form.getFieldsValue();\r\n\t\tgetTabelData({ ...params, ...page.current, ...columnsSeachValue.current });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SeachForm form={form} onFinish={onFinish}></SeachForm>\r\n\t\t\t{/* <ClassCom hh={1}></ClassCom> */}\r\n\t\t\t<Icard bodyStyle={{ marginTop: '10px' }}>\r\n\t\t\t\t<HeaderEdit type={'expenses'}></HeaderEdit>\r\n\t\t\t\t<Itable<TabelDataResponse> rowKey=\"key\" columns={columns} data={expensesTableData} loading={loading} scroll={{ x: '100%' }} />\r\n\t\t\t\t<Ipaginations total={total} page={page} onPaginationChange={onFinish}></Ipaginations>\r\n\t\t\t</Icard>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","/**\r\n * @file 表格组件\r\n * @author ly\r\n * @createDate 2022年3月26日\r\n */\r\nimport React, { useRef, useState } from 'react';\r\nimport { Button, Tag, Space } from 'antd';\r\nimport Itooltip from '@/antdComponents/iTooltip';\r\nimport Idropdown, { ButtonItemParams } from '@/antdComponents/iDropdown';\r\nimport { ItbClick, AlignType, IcolumnsType } from '@/antdComponents/iTable';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { TabelDataParams, TabelDataResponse } from '../service';\r\nimport getColumnSearchProps from '@/antdComponents/iTable/components/headSeach';\r\nimport { ColumnsSeachValue } from '../index';\r\n\r\ntype ButtonEventTypeParam = 'name' | OnClickBtnType;\r\n\r\n/**\r\n * @method 按钮回调事件\r\n * @param type 事件类型标识\r\n * @param value 某一条数据\r\n * @returns void\r\n */\r\nexport type ButtonEvent = (type: ButtonEventTypeParam, value?: TabelDataResponse) => void;\r\n\r\ninterface useHeaderTableParams {\r\n\tbuttonEvent: ButtonEvent;\r\n\tcolumnsSeachValue: React.MutableRefObject<ColumnsSeachValue>;\r\n}\r\n\r\ntype OnClickBtnType = '修改' | '删除';\r\n\r\n// #----------- 上: ts类型定义 ----------- 分割线 ----------- 下: JS代码 -----------\r\n\r\nconst useHeaderTable = ({ buttonEvent, columnsSeachValue }: useHeaderTableParams) => {\r\n\tconst navigate = useNavigate();\r\n\r\n\t//表格单元里面的功能回调\r\n\tconst tbClick: ItbClick<TabelDataResponse> = (type, record) => {\r\n\t\tif (type === 'name') {\r\n\t\t\tnavigate('/mycenter', { state: { name: record.name } });\r\n\t\t}\r\n\t};\r\n\r\n\t// 表格图表移入移出功能\r\n\tconst onOpenChange = (open: boolean, record: TabelDataResponse) => {\r\n\t\tif (open) {\r\n\t\t\tsetBtFun([\r\n\t\t\t\t{ type: '修改', name: '修改', btnType: 'link' },\r\n\t\t\t\t{ type: '删除', name: '删除', btnType: 'link' }\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\t// setBtFun([]);\r\n\t\t}\r\n\t};\r\n\t// 初始化按钮\r\n\tconst [btArr, setBtFun] = useState<ButtonItemParams<OnClickBtnType>[]>([]);\r\n\r\n\tconst columns: IcolumnsType<TabelDataResponse> = [\r\n\t\t{\r\n\t\t\ttitle: '名字',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\tkey: 'name',\r\n\t\t\t...getColumnSearchProps<TabelDataResponse, { title: string; value: string }>({\r\n\t\t\t\ttype: 'treeSelect',\r\n\t\t\t\tdataIndex: 'name',\r\n\t\t\t\tonSearch: () => buttonEvent('name'),\r\n\t\t\t\tform: columnsSeachValue,\r\n\t\t\t\tSeachFormItem: {\r\n\t\t\t\t\toption: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'placeholder',\r\n\t\t\t\t\t\t\tvalue: 'light'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'placeholder1',\r\n\t\t\t\t\t\t\tvalue: 'light1'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tfieldNames: { label: 'title', value: 'value' },\r\n\t\t\t\t\tplaceholder: '请选择名字'\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\r\n\t\t\twidth: 100,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text, record) => (\r\n\t\t\t\t<Itooltip placement=\"top\" overlayInnerStyle={{ width: 200 }} title={<>{text}</>}>\r\n\t\t\t\t\t<Button type=\"link\" style={{ width: 100 }} onClick={() => tbClick('name', record)}>\r\n\t\t\t\t\t\t<div className=\"truncate\" style={{ width: 70 }}>\r\n\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Itooltip>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '年龄',\r\n\t\t\tdataIndex: 'age',\r\n\t\t\tkey: 'age',\r\n\t\t\twidth: 100,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text) => (\r\n\t\t\t\t<Itooltip placement=\"top\" overlayInnerStyle={{ width: '100px' }} title={<>{text}</>}>\r\n\t\t\t\t\t<div className=\"truncate\">{text}</div>\r\n\t\t\t\t</Itooltip>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '体重',\r\n\t\t\tdataIndex: 'weight',\r\n\t\t\tkey: 'weight',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text) => (\r\n\t\t\t\t<Itooltip placement=\"top\" overlayInnerStyle={{ width: '100px' }} title={<>{text}</>}>\r\n\t\t\t\t\t<div className=\"truncate\">{text}</div>\r\n\t\t\t\t</Itooltip>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '身高',\r\n\t\t\tdataIndex: 'height',\r\n\t\t\tkey: 'height',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text) => (\r\n\t\t\t\t<Itooltip placement=\"top\" overlayInnerStyle={{ width: '100px' }} title={<>{text}</>}>\r\n\t\t\t\t\t<div className=\"truncate\">{text}</div>\r\n\t\t\t\t</Itooltip>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '备注',\r\n\t\t\tdataIndex: 'remark',\r\n\t\t\tkey: 'remark',\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text) => (\r\n\t\t\t\t<Itooltip placement=\"top\" overlayInnerStyle={{ width: '180px' }} title={<>{text}</>}>\r\n\t\t\t\t\t<div className=\"truncate\">{text}</div>\r\n\t\t\t\t</Itooltip>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '操作',\r\n\t\t\tkey: 'operation',\r\n\t\t\twidth: 80,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (text, record) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Idropdown\r\n\t\t\t\t\t\tbtArr={btArr}\r\n\t\t\t\t\t\tonOpenChange={(open) => onOpenChange(open, record)}\r\n\t\t\t\t\t\tonClickBtn={(type) => buttonEvent(type, record)}></Idropdown>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\r\n\treturn { columns };\r\n};\r\n\r\nexport default useHeaderTable;\r\n","/**\r\n * @file expenses hooks\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport React, { useState } from 'react';\r\nimport { tabelData } from './service';\r\nimport type { TabelDataResponse, TabelDataParams } from './service';\r\n\r\n// 查询表格数据\r\nconst useTabelData = () => {\r\n\tconst [expensesTableData, setExpensesTableData] = useState<TabelDataResponse[]>([]);\r\n\r\n\tconst [total, setTotal] = useState(0);\r\n\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst getTabelData = async (params: TabelDataParams) => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst res = await tabelData({ ...params });\r\n\t\t\tconst { data, total } = res;\r\n\t\t\tsetExpensesTableData(data);\r\n\t\t\tsetTotal(total);\r\n\t\t} catch (error) {}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn { expensesTableData, total, getTabelData, loading };\r\n};\r\n\r\nexport { useTabelData };\r\n","/**\r\n * @file 实现缓存\r\n * @author ly\r\n * @createDate 2020年4月27日\r\n */\r\nimport React, { FC, useState, useEffect, useMemo } from 'react';\r\nimport { message } from 'antd';\r\nimport { useAppSelector, useAppDispatch } from '@/store';\r\nimport { GET_ANT_EXPENSES, SET_ANT_EXPENSES, GET_DEFAULT } from '@/store/reducers/keepAlive';\r\nimport { useLocation } from 'react-router-dom';\r\nimport type { TabelDataParams } from '@/views/antd/expenses/service';\r\n/**\r\n * @param 路径或者自定义别名\r\n * @returns initKeepAliveData 获取缓存参数\r\n * @returns setKeepAliveData 修改缓存数据方法\r\n */\r\nconst useKeepAlive = (path?: string) => {\r\n\tconst location = useLocation();\r\n\t// 获取对应url\r\n\tconst PATH_URL = path || location.pathname;\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\t// 获取初始化数据 取出redux数据\r\n\tconst initValue = useAppSelector(GET_ANT_EXPENSES);\r\n\tconst initKeepAliveData = useMemo(() => initValue, []);\r\n\r\n\t// 白名单\r\n\tconst routerData = ['/antd/expenses'];\r\n\r\n\tconst setKeepAliveData = <T,>(value: T) => {\r\n\t\t// 白名单是否需要缓存\r\n\t\tif (routerData.indexOf(PATH_URL) > -1) {\r\n\t\t\t// 存入数据\r\n\t\t\tif (PATH_URL === '/antd/expenses') {\r\n\t\t\t\tdispatch(SET_ANT_EXPENSES(value as TabelDataParams));\r\n\t\t\t} else {\r\n\t\t\t\tmessage.error('没有匹配到缓存path');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn { initKeepAliveData, setKeepAliveData };\r\n};\r\n\r\nexport default useKeepAlive;\r\n"],"names":["_ref","total","page","onPaginationChange","_ref$showTotal","showTotal","_ref$showSizeChanger","showSizeChanger","_ref$showQuickJumper","showQuickJumper","style","className","_page$current","current","pageNum","pageSize","_jsx","Pagination","_objectSpread","marginTop","float","defaultCurrent","defaultPageSize","onChange","concat","children","title","overlayInnerStyle","_ref$placement","placement","token","color","useThemeHooks","_Fragment","Tooltip","colorPrimary","arrIndexExchange","array","x","y","arr","JSON","parse","stringify","splice","apply","_toConsumableArray","SHOW_PARENT","TreeSelect","treeSelect","value","option","fieldNames","placeholder","formTreeSelect","checkbox","showCheckedStrategy","_ref2","onSubmit","onClose","_jsxs","Row","Col","Button","type","onClick","TableHeadSeach","_ref3","form","selectedKeys","setSelectedKeys","confirm","visible","dataIndex","onSearch","SeachFormItem","useEffect","TableSeach","tableHeadSeach","filterDropdown","filterIcon","filtered","_form$current$dataInd","SearchOutlined","length","undefined","animateComponentIcon","position","top","right","zIndex","transform","dragOffset","useRef","dragCurrentOffset","_useState","useState","_useState2","_slicedToArray","flag","setflag","motion","div","onDrag","e","info","offset","point","preventDefault","stopPropagation","setTimeout","drag","dragElastic","dragConstraints","left","bottom","display","textAlign","shape","icon","width","padding","opacity","animate","transition","ease","duration","Icard","UpOutlined","formList","IresponsiveMax","MaxWidth","AnimateComponent","Iform","IresponsiveMin","MinWidth","bodyStyle","paddingBottom","onFinish","_useHooksStatus","deep","arguments","statusData","setStatusData","getStatus","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","status","sent","stop","useHooksStatus","name","label","key","layout","labelCol","span","wrapperCol","comConfig","btnType","iconFont","marginLeft","IsearchForm","initData","checkedKeys","updateInitData","updateCheckedKeys","Tree","onCheck","draggable","blockNode","onDragEnter","onDrop","index","findIndex","item","headerFieldId","dragNodesKeys","dropPosition","newGData","treeData","checkable","getHeaderConfigItem","headerConfig","reduce","pre","headerField","IheaderConfig","open","closeHeader","dispatch","useAppDispatch","_useHeaderConfigItem","useAppSelector","GET_HEADER_CONFIG","_useState5","_useState6","headerConfigItem","setHeaderConfigItem","_useState7","_useState8","setCheckedKeys","NewHeaderConfigItem","NewCheckedKeys","headerSelected","getCheckedKeys","useHeaderConfigItem","confirmLoading","setConfirmLoading","handleOk","isFalseArr","indexOf","axios","url","method","getHeaderConfig","t0","_useState3","_useState4","indeterminate","setIndeterminate","checkAll","setCheckAll","onSelectAll","Imodal","onOkOrCancel","Checkbox","target","checked","allKeys","TreeMenu","newInitData","checkedKeysValue","memo","headerOpen","setheaderOpen","useCallback","justify","SettingOutlined","tabelData","request","columnsSeachValue","columns","buttonEvent","navigate","useNavigate","btArr","setBtFun","getColumnSearchProps","align","render","text","record","Itooltip","state","tbClick","Idropdown","onOpenChange","onClickBtn","useHeaderTable","_Form$useForm","Form","useForm","_useTabelData","expensesTableData","setExpensesTableData","setTotal","loading","setLoading","getTabelData","params","_total","_x","useTabelData","_useKeepAlive","path","location","useLocation","PATH_URL","pathname","initValue","GET_ANT_EXPENSES","initKeepAliveData","useMemo","routerData","setKeepAliveData","SET_ANT_EXPENSES","message","error","useKeepAlive","setKeepAlive","age","setFieldsValue","getFieldsValue","resetFields","SeachForm","HeaderEdit","Itable","rowKey","scroll","Ipaginations"],"sourceRoot":""}