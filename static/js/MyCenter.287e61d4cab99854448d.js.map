{"version":3,"file":"static/js/MyCenter.287e61d4cab99854448d.js","mappings":"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","sources":["views/myCenter/components/Photo.tsx","views/myCenter/components/EditPhoto.tsx","views/myCenter/components/ResetPassword.tsx","views/myCenter/index.tsx"],"sourcesContent":["/**\r\n * @file 头像\r\n * @author ly\r\n * @createDate 2023年1月3日\r\n */\r\nimport React, { useRef, FC, useState } from 'react';\r\nimport Cropper, { ReactCropperElement } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n// https://www.npmjs.com/package/react-cropper 地址\r\nimport Loading from '@/antdComponents/iLoading';\r\n\r\ninterface Props {\r\n\tupdatepPhoto: string;\r\n\tsetPhotoFinish: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\nconst Photo: FC<Props> = ({ updatepPhoto, setPhotoFinish }) => {\r\n\tconst cropperRef = useRef<HTMLImageElement>(null);\r\n\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst onCrop = () => {\r\n\t\tconst imageElement: HTMLImageElement | ReactCropperElement | null = cropperRef?.current;\r\n\t\tconst cropper = (imageElement as ReactCropperElement)?.cropper;\r\n\t\tsetPhotoFinish(cropper.getCroppedCanvas().toDataURL());\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Loading loading={loading}>\r\n\t\t\t<Cropper\r\n\t\t\t\tsrc={updatepPhoto}\r\n\t\t\t\tstyle={{ height: 400, width: '100%' }}\r\n\t\t\t\t// Cropper.js options\r\n\t\t\t\tinitialAspectRatio={16 / 9}\r\n\t\t\t\tguides={false}\r\n\t\t\t\tcrop={onCrop}\r\n\t\t\t\tref={cropperRef}\r\n\t\t\t/>\r\n\t\t</Loading>\r\n\t);\r\n};\r\n\r\nexport default Photo;\r\n","/**\r\n * @file 头像编辑\r\n * @author ly\r\n * @createDate 2022年1月3日\r\n */\r\nimport React, { FC, useState } from 'react';\r\nimport Photo from './Photo';\r\nimport { Avatar, Row, Col, Upload, Button } from 'antd';\r\nimport { UploadOutlined, AntDesignOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\tphotoFinish: string;\r\n\tsetPhotoFinish: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\nconst EditPhoto: FC<Props> = ({ photoFinish, setPhotoFinish }) => {\r\n\t// 上传图片\r\n\tconst [updatepPhoto, setUpdatepPhoto] = useState(photoFinish);\r\n\r\n\tfunction beforeUpload(file: File) {\r\n\t\tgetBase64(file, (base64Url) => {\r\n\t\t\tsetUpdatepPhoto(base64Url as string);\r\n\t\t});\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row gutter={20} align=\"bottom\">\r\n\t\t\t\t<Col span={16}>\r\n\t\t\t\t\t<Photo updatepPhoto={updatepPhoto} setPhotoFinish={setPhotoFinish}></Photo>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>\r\n\t\t\t\t\t<Avatar src={photoFinish} size={200} icon={<AntDesignOutlined />} />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<div style={{ marginTop: '10px' }}>\r\n\t\t\t\t<Upload name=\"file\" showUploadList={false} beforeUpload={beforeUpload}>\r\n\t\t\t\t\t<Button icon={<UploadOutlined />}>上传头像</Button>\r\n\t\t\t\t</Upload>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditPhoto;\r\n\r\nconst getBase64 = (img: File, callback: (base64Url: string | ArrayBuffer | null) => void): void => {\r\n\tconst reader = new FileReader();\r\n\treader.addEventListener('load', () => callback(reader.result));\r\n\r\n\treader.readAsDataURL(img);\r\n};\r\n","/**\r\n * @file 修改用户信息\r\n * @author ly\r\n * @createDate 2022年1月3日\r\n */\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { Rule, ValidateErrorEntity } from 'rc-field-form/lib/interface';\r\n\r\ninterface FormType {\r\n\tuserName: string;\r\n\tpassWord: string;\r\n}\r\nconst ResetPassword = () => {\r\n\tconst location = useLocation();\r\n\r\n\tconst [form] = Form.useForm();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (location.state) {\r\n\t\t\tform.setFieldsValue({ userName: (location.state as { name: string })?.name });\r\n\t\t} else {\r\n\t\t\tform.setFieldsValue({ userName: undefined });\r\n\t\t}\r\n\t}, [form, location]);\r\n\r\n\tconst onFinish = (values: FormType) => {};\r\n\r\n\tconst onFinishFailed = (errorInfo: ValidateErrorEntity<FormType>) => {};\r\n\r\n\tconst confirPassWord = (rule: Rule, value: string | number): Promise<void> => {\r\n\t\tif (!value || value === form.getFieldValue('passWord')) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t} else {\r\n\t\t\treturn Promise.reject(new Error('密码不一致'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form form={form} labelCol={{ span: 4, offset: 4 }} wrapperCol={{ span: 12 }} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n\t\t\t<Form.Item label=\"用户名\" name=\"userName\" rules={[{ required: true, message: 'Please input your username!' }]}>\r\n\t\t\t\t<Input />\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item label=\"密码\" name=\"passWord\" rules={[{ required: true, message: 'Please input your password!' }]}>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel=\"确认密码\"\r\n\t\t\t\tname=\"confirmPassWord\"\r\n\t\t\t\trules={[\r\n\t\t\t\t\t{ required: true, message: 'Please input your confirm password!' },\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalidator: confirPassWord\r\n\t\t\t\t\t}\r\n\t\t\t\t]}>\r\n\t\t\t\t<Input.Password />\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default ResetPassword;\r\n","/**\r\n * @file 个人中心\r\n * @author ly\r\n * @createDate 2022年12月11日\r\n */\r\nimport React, { FC, useState } from 'react';\r\nimport Icard from '@/antdComponents/iCard';\r\nimport { useAppSelector, useAppDispatch } from '@/store';\r\nimport { SET_PHOTO, GET_SELECTOR_PHOTO } from '@/store/reducers/user';\r\nimport { Avatar } from 'antd';\r\nimport { AntDesignOutlined } from '@ant-design/icons';\r\nimport EditPhoto from './components/EditPhoto';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport Imodal, { OnOkOrCancelType } from '@/antdComponents/iModal';\r\n\r\nconst MyCenter: FC = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\r\n\tconst [confirmLoading, setConfirmLoading] = useState(false);\r\n\tconst initImg = useAppSelector(GET_SELECTOR_PHOTO);\r\n\r\n\t// 修改完的图片传入\r\n\tconst [photoFinish, setPhotoFinish] = useState(initImg as string);\r\n\r\n\tconst openPhoto = () => {\r\n\t\tsetPhotoFinish(initImg as string);\r\n\t\tsetIsModalOpen(true);\r\n\t};\r\n\tconst onOkOrCancel: OnOkOrCancelType = (type) => {\r\n\t\tif (type === 'ok') {\r\n\t\t\thandleOk();\r\n\t\t} else if (type === 'cancel') {\r\n\t\t\thandleCancel();\r\n\t\t}\r\n\t};\r\n\tconst handleOk = () => {\r\n\t\tsetConfirmLoading(true);\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(SET_PHOTO(photoFinish));\r\n\t\t\tsetIsModalOpen(false);\r\n\t\t\tsetConfirmLoading(false);\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tconst handleCancel = () => {\r\n\t\tsetIsModalOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Icard>\r\n\t\t\t<div>\r\n\t\t\t\t<div style={{ marginBottom: '20px', textAlign: 'center' }}>\r\n\t\t\t\t\t<span onClick={openPhoto}>\r\n\t\t\t\t\t\t<Avatar src={initImg as string} size={200} icon={<AntDesignOutlined />} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ResetPassword></ResetPassword>\r\n\t\t\t</div>\r\n\t\t\t<Imodal title=\"修改头像\" open={isModalOpen} confirmLoading={confirmLoading} onOkOrCancel={onOkOrCancel} width={800}>\r\n\t\t\t\t<EditPhoto photoFinish={photoFinish} setPhotoFinish={setPhotoFinish}></EditPhoto>\r\n\t\t\t</Imodal>\r\n\t\t</Icard>\r\n\t);\r\n};\r\n\r\nexport default MyCenter;\r\n"],"names":["_ref","updatepPhoto","setPhotoFinish","cropperRef","useRef","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_jsx","Loading","children","Cropper","src","style","height","width","initialAspectRatio","guides","crop","imageElement","current","cropper","getCroppedCanvas","toDataURL","ref","photoFinish","setUpdatepPhoto","_jsxs","Row","gutter","align","Col","span","Photo","Avatar","size","icon","AntDesignOutlined","marginTop","Upload","name","showUploadList","beforeUpload","file","getBase64","base64Url","Button","UploadOutlined","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","location","useLocation","_Form$useForm","Form","useForm","form","useEffect","_location$state","state","setFieldsValue","userName","undefined","labelCol","offset","wrapperCol","onFinish","values","onFinishFailed","errorInfo","Item","label","rules","required","message","Input","Password","validator","rule","value","getFieldValue","Promise","reject","Error","resolve","type","htmlType","dispatch","useAppDispatch","isModalOpen","setIsModalOpen","_useState3","_useState4","confirmLoading","setConfirmLoading","initImg","useAppSelector","GET_SELECTOR_PHOTO","_useState5","_useState6","Icard","marginBottom","textAlign","onClick","ResetPassword","Imodal","title","open","onOkOrCancel","setTimeout","SET_PHOTO","EditPhoto"],"sourceRoot":""}